{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import useStyles from\"./messageInput.module\";import SendSvg from\"../../../assets/icons/sendSvg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MessageInput=function MessageInput(_ref){var curuser=_ref.curuser,chanInf=_ref.chanInf,channel=_ref.channel,onMessageSent=_ref.onMessageSent;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useWindowDimensions=useWindowDimensions(),width=_useWindowDimensions.width,height=_useWindowDimensions.height;var styles=useStyles();var username='admin';var password='root';var handleSend=function(){var _ref2=_asyncToGenerator(function*(){if(message){try{if(channel){var requestBody={currentUsername:curuser,message:message,channelName:chanInf.name};var response=yield fetch('https://messengerproject-production.up.railway.app/api/channels/add_message',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)},body:JSON.stringify(requestBody)});if(response.ok){console.log('Message sent successfully');setMessage('');onMessageSent();}else{console.log('Failed to send message');}}else{var _requestBody={currentUsername:curuser,otherUsername:chanInf,message:message};var _response=yield fetch('https://messengerproject-production.up.railway.app/api/chats/add_message',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)},body:JSON.stringify(_requestBody)});if(_response.ok){console.log('Message sent successfully');setMessage('');onMessageSent();}else{console.log('Failed to send message');}}}catch(error){console.error('Error sending message:',error);}}});return function handleSend(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:styles.container,children:[_jsx(TextInput,{style:styles.input,placeholder:\"Type your message here...\",value:message,onChangeText:setMessage}),_jsx(TouchableOpacity,{style:styles.sendButton,onPress:handleSend,children:_jsx(SendSvg,{})})]});};export default MessageInput;","map":{"version":3,"names":["React","useState","View","StyleSheet","TouchableOpacity","TextInput","useWindowDimensions","useStyles","SendSvg","jsx","_jsx","jsxs","_jsxs","MessageInput","_ref","curuser","chanInf","channel","onMessageSent","_useState","_useState2","_slicedToArray","message","setMessage","_useWindowDimensions","width","height","styles","username","password","handleSend","_ref2","_asyncToGenerator","requestBody","currentUsername","channelName","name","response","fetch","method","headers","btoa","body","JSON","stringify","ok","console","log","otherUsername","error","apply","arguments","style","container","children","input","placeholder","value","onChangeText","sendButton","onPress"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/inputs/messageInput/messageInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, TextInput } from 'react-native-web';\r\nimport { useWindowDimensions } from 'react-native-web';\r\nimport useStyles from './messageInput.module';\r\nimport SendSvg from '../../../assets/icons/sendSvg';\r\n\r\nconst MessageInput = ({ curuser, chanInf, channel, onMessageSent }) => {\r\n  const [message, setMessage] = useState('');\r\n  const { width, height } = useWindowDimensions();\r\n  const styles = useStyles();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const handleSend = async () => {\r\n    if (message) {\r\n      try {\r\n        if (channel) {\r\n          // Use existing API endpoint for channel messages\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            message: message,\r\n            channelName: chanInf.name,\r\n          };\r\n    \r\n          const response = await fetch('https://messengerproject-production.up.railway.app/api/channels/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            console.log('Message sent successfully');\r\n            setMessage('');\r\n            onMessageSent(); // Invoke the callback to trigger chat data fetching\r\n          } else {\r\n            console.log('Failed to send message');\r\n          }\r\n        } else {\r\n          // Use custom API endpoint for direct messages\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            otherUsername: chanInf,\r\n            message: message,\r\n          };\r\n    \r\n          const response = await fetch('https://messengerproject-production.up.railway.app/api/chats/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            console.log('Message sent successfully');\r\n            setMessage('');\r\n            onMessageSent(); // Invoke the callback to trigger chat data fetching\r\n          } else {\r\n            console.log('Failed to send message');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Type your message here...\"\r\n        value={message}\r\n        onChangeText={setMessage}\r\n      />\r\n      <TouchableOpacity style={styles.sendButton} onPress={handleSend}>\r\n        <SendSvg />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}