{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useState,useRef,useEffect,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{useFocusEffect}from'@react-navigation/native';import useStyles from\"./styles/mainAuthScreen.module\";import HeaderButton from\"../components/buttons/headerButton\";import ChangeAvatar from\"../components/Avatar/ChangeAvatar/changeAvatar\";import BackSvg from\"../assets/icons/backSvg\";import CrossSvg from\"../assets/icons/crossSvg\";import AddSvg from\"../assets/icons/addSvg\";import NicknameInput from\"../components/inputs/nicknameInput/nicknameInput\";import AsyncStorage from'@react-native-async-storage/async-storage';import{ImageContext}from\"../context/ImageContext\";import AuthContext from\"../context/AuthContext\";import{setProfileNickname,getProfileNickname,getEmail}from\"../context/AsyncStorageUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProfileScreen(_ref){var navigation=_ref.navigation;var styles=useStyles();var _useContext=useContext(ImageContext),selectedImage=_useContext.selectedImage;var _useContext2=useContext(AuthContext),user=_useContext2.user,updateUser=_useContext2.updateUser;var _useState=useState({name:(user==null?void 0:user.name)||''}),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var isFormValid=inputText.name;var username='admin';var password='root';var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),userText=_useState4[0],setUserText=_useState4[1];useFocusEffect(React.useCallback(function(){fetchEmail();},[user]));var fetchEmail=function(){var _ref2=_asyncToGenerator(function*(){try{var email=yield getEmail();if(email&&email!==userText){setUserText(email);}else if(!email&&!userText){setUserText((user==null?void 0:user.email)||'');}}catch(error){console.log('Error retrieving profile email:',error);}});return function fetchEmail(){return _ref2.apply(this,arguments);};}();var emailContainerRef=useRef(null);var _useState5=useState(36),_useState6=_slicedToArray(_useState5,2),emailFontSize=_useState6[0],setEmailFontSize=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showInputField=_useState8[0],setShowInputField=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),rotationDeg=_useState10[0],setRotationDeg=_useState10[1];useEffect(function(){handleEmailLayout();fetchSavedNickname();},[]);var handleEmailLayout=function handleEmailLayout(){var emailContainerWidth=emailContainerRef.current.offsetWidth;var desiredMaxWidth=300;var desiredMaxFontSize=36;var emailFontSize=Math.min(desiredMaxFontSize,desiredMaxWidth/emailContainerWidth*desiredMaxFontSize);setEmailFontSize(emailFontSize);};var fetchSavedNickname=function(){var _ref3=_asyncToGenerator(function*(){try{var savedNickname=yield AsyncStorage.getItem('profile_nickname');if(savedNickname){setInputText({name:savedNickname});}}catch(error){console.log('Error fetching saved nickname:',error);}});return function fetchSavedNickname(){return _ref3.apply(this,arguments);};}();var handleAddSvgPress=function(){var _ref4=_asyncToGenerator(function*(){if(showInputField){setShowInputField(false);setRotationDeg(0);try{yield setProfileNickname(inputText.name);if(inputText.name!==user.name){yield updateName(inputText.name);}}catch(error){console.log('Error saving nickname:',error);}}else{setShowInputField(true);setRotationDeg(90);}try{var profileNickname=yield getProfileNickname();console.log('Profile nickname:',profileNickname);}catch(error){console.log('Error retrieving profile nickname:',error);}});return function handleAddSvgPress(){return _ref4.apply(this,arguments);};}();var addSvgStyle={transform:\"rotate(\"+(showInputField?45:0)+\"deg)\",transition:'transform 0.5s ease'};var updateName=function(){var _ref5=_asyncToGenerator(function*(newName){try{var id=user==null?void 0:user.id;if(id){var response=yield fetch(\"https://messengerproject-production.up.railway.app/api/users/\"+id+\"/update/name?name=\"+encodeURIComponent(newName),{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){}else{console.error('Failed to update name');}}}catch(error){console.error('Error updating name:',error);}});return function updateName(_x){return _ref5.apply(this,arguments);};}();return _jsxs(View,{style:styles.containerMain,children:[_jsxs(View,{style:styles.profileSettingsContainer,children:[_jsx(View,{style:{marginBottom:13},children:_jsx(ChangeAvatar,{children:selectedImage})}),_jsxs(View,{style:styles.nicknameContainer,children:[showInputField?_jsx(NicknameInput,{value:inputText.name,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{name:text}));},flex:false}):_jsx(Text,{style:{fontSize:48,fontFamily:'Montserrat-Regular',paddingHorizontal:30},children:inputText.name}),_jsx(TouchableOpacity,{onPress:handleAddSvgPress,children:_jsx(AddSvg,{style:addSvgStyle})})]}),_jsx(View,{style:{borderTopWidth:1,borderBottomWidth:1,borderColor:'#000000',paddingHorizontal:10,paddingVertical:15,width:'80%',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap',marginBottom:13},children:_jsx(View,{ref:emailContainerRef,onLayout:handleEmailLayout,children:_jsx(Text,{style:{color:'#000000',fontSize:emailFontSize,textAlign:'center',fontFamily:'Montserrat-Regular',marginBottom:13},children:userText?userText:user.email})})}),_jsx(View,{children:_jsx(HeaderButton,{title:'Изменить почту',onPress:function onPress(){return navigation.navigate('ChangeEmail');}})}),_jsx(View,{style:{marginBottom:13},children:_jsx(HeaderButton,{title:'Изменить пароль',onPress:function onPress(){return navigation.navigate('ChangePassword');}})})]}),_jsx(View,{style:styles.topLeft,children:_jsx(TouchableHighlight,{onPress:function onPress(){return navigation.navigate('MainAuth');},children:_jsx(BackSvg,{})})})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","View","Text","TouchableHighlight","TouchableOpacity","useFocusEffect","useStyles","HeaderButton","ChangeAvatar","BackSvg","CrossSvg","AddSvg","NicknameInput","AsyncStorage","ImageContext","AuthContext","setProfileNickname","getProfileNickname","getEmail","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useContext","selectedImage","_useContext2","user","updateUser","_useState","name","_useState2","_slicedToArray","inputText","setInputText","isFormValid","username","password","_useState3","_useState4","userText","setUserText","useCallback","fetchEmail","_ref2","_asyncToGenerator","email","error","console","log","apply","arguments","emailContainerRef","_useState5","_useState6","emailFontSize","setEmailFontSize","_useState7","_useState8","showInputField","setShowInputField","_useState9","_useState10","rotationDeg","setRotationDeg","handleEmailLayout","fetchSavedNickname","emailContainerWidth","current","offsetWidth","desiredMaxWidth","desiredMaxFontSize","Math","min","_ref3","savedNickname","getItem","handleAddSvgPress","_ref4","updateName","profileNickname","addSvgStyle","transform","transition","_ref5","newName","id","response","fetch","encodeURIComponent","method","headers","btoa","ok","_x","style","containerMain","children","profileSettingsContainer","marginBottom","nicknameContainer","value","setValue","text","_objectSpread","flex","fontSize","fontFamily","paddingHorizontal","onPress","borderTopWidth","borderBottomWidth","borderColor","paddingVertical","width","overflow","textOverflow","whiteSpace","ref","onLayout","color","textAlign","title","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, TouchableOpacity } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport NicknameInput from '../components/inputs/nicknameInput/nicknameInput';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setProfileNickname, getProfileNickname, getEmail } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user, updateUser } = useContext(AuthContext);\r\n\r\n  // Access the user object from the AuthContext\r\n  const [inputText, setInputText] = useState({\r\n    name: user?.name || '', // Use the user's current name as the initial value if available\r\n  });\r\n  const isFormValid = inputText.name;\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchEmail();\r\n    }, [user])\r\n  );\r\n\r\n  const fetchEmail = async () => {\r\n    try {\r\n      const email = await getEmail();\r\n      if (email && email !== userText) {\r\n        setUserText(email);\r\n      } else if (!email && !userText) {\r\n        setUserText(user?.email || '');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error retrieving profile email:', error);\r\n    }\r\n  };\r\n  const emailContainerRef = useRef(null);\r\n  const [emailFontSize, setEmailFontSize] = useState(36);\r\n\r\n\r\n  const [showInputField, setShowInputField] = useState(false); // Track the visibility of the input field\r\n  const [rotationDeg, setRotationDeg] = useState(0);\r\n\r\n  useEffect(() => {\r\n    handleEmailLayout();\r\n    fetchSavedNickname();\r\n  }, []);\r\n\r\n  const handleEmailLayout = () => {\r\n    const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n    const desiredMaxWidth = 300; // You can adjust this as needed\r\n    const desiredMaxFontSize = 36; // You can adjust this as needed\r\n    const emailFontSize = Math.min(desiredMaxFontSize, (desiredMaxWidth / emailContainerWidth) * desiredMaxFontSize);\r\n    setEmailFontSize(emailFontSize);\r\n  };\r\n\r\n  const fetchSavedNickname = async () => {\r\n    try {\r\n      const savedNickname = await AsyncStorage.getItem('profile_nickname');\r\n      if (savedNickname) {\r\n        setInputText({ name: savedNickname });\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching saved nickname:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSvgPress = async () => {\r\n    if (showInputField) {\r\n      // Save changes and hide the input field\r\n      setShowInputField(false);\r\n      setRotationDeg(0); // Reset the rotation to 0 degrees\r\n      try {\r\n        await setProfileNickname(inputText.name);\r\n        // Call the updateName function only if the name is different from the current value\r\n        if (inputText.name !== user.name) {\r\n          await updateName(inputText.name); // Call the updateName function to send the PUT request\r\n        }\r\n      } catch (error) {\r\n        console.log('Error saving nickname:', error);\r\n      }\r\n    } else {\r\n      // Show the input field and rotate the AddSvg icon\r\n      setShowInputField(true);\r\n      setRotationDeg(90); // Rotate by 90 degrees\r\n    }\r\n\r\n    // Access the profile nickname from AsyncStorage after saving it\r\n    try {\r\n      const profileNickname = await getProfileNickname();\r\n      console.log('Profile nickname:', profileNickname);\r\n    } catch (error) {\r\n      console.log('Error retrieving profile nickname:', error);\r\n    }\r\n  };\r\n\r\n\r\n  // CSS style to apply the rotation transformation to the AddSvg icon\r\n  const addSvgStyle = {\r\n    transform: `rotate(${showInputField ? 45 : 0}deg)`,\r\n    transition: 'transform 0.5s ease', // Smooth transition for rotation animation\r\n  };\r\n\r\n  const updateName = async (newName) => {\r\n    try {\r\n      const id = user?.id; // Assuming the user object has an 'id' property\r\n      if (id) {\r\n        const response = await fetch(`https://messengerproject-production.up.railway.app/api/users/${id}/update/name?name=${encodeURIComponent(newName)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          // Update the user object in the AuthContext if the update is successful\r\n\r\n        } else {\r\n          console.error('Failed to update name');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating name:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.profileSettingsContainer}>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <ChangeAvatar  children={selectedImage}/>\r\n        </View>\r\n        <View style={styles.nicknameContainer}>\r\n          {showInputField ? (\r\n            <NicknameInput\r\n              value={inputText.name}\r\n              setValue={(text) => setInputText({ ...inputText, name: text })}\r\n              flex={false}\r\n            />\r\n          ) : (\r\n            <Text style={{ fontSize: 48, fontFamily: 'Montserrat-Regular', paddingHorizontal: 30 }}>\r\n              {inputText.name}\r\n            </Text>\r\n          )}\r\n          <TouchableOpacity onPress={handleAddSvgPress}>\r\n            <AddSvg style={addSvgStyle} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            borderTopWidth: 1,\r\n            borderBottomWidth: 1,\r\n            borderColor: '#000000',\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 15,\r\n            width: '80%',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            marginBottom: 13,\r\n          }}\r\n        >\r\n          <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n            <Text\r\n              style={{\r\n                color: '#000000',\r\n                fontSize: emailFontSize,\r\n                textAlign: 'center',\r\n                fontFamily: 'Montserrat-Regular',\r\n                marginBottom: 13,\r\n              }}\r\n            >\r\n              {userText ? userText : user.email}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <HeaderButton title={'Изменить почту'} onPress={() => navigation.navigate('ChangeEmail')} />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton title={'Изменить пароль'} onPress={() => navigation.navigate('ChangePassword')} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}