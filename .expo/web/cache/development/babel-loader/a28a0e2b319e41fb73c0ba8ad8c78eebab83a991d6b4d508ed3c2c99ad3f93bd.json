{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"setValue\", \"navigation\", \"unauth\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useStyles from \"./searchInput.modules\";\nimport SearchSvg from \"../../../assets/icons/searchSvg\";\nimport CrossSvg from \"../../../assets/icons/crossSvg\";\nimport SearchBody from \"../../searchBodies/searchBody\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchInput(_ref) {\n  var value = _ref.value,\n    setValue = _ref.setValue,\n    navigation = _ref.navigation,\n    unauth = _ref.unauth,\n    data = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setIsFocused = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDropdownVisible = _useState4[0],\n    setIsDropdownVisible = _useState4[1];\n  var navigationt = useNavigation();\n  var handlePress = function handlePress(channelId) {\n    navigationt.navigate('Channel', {\n      channelId: channelId\n    });\n  };\n  var handlePressUnauth = function handlePressUnauth(channelId) {\n    navigationt.navigate('ChannelUnauth', {\n      channelId: channelId\n    });\n  };\n  var handlePressChat = function handlePressChat(name) {\n    navigationt.navigate('Chat', {\n      name: name\n    });\n  };\n  var styles = useStyles();\n  var handleFocus = function handleFocus() {\n    setIsFocused(true);\n    setIsDropdownVisible(true);\n  };\n  var handleCrossSvgPress = function handleCrossSvgPress() {\n    setValue(\"\");\n    setIsFocused(false);\n    setIsDropdownVisible(false);\n  };\n  var username = 'admin';\n  var password = 'root';\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    results = _useState6[0],\n    setResults = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    resultsUnauth = _useState8[0],\n    setResultsUnauth = _useState8[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:8080/api/channels', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Basic \" + btoa(username + \":\" + password)\n            }\n          });\n          if (response.ok) {\n            var channelData = yield response.json();\n            var formattedResults = [];\n            for (var i = 0; i < channelData.length; i++) {\n              var channel = channelData[i];\n              formattedResults.push({\n                name: channel.name,\n                onPress: handlePress\n              });\n              var userResponse = yield fetch(\"http://localhost:8080/api/users\", {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Basic \" + btoa(username + \":\" + password)\n                }\n              });\n              if (userResponse.ok) {\n                var userData = yield userResponse.json();\n                formattedResults.push({\n                  name: userData.name,\n                  onPress: handlePressChat(),\n                  avatarUrl: userData.image\n                });\n              } else {\n                console.log('Failed to fetch user data');\n              }\n            }\n            setResults(formattedResults);\n          } else {\n            console.log('Failed to fetch channel data');\n          }\n        } catch (error) {\n          console.log('Error fetching channel data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var filteredResults = value ? (unauth ? resultsUnauth : results).filter(function (result) {\n    return result.name.toLowerCase().includes(value.toLowerCase());\n  }) : unauth ? resultsUnauth : results;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.icon,\n      children: _jsx(SearchSvg, {})\n    }), _jsx(TextInput, _objectSpread(_objectSpread({}, data), {}, {\n      placeholderTextColor: \"#7C858E\",\n      value: value,\n      style: [styles.input, {\n        paddingLeft: 36\n      }],\n      onFocus: handleFocus,\n      onChangeText: function onChangeText(text) {\n        return setValue(text);\n      }\n    })), isFocused && _jsx(TouchableOpacity, {\n      onPressIn: handleCrossSvgPress,\n      children: _jsx(CrossSvg, {\n        style: styles.dismissIcon\n      })\n    }), isDropdownVisible && _jsx(ScrollView, {\n      style: styles.dropdown,\n      children: filteredResults.map(function (result, index) {\n        return _jsx(SearchBody, {\n          data: {\n            avatarUrl: result.avatar || null,\n            username: result.name,\n            onPress: result.onPress\n          }\n        }, index);\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","TouchableOpacity","ScrollView","useStyles","SearchSvg","CrossSvg","SearchBody","useNavigation","jsx","_jsx","jsxs","_jsxs","SearchInput","_ref","value","setValue","navigation","unauth","data","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useState3","_useState4","isDropdownVisible","setIsDropdownVisible","navigationt","handlePress","channelId","navigate","handlePressUnauth","handlePressChat","name","styles","handleFocus","handleCrossSvgPress","username","password","_useState5","_useState6","results","setResults","_useState7","_useState8","resultsUnauth","setResultsUnauth","fetchData","_ref2","_asyncToGenerator","response","fetch","method","headers","btoa","ok","channelData","json","formattedResults","i","length","channel","push","onPress","userResponse","userData","avatarUrl","image","console","log","error","apply","arguments","filteredResults","filter","result","toLowerCase","includes","style","container","children","icon","_objectSpread","placeholderTextColor","input","paddingLeft","onFocus","onChangeText","text","onPressIn","dismissIcon","dropdown","map","index","avatar"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/inputs/searchInput/searchInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, TouchableOpacity, ScrollView } from \"react-native-web\";\r\nimport useStyles from \"./searchInput.modules\";\r\nimport SearchSvg from \"../../../assets/icons/searchSvg\";\r\nimport CrossSvg from \"../../../assets/icons/crossSvg\";\r\nimport SearchBody from \"../../searchBodies/searchBody\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function SearchInput({ value, setValue, navigation, unauth, ...data }) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n\r\n  const navigationt = useNavigation();\r\n\r\n  const handlePress = (channelId) => {\r\n    navigationt.navigate('Channel', { channelId });\r\n  };\r\n\r\n  const handlePressUnauth = (channelId) => {\r\n    navigationt.navigate('ChannelUnauth', { channelId });\r\n  };\r\n  const handlePressChat = (name) => {\r\n    navigationt.navigate('Chat', { name });\r\n  };\r\n\r\n  const styles = useStyles();\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    setIsDropdownVisible(true);\r\n  };\r\n\r\n  \r\n  const handleCrossSvgPress = () => {\r\n    setValue(\"\");\r\n    setIsFocused(false);\r\n    setIsDropdownVisible(false);\r\n  };\r\n\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [results, setResults] = useState([]);\r\n  const [resultsUnauth, setResultsUnauth] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/channels', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n    \r\n        if (response.ok) {\r\n          const channelData = await response.json();\r\n    \r\n          const formattedResults = [];\r\n          for (let i = 0; i < channelData.length; i++) {\r\n            const channel = channelData[i];\r\n    \r\n            // Add channel object to the formattedResults array\r\n            formattedResults.push({\r\n              name: channel.name,\r\n              onPress: handlePress,\r\n            });\r\n    \r\n            // Fetch user data for the channel\r\n            const userResponse = await fetch(`http://localhost:8080/api/users`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n              },\r\n            });\r\n    \r\n            if (userResponse.ok) {\r\n              const userData = await userResponse.json();\r\n    \r\n              // Add user object to the formattedResults array\r\n              formattedResults.push({\r\n                name: userData.name, // Assuming name property exists in user data\r\n                onPress:handlePressChat(),\r\n                avatarUrl: userData.image, // Assuming image property exists in user data\r\n              });\r\n            } else {\r\n              console.log('Failed to fetch user data');\r\n            }\r\n          }\r\n    \r\n          setResults(formattedResults);\r\n          \r\n        } else {\r\n          console.log('Failed to fetch channel data');\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching channel data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  const filteredResults = value\r\n    ? (unauth ? resultsUnauth : results).filter((result) =>\r\n        result.name.toLowerCase().includes(value.toLowerCase())\r\n      )\r\n    : (unauth ? resultsUnauth : results);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.icon}>\r\n        <SearchSvg />\r\n      </View>\r\n      <TextInput\r\n        {...data}\r\n        placeholderTextColor=\"#7C858E\"\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 36 }]}\r\n        onFocus={handleFocus}\r\n       \r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n      {isFocused && (\r\n        <TouchableOpacity onPressIn={handleCrossSvgPress}>\r\n          <CrossSvg style={styles.dismissIcon}  />\r\n        </TouchableOpacity>\r\n      )}\r\n      {isDropdownVisible && (\r\n        <ScrollView style={styles.dropdown}>\r\n          {filteredResults.map((result, index) => (\r\n            <SearchBody\r\n              key={index}\r\n              data={{\r\n                avatarUrl: result.avatar || null,\r\n                username: result.name,\r\n                onPress: result.onPress,\r\n              }}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}