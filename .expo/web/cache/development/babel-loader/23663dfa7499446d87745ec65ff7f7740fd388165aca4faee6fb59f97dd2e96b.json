{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChangePasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      newPassword: '',\n      password: '',\n      confirmPassword: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    updateUser = _useContext.updateUser;\n  var username = 'admin';\n  var password = 'root';\n  var isButtonDisabled = function isButtonDisabled() {\n    return !inputText.newPassword || !inputText.password || !inputText.confirmPassword;\n  };\n  var changePassword = function changePassword() {\n    if (inputText.password !== (user == null ? void 0 : user.password)) {\n      alert('Error', 'Passwords do not match');\n      return;\n    }\n    if (inputText.newPassword !== inputText.confirmPassword) {\n      alert('Error', 'New password do not match the confirmation one');\n      return;\n    }\n    var userId = user == null ? void 0 : user.id;\n    var newPassword = encodeURIComponent(inputText.newPassword);\n    var apiUrl = \"http://localhost:8080/api/users/\" + userId + \"/update/password?newPassword=\" + newPassword;\n    fetch(apiUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Basic \" + btoa(username + \":\" + password)\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        alert('Success', 'Password updated successfully');\n      } else {\n        Alert.alert('Error', 'Failed to update password');\n      }\n    }).catch(function (error) {\n      console.error('Error updating password:', error);\n      alert('Error', 'Failed to update password');\n    });\n  };\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: 'Пароль',\n            type: 'password',\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.newPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                newPassword: text\n              }));\n            },\n            placeholder: 'Новый пароль',\n            type: 'password',\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.confirmPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                confirmPassword: text\n              }));\n            },\n            placeholder: 'Подтвердить пароль',\n            type: 'password',\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: 'Изменить пароль',\n          onPress: changePassword,\n          disabled: isButtonDisabled()\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Profile');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}\nexport default ChangePasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","Button","TouchableHighlight","Alert","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","jsx","_jsx","jsxs","_jsxs","ChangePasswordScreen","_ref","navigation","styles","_useState","newPassword","password","confirmPassword","_useState2","_slicedToArray","inputText","setInputText","_useContext","user","updateUser","username","isButtonDisabled","changePassword","alert","userId","id","encodeURIComponent","apiUrl","fetch","method","headers","btoa","then","response","ok","catch","error","console","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","disabled","topLeft","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangePasswordScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Button, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n\r\n  const changePassword = () => {\r\n    if (inputText.password !== user?.password) {\r\n      alert('Error', 'Passwords do not match');\r\n      return;\r\n    }\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      alert('Error', 'New password do not match the confirmation one');\r\n      return;\r\n    }\r\n  \r\n    const userId = user?.id;\r\n    const newPassword = encodeURIComponent(inputText.newPassword);\r\n    const apiUrl = `http://localhost:8080/api/users/${userId}/update/password?newPassword=${newPassword}`;\r\n  \r\n    fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert('Success', 'Password updated successfully');\r\n        } else {\r\n          Alert.alert('Error', 'Failed to update password');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating password:', error);\r\n        alert('Error', 'Failed to update password');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder={'Пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder={'Новый пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder={'Подтвердить пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton title={'Изменить пароль'} onPress={changePassword} disabled={isButtonDisabled()} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}