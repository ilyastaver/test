{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ChangeSvg from \"../../assets/icons/changeSvg\";\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\nimport AdminSvg from \"../../assets/icons/adminSvg\";\nimport AdminFocusSvg from \"../../assets/icons/adminFocusSvg\";\nimport HeaderButton from \"../buttons/headerButton\";\nimport DataInput from \"../inputs/textInput/textInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsBody(_ref) {\n  var role = _ref.role,\n    username = _ref.username,\n    onPress = _ref.onPress,\n    containerStyle = _ref.containerStyle;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHovered = _useState2[0],\n    setIsHovered = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showPopup = _useState4[0],\n    setShowPopup = _useState4[1];\n  var _useState5 = useState({\n      nickname: '',\n      role: role\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputText = _useState6[0],\n    setInputText = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAdmin = _useState8[0],\n    setIsAdmin = _useState8[1];\n  var handleDelete = function handleDelete() {};\n  var isFormValid = inputText.role;\n  var handleAdminClick = function handleAdminClick() {\n    setIsAdmin(!isAdmin);\n  };\n  var handleRoleChange = function handleRoleChange(text) {\n    setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n      role: text\n    }));\n  };\n  var handleSaveChanges = function handleSaveChanges() {\n    onPress(inputText.nickname, inputText.role);\n    setShowPopup(false);\n  };\n  return _jsxs(TouchableOpacity, {\n    style: [styles.container, containerStyle, isHovered && {\n      backgroundColor: \"#E7DEDE\"\n    }],\n    onMouseEnter: function onMouseEnter() {\n      return setIsHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setIsHovered(false);\n    },\n    children: [_jsxs(View, {\n      style: styles.content,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleDelete,\n        children: _jsx(DeleteSvg, {})\n      }), _jsx(Text, {\n        style: styles.username,\n        children: username\n      }), _jsx(Text, {\n        style: styles.role,\n        children: inputText.role\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setShowPopup(true);\n        },\n        children: _jsx(ChangeSvg, {})\n      })]\n    }), _jsx(Modal, {\n      visible: showPopup,\n      transparent: true,\n      children: _jsxs(View, {\n        style: styles.popupContainer,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"\n        }), _jsxs(View, {\n          style: {\n            marginBottom: 13,\n            alignItems: 'center'\n          },\n          children: [_jsx(DataInput, {\n            value: inputText.role,\n            setValue: handleRoleChange,\n            placeholder: \"\",\n            type: \"nickname\",\n            flex: true\n          }), _jsx(TouchableOpacity, {\n            onPress: handleAdminClick,\n            children: isAdmin ? _jsx(AdminFocusSvg, {}) : _jsx(AdminSvg, {})\n          })]\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(View, {\n            children: _jsx(HeaderButton, {\n              title: \"Сохранить\",\n              onPress: handleSaveChanges,\n              disabled: !isFormValid\n            })\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 26,\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  },\n  text: {\n    color: '#000000',\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 13\n  },\n  content: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  username: {\n    fontSize: 24,\n    color: \"#000000\",\n    marginLeft: 20\n  },\n  role: {\n    fontSize: 24,\n    color: \"#0076B9\",\n    marginLeft: 20\n  },\n  popupContainer: {\n    backgroundColor: '#E7DEDE',\n    borderRadius: 35,\n    padding: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 7,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{\n      translateX: '-50%'\n    }, {\n      translateY: '-50%'\n    }],\n    width: '20%',\n    height: '20%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","Text","TouchableOpacity","Image","Modal","ChangeSvg","DeleteSvg","AdminSvg","AdminFocusSvg","HeaderButton","DataInput","jsx","_jsx","jsxs","_jsxs","SettingsBody","_ref","role","username","onPress","containerStyle","_useState","_useState2","_slicedToArray","isHovered","setIsHovered","_useState3","_useState4","showPopup","setShowPopup","_useState5","nickname","_useState6","inputText","setInputText","_useState7","_useState8","isAdmin","setIsAdmin","handleDelete","isFormValid","handleAdminClick","handleRoleChange","text","_objectSpread","handleSaveChanges","style","styles","container","backgroundColor","onMouseEnter","onMouseLeave","children","content","visible","transparent","popupContainer","marginBottom","alignItems","value","setValue","placeholder","type","flex","title","disabled","create","borderRadius","paddingVertical","paddingHorizontal","color","fontSize","textAlign","flexDirection","justifyContent","marginLeft","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","position","top","left","transform","translateX","translateY"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/settingsBody/settingsBody.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  Modal,\r\n} from \"react-native-web\";\r\nimport ChangeSvg from \"../../assets/icons/changeSvg\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport AdminSvg from \"../../assets/icons/adminSvg\";\r\nimport AdminFocusSvg from \"../../assets/icons/adminFocusSvg\";\r\nimport HeaderButton from \"../buttons/headerButton\";\r\nimport DataInput from \"../inputs/textInput/textInput\";\r\n\r\nexport default function SettingsBody({ role, username, onPress, containerStyle }) {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n      nickname: '',\r\n      role: role, // add state for role input value\r\n  });\r\n  const [isAdmin, setIsAdmin] = useState(false); // add state for AdminSvg icon\r\n\r\n  const handleDelete = () => {\r\n    // code to delete component goes here\r\n  };\r\n\r\n  const isFormValid = inputText.role;\r\n\r\n  const handleAdminClick = () => {\r\n    setIsAdmin(!isAdmin); // toggle AdminSvg icon\r\n  };\r\n\r\n  const handleRoleChange = (text) => {\r\n    setInputText({ ...inputText, role: text }); // update role input value\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    // code to save changes goes here\r\n    onPress(inputText.nickname, inputText.role);\r\n    setShowPopup(false); // hide modal\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.container,\r\n        containerStyle,\r\n        isHovered && { backgroundColor: \"#E7DEDE\" },\r\n      ]}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <View style={styles.content}>\r\n        <TouchableOpacity onPress={handleDelete}>\r\n          <DeleteSvg />\r\n        </TouchableOpacity>\r\n        <Text style={styles.username}>{username}</Text>\r\n        <Text style={styles.role}>{inputText.role}</Text>\r\n        <TouchableOpacity onPress={() => setShowPopup(true)}>\r\n          <ChangeSvg />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center', }}>\r\n            <DataInput\r\n              value={inputText.role}\r\n              setValue={handleRoleChange}\r\n              placeholder={\"\"}\r\n              type={\"nickname\"}\r\n              flex={true}\r\n            />\r\n            <TouchableOpacity onPress={handleAdminClick}>\r\n              {isAdmin ? <AdminFocusSvg /> : <AdminSvg />}\r\n            </TouchableOpacity>\r\n          </View>\r\n          <TouchableOpacity>\r\n            <View >\r\n              <HeaderButton title={\"Сохранить\"} onPress={handleSaveChanges} disabled={!isFormValid} />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 26,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n  },\r\n  text:{\r\n    color: '#000000',\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n    marginBottom: 13\r\n},\r\n  content: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  username: {\r\n    fontSize: 24,\r\n    color: \"#000000\",\r\n    marginLeft: 20,\r\n  },\r\n  role: {\r\n    fontSize: 24,\r\n    color: \"#0076B9\",\r\n    marginLeft: 20,\r\n  },\r\n  popupContainer: {\r\n    backgroundColor: '#E7DEDE',\r\n    borderRadius: 35,\r\n    padding: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 2, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 7,\r\n    position: 'absolute',\r\n    top: '50%', // set top to 50%\r\n    left: '50%', // set left to 50%\r\n    transform: [{ translateX: '-50%' }, { translateY: '-50%' }], // adjust position based on element size\r\n    width: '20%',\r\n    height: '20%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column', // add this line to make items centered in a column\r\n  }, \r\n});\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AASxC,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,QAAQ;AACf,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,SAAS;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,cAAc,GAAAJ,IAAA,CAAdI,cAAc;EAC5E,IAAAC,SAAA,GAAkCvB,QAAQ,CAAC,KAAK,CAAC;IAAAwB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAkC5B,QAAQ,CAAC,KAAK,CAAC;IAAA6B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAkChC,QAAQ,CAAC;MACvCiC,QAAQ,EAAE,EAAE;MACZd,IAAI,EAAEA;IACV,CAAC,CAAC;IAAAe,UAAA,GAAAT,cAAA,CAAAO,UAAA;IAHKG,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAI9B,IAAAG,UAAA,GAA8BrC,QAAQ,CAAC,KAAK,CAAC;IAAAsC,UAAA,GAAAb,cAAA,CAAAY,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS,CAE3B,CAAC;EAED,IAAMC,WAAW,GAAGP,SAAS,CAAChB,IAAI;EAElC,IAAMwB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7BH,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAK;IACjCT,YAAY,CAAAU,aAAA,CAAAA,aAAA,KAAMX,SAAS;MAAEhB,IAAI,EAAE0B;IAAI,EAAE,CAAC;EAC5C,CAAC;EAED,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAE9B1B,OAAO,CAACc,SAAS,CAACF,QAAQ,EAAEE,SAAS,CAAChB,IAAI,CAAC;IAC3CY,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OACEf,KAAA,CAACZ,gBAAgB;IACf4C,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChB5B,cAAc,EACdI,SAAS,IAAI;MAAEyB,eAAe,EAAE;IAAU,CAAC,CAC3C;IACFC,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMzB,YAAY,CAAC,IAAI,CAAC;IAAA,CAAC;IACvC0B,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAM1B,YAAY,CAAC,KAAK,CAAC;IAAA,CAAC;IAAA2B,QAAA,GAExCtC,KAAA,CAACf,IAAI;MAAC+C,KAAK,EAAEC,MAAM,CAACM,OAAQ;MAAAD,QAAA,GAC1BxC,IAAA,CAACV,gBAAgB;QAACiB,OAAO,EAAEoB,YAAa;QAAAa,QAAA,EACtCxC,IAAA,CAACN,SAAS,IAAE;MAAC,CACG,CAAC,EACnBM,IAAA,CAACX,IAAI;QAAC6C,KAAK,EAAEC,MAAM,CAAC7B,QAAS;QAAAkC,QAAA,EAAElC;MAAQ,CAAO,CAAC,EAC/CN,IAAA,CAACX,IAAI;QAAC6C,KAAK,EAAEC,MAAM,CAAC9B,IAAK;QAAAmC,QAAA,EAAEnB,SAAS,CAAChB;MAAI,CAAO,CAAC,EACjDL,IAAA,CAACV,gBAAgB;QAACiB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMU,YAAY,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAuB,QAAA,EAClDxC,IAAA,CAACP,SAAS,IAAE;MAAC,CACG,CAAC;IAAA,CACf,CAAC,EAEPO,IAAA,CAACR,KAAK;MAACkD,OAAO,EAAE1B,SAAU;MAAC2B,WAAW,EAAE,IAAK;MAAAH,QAAA,EAC3CtC,KAAA,CAACf,IAAI;QAAC+C,KAAK,EAAEC,MAAM,CAACS,cAAe;QAAAJ,QAAA,GACjCxC,IAAA,CAACX,IAAI;UAAC6C,KAAK,EAAEC,MAAM,CAACJ,IAAK;UAAAS,QAAA,EAAC;QAAe,CAAM,CAAC,EAChDtC,KAAA,CAACf,IAAI;UAAC+C,KAAK,EAAE;YAAEW,YAAY,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAU,CAAE;UAAAN,QAAA,GACvDxC,IAAA,CAACF,SAAS;YACRiD,KAAK,EAAE1B,SAAS,CAAChB,IAAK;YACtB2C,QAAQ,EAAElB,gBAAiB;YAC3BmB,WAAW,EAAE,EAAG;YAChBC,IAAI,EAAE,UAAW;YACjBC,IAAI,EAAE;UAAK,CACZ,CAAC,EACFnD,IAAA,CAACV,gBAAgB;YAACiB,OAAO,EAAEsB,gBAAiB;YAAAW,QAAA,EACzCf,OAAO,GAAGzB,IAAA,CAACJ,aAAa,IAAE,CAAC,GAAGI,IAAA,CAACL,QAAQ,IAAE;UAAC,CAC3B,CAAC;QAAA,CACf,CAAC,EACPK,IAAA,CAACV,gBAAgB;UAAAkD,QAAA,EACfxC,IAAA,CAACb,IAAI;YAAAqD,QAAA,EACHxC,IAAA,CAACH,YAAY;cAACuD,KAAK,EAAE,WAAY;cAAC7C,OAAO,EAAE0B,iBAAkB;cAACoB,QAAQ,EAAE,CAACzB;YAAY,CAAE;UAAC,CACpF;QAAC,CACS,CAAC;MAAA,CACf;IAAC,CACF,CAAC;EAAA,CACQ,CAAC;AAEvB;AAEA,IAAMO,MAAM,GAAG/C,UAAU,CAACkE,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTC,eAAe,EAAE,SAAS;IAC1BkB,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACD1B,IAAI,EAAC;IACH2B,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBf,YAAY,EAAE;EAClB,CAAC;EACCJ,OAAO,EAAE;IACPoB,aAAa,EAAE,KAAK;IACpBf,UAAU,EAAE,QAAQ;IACpBgB,cAAc,EAAE;EAClB,CAAC;EACDxD,QAAQ,EAAE;IACRqD,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE,SAAS;IAChBK,UAAU,EAAE;EACd,CAAC;EACD1D,IAAI,EAAE;IACJsD,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE,SAAS;IAChBK,UAAU,EAAE;EACd,CAAC;EACDnB,cAAc,EAAE;IACdP,eAAe,EAAE,SAAS;IAC1BkB,YAAY,EAAE,EAAE;IAChBS,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAO,CAAC,EAAE;MAAEC,UAAU,EAAE;IAAO,CAAC,CAAC;IAC3DV,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbN,cAAc,EAAE,QAAQ;IACxBhB,UAAU,EAAE,QAAQ;IACpBe,aAAa,EAAE;EACjB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}