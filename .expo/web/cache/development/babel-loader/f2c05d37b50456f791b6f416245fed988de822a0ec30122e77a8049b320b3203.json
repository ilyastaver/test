{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChangePasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      newPassword: '',\n      password: '',\n      confirmPassword: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var isButtonDisabled = function isButtonDisabled() {\n    return !inputText.newPassword || !inputText.password || !inputText.confirmPassword || inputText.newPassword !== inputText.confirmPassword;\n  };\n  return _jsx(View, {\n    style: styles.containerMain,\n    children: _jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: \"Пароль\",\n            type: \"password\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.newPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                newPassword: text\n              }));\n            },\n            placeholder: \"Новый пароль\",\n            type: \"password\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.confirmPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                confirmPassword: text\n              }));\n            },\n            placeholder: \"Подтвердить пароль\",\n            type: \"password\",\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить пароль\",\n          onPress: function onPress() {\n            return navigation.navigate('Auth');\n          },\n          disabled: isButtonDisabled()\n        })\n      })]\n    })\n  });\n}\nexport default ChangePasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","TouchableHighlight","useStyles","DataInput","HeaderButton","jsx","_jsx","jsxs","_jsxs","ChangePasswordScreen","_ref","navigation","styles","_useState","newPassword","password","confirmPassword","_useState2","_slicedToArray","inputText","setInputText","isButtonDisabled","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","navigate","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangePasswordScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n \r\n  });\r\n\r\n  // Функция, которая проверяет, заполнены ли все поля и равны ли поля новый пароль и подтвердить пароль\r\n  const isButtonDisabled = () => {\r\n    return !inputText.newPassword || !inputText.password || !inputText.confirmPassword  || inputText.newPassword !== inputText.confirmPassword;\r\n  }\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n        <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder={\"Пароль\"}\r\n              type={\"password\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder={\"Новый пароль\"}\r\n              type={\"password\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder={\"Подтвердить пароль\"}\r\n              type={\"password\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View >\r\n          <HeaderButton title={\"Изменить пароль\"} onPress={() => navigation.navigate('Auth')} disabled={isButtonDisabled()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}