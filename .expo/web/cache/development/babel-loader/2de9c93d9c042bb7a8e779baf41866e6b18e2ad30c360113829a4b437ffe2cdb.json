{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport SettingsBody from \"../components/settingsBody/settingsBody\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAdmin = _useState2[0],\n    SetIsAdmin = _useState2[1];\n  var handleRoleChange = function handleRoleChange(text) {\n    setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n      role: text\n    }));\n    onRoleChange(text);\n  };\n  var role = '';\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsx(View, {\n      style: styles.settingsContainer,\n      children: _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onPress: handleDeleteChannel,\n          onRoleChange: handleRoleChange\n        })\n      })\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Channel');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: 'Удалить канал',\n        onPress: function onPress() {\n          return console.log(\"Delete\");\n        },\n        disabled: !isAdmin\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableHighlight","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","BackSvg","SettingsBody","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","styles","_useState","_useState2","_slicedToArray","isAdmin","SetIsAdmin","handleRoleChange","text","setInputText","_objectSpread","inputText","role","onRoleChange","style","containerMain","children","settingsContainer","flex","scrollbarWidth","flexDirection","username","onPress","handleDeleteChannel","topLeft","navigate","bottomLeft","title","console","log","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\n\r\nexport default function SettingsScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [isAdmin, SetIsAdmin] = useState(false);\r\n    const handleRoleChange = (text) => {\r\n        setInputText({ ...inputText, role: text });\r\n        onRoleChange(text);\r\n    };\r\n    const role = ''\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.settingsContainer}>\r\n                <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    <SettingsBody\r\n                        role={role}\r\n                        username={\"John Doe\"}\r\n                        onPress={handleDeleteChannel}\r\n                        onRoleChange={handleRoleChange}\r\n                    />\r\n                </ScrollView>\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('Channel')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <View style={styles.bottomLeft}>\r\n                <HeaderButton title={'Удалить канал'} onPress={() => console.log(\"Delete\")} disabled={!isAdmin} />\r\n            </View>\r\n        </View>\r\n    );\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,OAAO;AACd,OAAOC,YAAY;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnE,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/C,IAAMC,MAAM,GAAGZ,SAAS,CAAC,CAAC;EAC1B,IAAAa,SAAA,GAA8BnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAK;IAC/BC,YAAY,CAAAC,aAAA,CAAAA,aAAA,KAAMC,SAAS;MAAEC,IAAI,EAAEJ;IAAI,EAAE,CAAC;IAC1CK,YAAY,CAACL,IAAI,CAAC;EACtB,CAAC;EACD,IAAMI,IAAI,GAAG,EAAE;EAEf,OACIf,KAAA,CAACb,IAAI;IAAC8B,KAAK,EAAEb,MAAM,CAACc,aAAc;IAAAC,QAAA,GAC9BrB,IAAA,CAACX,IAAI;MAAC8B,KAAK,EAAEb,MAAM,CAACgB,iBAAkB;MAAAD,QAAA,EAClCrB,IAAA,CAACR,UAAU;QAAC2B,KAAK,EAAE;UAAEI,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE,CAAC;UAAEC,aAAa,EAAE;QAAS,CAAE;QAAAJ,QAAA,EACvErB,IAAA,CAACF,YAAY;UACTmB,IAAI,EAAEA,IAAK;UACXS,QAAQ,EAAE,UAAW;UACrBC,OAAO,EAAEC,mBAAoB;UAC7BV,YAAY,EAAEN;QAAiB,CAClC;MAAC,CACM;IAAC,CACX,CAAC,EACPZ,IAAA,CAACX,IAAI;MAAC8B,KAAK,EAAEb,MAAM,CAACuB,OAAQ;MAAAR,QAAA,EACxBrB,IAAA,CAACT,kBAAkB;QAACoC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMtB,UAAU,CAACyB,QAAQ,CAAC,SAAS,CAAC;QAAA,CAAC;QAAAT,QAAA,EAC9DrB,IAAA,CAACH,OAAO,IAAE;MAAC,CACK;IAAC,CACnB,CAAC,EACPG,IAAA,CAACX,IAAI;MAAC8B,KAAK,EAAEb,MAAM,CAACyB,UAAW;MAAAV,QAAA,EAC3BrB,IAAA,CAACJ,YAAY;QAACoC,KAAK,EAAE,eAAgB;QAACL,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMM,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QAAA,CAAC;QAACC,QAAQ,EAAE,CAACzB;MAAQ,CAAE;IAAC,CAChG,CAAC;EAAA,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}