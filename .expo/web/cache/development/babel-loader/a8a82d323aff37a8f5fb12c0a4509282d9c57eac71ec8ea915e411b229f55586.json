{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport ChangeAvatar from \"../components/Avatar/ChangeAvatar/changeAvatar\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport CrossSvg from \"../assets/icons/crossSvg\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport NicknameInput from \"../components/inputs/nicknameInput/nicknameInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      nickname: 'Initial Value'\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var isFormValid = inputText.nickname;\n  var emailContainerRef = useRef(null);\n  var _useState3 = useState(36),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emailFontSize = _useState4[0],\n    setEmailFontSize = _useState4[1];\n  var _useState5 = useState(\"ilia.stavier@mail.ru\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    emailText = _useState6[0],\n    setEmailText = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showInputField = _useState8[0],\n    setShowInputField = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    rotationDeg = _useState10[0],\n    setRotationDeg = _useState10[1];\n  useEffect(function () {\n    handleEmailLayout();\n  }, []);\n  var handleEmailLayout = function handleEmailLayout() {\n    var emailContainerWidth = emailContainerRef.current.offsetWidth;\n    var desiredMaxWidth = 300;\n    var desiredMaxFontSize = 36;\n    var emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\n    setEmailFontSize(emailFontSize);\n  };\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.profileSettingsContainer,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(ChangeAvatar, {})\n      }), _jsxs(View, {\n        style: styles.nicknameContainer,\n        children: [_jsx(NicknameInput, {\n          value: inputText.nickname,\n          setValue: function setValue(text) {\n            return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n              nickname: text\n            }));\n          },\n          flex: false\n        }), _jsx(AddSvg, {})]\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15,\n          width: '80%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginBottom: 13\n        },\n        children: _jsx(View, {\n          ref: emailContainerRef,\n          onLayout: handleEmailLayout,\n          children: _jsx(Text, {\n            style: {\n              color: '#000000',\n              fontSize: emailFontSize,\n              textAlign: 'center',\n              marginBottom: 13\n            },\n            children: emailText\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangeEmail');\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Изменить пароль\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangePassword');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('MainAuth');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","useStyles","HeaderButton","ChangeAvatar","BackSvg","CrossSvg","AddSvg","NicknameInput","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useState","nickname","_useState2","_slicedToArray","inputText","setInputText","isFormValid","emailContainerRef","_useState3","_useState4","emailFontSize","setEmailFontSize","_useState5","_useState6","emailText","setEmailText","_useState7","_useState8","showInputField","setShowInputField","_useState9","_useState10","rotationDeg","setRotationDeg","handleEmailLayout","emailContainerWidth","current","offsetWidth","desiredMaxWidth","desiredMaxFontSize","Math","min","style","containerMain","children","profileSettingsContainer","marginBottom","nicknameContainer","value","setValue","text","_objectSpread","flex","borderTopWidth","borderBottomWidth","borderColor","paddingHorizontal","paddingVertical","width","overflow","textOverflow","whiteSpace","ref","onLayout","color","fontSize","textAlign","title","onPress","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native-web';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport NicknameInput from '../components/inputs/nicknameInput/nicknameInput';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [inputText, setInputText] = useState({\r\n      nickname: 'Initial Value', // Set the initial value here\r\n    });\r\n    const isFormValid = inputText.nickname;\r\n  \r\n    const emailContainerRef = useRef(null);\r\n    const [emailFontSize, setEmailFontSize] = useState(36);\r\n    const [emailText, setEmailText] = useState(\"ilia.stavier@mail.ru\");\r\n  \r\n    const [showInputField, setShowInputField] = useState(false); // Track the visibility of the input field\r\n    const [rotationDeg, setRotationDeg] = useState(0);\r\n\r\n    useEffect(() => {\r\n        handleEmailLayout();\r\n    }, []);\r\n\r\n    const handleEmailLayout = () => {\r\n        const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n        const desiredMaxWidth = 300; // You can adjust this as needed\r\n        const desiredMaxFontSize = 36; // You can adjust this as needed\r\n        const emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\r\n        setEmailFontSize(emailFontSize);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.profileSettingsContainer}>\r\n                <View style={{\r\n                    marginBottom: 13,\r\n                }}>\r\n                    <ChangeAvatar />\r\n                </View>\r\n                <View style={styles.nicknameContainer}>\r\n                    <NicknameInput\r\n                        value={inputText.nickname}\r\n                        setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                        flex={false}\r\n                    />\r\n                    <AddSvg />\r\n                </View>\r\n                <View style={{\r\n                    borderTopWidth: 1,\r\n                    borderBottomWidth: 1,\r\n                    borderColor: '#000000',\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 15,\r\n                    width: '80%',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    marginBottom: 13\r\n                }}>\r\n                    <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n                        <Text style={{\r\n                            color: '#000000',\r\n                            fontSize: emailFontSize,\r\n                            textAlign: 'center',\r\n                            marginBottom: 13\r\n                        }}>{emailText}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <HeaderButton title={\"Изменить почту\"} onPress={() => navigation.navigate('ChangeEmail')} />\r\n                </View>\r\n                <View style={{ marginBottom: 13 }}>\r\n                    <HeaderButton title={\"Изменить пароль\"} onPress={() => navigation.navigate('ChangePassword')} />\r\n                </View>\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAE3D,OAAOC,SAAS;AAChB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,OAAO;AACd,OAAOC,QAAQ;AACf,OAAOC,MAAM;AACb,OAAOC,aAAa;AAAyD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7E,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9C,IAAMC,MAAM,GAAGd,SAAS,CAAC,CAAC;EAC1B,IAAAe,SAAA,GAAkCxB,QAAQ,CAAC;MACzCyB,QAAQ,EAAE;IACZ,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAFKI,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAG9B,IAAMI,WAAW,GAAGF,SAAS,CAACH,QAAQ;EAEtC,IAAMM,iBAAiB,GAAG9B,MAAM,CAAC,IAAI,CAAC;EACtC,IAAA+B,UAAA,GAA0ChC,QAAQ,CAAC,EAAE,CAAC;IAAAiC,UAAA,GAAAN,cAAA,CAAAK,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAkCpC,QAAQ,CAAC,sBAAsB,CAAC;IAAAqC,UAAA,GAAAV,cAAA,CAAAS,UAAA;IAA3DE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAAG,UAAA,GAA4CxC,QAAQ,CAAC,KAAK,CAAC;IAAAyC,UAAA,GAAAd,cAAA,CAAAa,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAAsC5C,QAAQ,CAAC,CAAC,CAAC;IAAA6C,WAAA,GAAAlB,cAAA,CAAAiB,UAAA;IAA1CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAElC3C,SAAS,CAAC,YAAM;IACZ8C,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC5B,IAAMC,mBAAmB,GAAGlB,iBAAiB,CAACmB,OAAO,CAACC,WAAW;IACjE,IAAMC,eAAe,GAAG,GAAG;IAC3B,IAAMC,kBAAkB,GAAG,EAAE;IAC7B,IAAMnB,aAAa,GAAGoB,IAAI,CAACC,GAAG,CAACF,kBAAkB,EAAED,eAAe,GAAGH,mBAAmB,GAAGI,kBAAkB,CAAC;IAC9GlB,gBAAgB,CAACD,aAAa,CAAC;EACnC,CAAC;EAED,OACIf,KAAA,CAAChB,IAAI;IAACqD,KAAK,EAAEjC,MAAM,CAACkC,aAAc;IAAAC,QAAA,GAC9BvC,KAAA,CAAChB,IAAI;MAACqD,KAAK,EAAEjC,MAAM,CAACoC,wBAAyB;MAAAD,QAAA,GACzCzC,IAAA,CAACd,IAAI;QAACqD,KAAK,EAAE;UACTI,YAAY,EAAE;QAClB,CAAE;QAAAF,QAAA,EACEzC,IAAA,CAACN,YAAY,IAAE;MAAC,CACd,CAAC,EACPQ,KAAA,CAAChB,IAAI;QAACqD,KAAK,EAAEjC,MAAM,CAACsC,iBAAkB;QAAAH,QAAA,GAClCzC,IAAA,CAACF,aAAa;UACV+C,KAAK,EAAElC,SAAS,CAACH,QAAS;UAC1BsC,QAAQ,EAAE,SAAAA,SAACC,IAAI;YAAA,OAAKnC,YAAY,CAAAoC,aAAA,CAAAA,aAAA,KAAMrC,SAAS;cAAEH,QAAQ,EAAEuC;YAAI,EAAE,CAAC;UAAA,CAAC;UACnEE,IAAI,EAAE;QAAM,CACf,CAAC,EACFjD,IAAA,CAACH,MAAM,IAAE,CAAC;MAAA,CACR,CAAC,EACPG,IAAA,CAACd,IAAI;QAACqD,KAAK,EAAE;UACTW,cAAc,EAAE,CAAC;UACjBC,iBAAiB,EAAE,CAAC;UACpBC,WAAW,EAAE,SAAS;UACtBC,iBAAiB,EAAE,EAAE;UACrBC,eAAe,EAAE,EAAE;UACnBC,KAAK,EAAE,KAAK;UACZC,QAAQ,EAAE,QAAQ;UAClBC,YAAY,EAAE,UAAU;UACxBC,UAAU,EAAE,QAAQ;UACpBf,YAAY,EAAE;QAClB,CAAE;QAAAF,QAAA,EACEzC,IAAA,CAACd,IAAI;UAACyE,GAAG,EAAE7C,iBAAkB;UAAC8C,QAAQ,EAAE7B,iBAAkB;UAAAU,QAAA,EACtDzC,IAAA,CAACb,IAAI;YAACoD,KAAK,EAAE;cACTsB,KAAK,EAAE,SAAS;cAChBC,QAAQ,EAAE7C,aAAa;cACvB8C,SAAS,EAAE,QAAQ;cACnBpB,YAAY,EAAE;YAClB,CAAE;YAAAF,QAAA,EAAEpB;UAAS,CAAO;QAAC,CACnB;MAAC,CACL,CAAC,EACPrB,IAAA,CAACd,IAAI;QAAAuD,QAAA,EACDzC,IAAA,CAACP,YAAY;UAACuE,KAAK,EAAE,gBAAiB;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM5D,UAAU,CAAC6D,QAAQ,CAAC,aAAa,CAAC;UAAA;QAAC,CAAE;MAAC,CAC1F,CAAC,EACPlE,IAAA,CAACd,IAAI;QAACqD,KAAK,EAAE;UAAEI,YAAY,EAAE;QAAG,CAAE;QAAAF,QAAA,EAC9BzC,IAAA,CAACP,YAAY;UAACuE,KAAK,EAAE,iBAAkB;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM5D,UAAU,CAAC6D,QAAQ,CAAC,gBAAgB,CAAC;UAAA;QAAC,CAAE;MAAC,CAC9F,CAAC;IAAA,CACL,CAAC,EACPlE,IAAA,CAACd,IAAI;MAACqD,KAAK,EAAEjC,MAAM,CAAC6D,OAAQ;MAAA1B,QAAA,EACxBzC,IAAA,CAACZ,kBAAkB;QAAC6E,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM5D,UAAU,CAAC6D,QAAQ,CAAC,UAAU,CAAC;QAAA,CAAC;QAAAzB,QAAA,EAC/DzC,IAAA,CAACL,OAAO,IAAE;MAAC,CACK;IAAC,CACnB,CAAC;EAAA,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}