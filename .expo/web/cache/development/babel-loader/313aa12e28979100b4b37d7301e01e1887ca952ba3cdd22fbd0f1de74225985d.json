{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport ChangeAvatar from \"../components/Avatar/ChangeAvatar/changeAvatar\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport CrossSvg from \"../assets/icons/crossSvg\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      nickname: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEditing = _useState4[0],\n    setIsEditing = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    originalNickname = _useState6[0],\n    setOriginalNickname = _useState6[1];\n  var isFormValid = inputText.nickname;\n  var emailContainerRef = useRef(null);\n  var _useState7 = useState(36),\n    _useState8 = _slicedToArray(_useState7, 2),\n    emailFontSize = _useState8[0],\n    setEmailFontSize = _useState8[1];\n  var _useState9 = useState(\"ilia.stavier@mail.ru\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    emailText = _useState10[0],\n    setEmailText = _useState10[1];\n  useEffect(function () {\n    handleEmailLayout();\n  }, []);\n  var handleEmailLayout = function handleEmailLayout() {\n    var emailContainerWidth = emailContainerRef.current.offsetWidth;\n    var desiredMaxWidth = 300;\n    var desiredMaxFontSize = 36;\n    var emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\n    setEmailFontSize(emailFontSize);\n  };\n  var startEditing = function startEditing() {\n    setIsEditing(true);\n    setOriginalNickname(inputText.nickname);\n  };\n  var cancelEditing = function cancelEditing() {\n    setIsEditing(false);\n    setInputText({\n      nickname: originalNickname\n    });\n  };\n  var saveEditing = function saveEditing() {\n    setIsEditing(false);\n    setOriginalNickname(inputText.nickname);\n  };\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.profileSettingsContainer,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(ChangeAvatar, {})\n      }), isEditing ? _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          borderWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15,\n          width: '100%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginBottom: 13\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            flex: 1\n          },\n          value: inputText.nickname,\n          onChangeText: function onChangeText(text) {\n            return setInputText({\n              nickname: text\n            });\n          },\n          autoFocus: true\n        }), _jsx(TouchableHighlight, {\n          onPress: saveEditing,\n          children: _jsx(CrossSvg, {})\n        })]\n      }) : _jsxs(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15,\n          width: '100%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginBottom: 13\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: '#000000',\n            fontSize: 48,\n            textAlign: 'center',\n            marginBottom: 13\n          },\n          children: inputText.nickname\n        }), _jsx(TouchableHighlight, {\n          onPress: startEditing,\n          children: _jsx(AddSvg, {})\n        })]\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15,\n          width: '100%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginBottom: 13\n        },\n        children: _jsx(View, {\n          ref: emailContainerRef,\n          onLayout: handleEmailLayout,\n          children: _jsx(Text, {\n            style: {\n              color: '#000000',\n              fontSize: emailFontSize,\n              textAlign: 'center',\n              marginBottom: 13\n            },\n            children: emailText\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangeEmail');\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Изменить пароль\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangePassword');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('MainAuth');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","useStyles","HeaderButton","ChangeAvatar","BackSvg","CrossSvg","AddSvg","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useState","nickname","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","isEditing","setIsEditing","_useState5","_useState6","originalNickname","setOriginalNickname","isFormValid","emailContainerRef","_useState7","_useState8","emailFontSize","setEmailFontSize","_useState9","_useState10","emailText","setEmailText","handleEmailLayout","emailContainerWidth","current","offsetWidth","desiredMaxWidth","desiredMaxFontSize","Math","min","startEditing","cancelEditing","saveEditing","style","containerMain","children","profileSettingsContainer","marginBottom","flexDirection","alignItems","justifyContent","borderWidth","borderColor","paddingHorizontal","paddingVertical","width","overflow","textOverflow","whiteSpace","TextInput","flex","value","onChangeText","text","autoFocus","onPress","borderTopWidth","borderBottomWidth","color","fontSize","textAlign","ref","onLayout","title","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native-web';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [originalNickname, setOriginalNickname] = useState('');\r\n    const isFormValid = inputText.nickname;\r\n    \r\n    const emailContainerRef = useRef(null);\r\n    const [emailFontSize, setEmailFontSize] = useState(36);\r\n    const [emailText, setEmailText] = useState(\"ilia.stavier@mail.ru\");\r\n\r\n    useEffect(() => {\r\n        handleEmailLayout();\r\n    }, []);\r\n\r\n    const handleEmailLayout = () => {\r\n        const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n        const desiredMaxWidth = 300; // You can adjust this as needed\r\n        const desiredMaxFontSize = 36; // You can adjust this as needed\r\n        const emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\r\n        setEmailFontSize(emailFontSize);\r\n    };\r\n\r\n    const startEditing = () => {\r\n        setIsEditing(true);\r\n        setOriginalNickname(inputText.nickname);\r\n    };\r\n\r\n    const cancelEditing = () => {\r\n        setIsEditing(false);\r\n        setInputText({ nickname: originalNickname });\r\n    };\r\n\r\n    const saveEditing = () => {\r\n        setIsEditing(false);\r\n        setOriginalNickname(inputText.nickname);\r\n        // Save the new nickname here\r\n    };\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.profileSettingsContainer}>\r\n                <View style={{\r\n                    marginBottom: 13,\r\n                }}>\r\n                    <ChangeAvatar />\r\n                </View>\r\n                {isEditing ? (\r\n                    <View style={{\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        borderWidth: 1,\r\n                        borderColor: '#000000',\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 15,\r\n                        width: '100%',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                        marginBottom: 13\r\n                    }}>\r\n                        <TextInput\r\n                            style={{ flex: 1 }}\r\n                            value={inputText.nickname}\r\n                            onChangeText={(text) => setInputText({ nickname: text })}\r\n                            autoFocus={true}\r\n                        />\r\n                        <TouchableHighlight onPress={saveEditing}>\r\n                            <CrossSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                ) : (\r\n                    <View style={{\r\n                        borderTopWidth: 1,\r\n                        borderBottomWidth: 1,\r\n                        borderColor: '#000000',\r\n                        paddingHorizontal: 10,\r\n                        paddingVertical: 15,\r\n                        width: '100%',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                        marginBottom: 13\r\n                    }}>\r\n                        <Text style={{\r\n                            color: '#000000',\r\n                            fontSize: 48,\r\n                            textAlign: 'center',\r\n                            marginBottom: 13\r\n                        }}>{inputText.nickname}</Text>\r\n                        <TouchableHighlight onPress={startEditing}>\r\n                            <AddSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                )}\r\n                <View style={{\r\n                    borderTopWidth: 1,\r\n                    borderBottomWidth: 1,\r\n                    borderColor: '#000000',\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 15,\r\n                    width: '100%',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    marginBottom: 13\r\n                }}>\r\n                    <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n                        <Text style={{\r\n                            color: '#000000',\r\n                            fontSize: emailFontSize,\r\n                            textAlign: 'center',\r\n                            marginBottom: 13\r\n                        }}>{emailText}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <HeaderButton title={\"Изменить почту\"} onPress={() => navigation.navigate('ChangeEmail')} />\r\n                </View>\r\n                <View style={{ marginBottom: 13 }}>\r\n                    <HeaderButton title={\"Изменить пароль\"} onPress={() => navigation.navigate('ChangePassword')} />\r\n                </View>\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}