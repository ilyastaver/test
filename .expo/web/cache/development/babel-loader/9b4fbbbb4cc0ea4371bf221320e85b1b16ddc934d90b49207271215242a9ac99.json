{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathParser = exports.urlToPathAndParams = exports.getParamsFromPath = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _pathToRegexp = require('path-to-regexp');\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\nvar _NavigationActions = require(\"../NavigationActions\");\nvar _NavigationActions2 = _interopRequireDefault(_NavigationActions);\nvar _invariant = require(\"../utils/invariant\");\nvar _invariant2 = _interopRequireDefault(_invariant);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar queryString = require('query-string');\nvar getParamsFromPath = exports.getParamsFromPath = function (inputParams, pathMatch, pathMatchKeys) {\n  var params = pathMatch.slice(1).reduce(function (paramsOut, matchResult, i) {\n    var key = pathMatchKeys[i];\n    if (!key || key.asterisk) {\n      return paramsOut;\n    }\n    var paramName = key.name;\n    var decodedMatchResult = void 0;\n    try {\n      decodedMatchResult = decodeURIComponent(matchResult);\n    } catch (e) {}\n    paramsOut[paramName] = decodedMatchResult || matchResult;\n    return paramsOut;\n  }, _extends({}, inputParams));\n  return params;\n};\nvar getRestOfPath = function getRestOfPath(pathMatch, pathMatchKeys) {\n  var rest = pathMatch[pathMatchKeys.findIndex(function (k) {\n    return k.asterisk;\n  }) + 1];\n  return rest;\n};\nvar urlToPathAndParams = exports.urlToPathAndParams = function (url, uriPrefix) {\n  var searchMatch = url.match(/^(.*)\\?(.*)$/);\n  var params = searchMatch ? queryString.parse(searchMatch[2]) : {};\n  var urlWithoutSearch = searchMatch ? searchMatch[1] : url;\n  var delimiter = uriPrefix || '://';\n  var path = urlWithoutSearch.split(delimiter)[1];\n  if (path === undefined) {\n    path = urlWithoutSearch;\n  }\n  if (path === '/') {\n    path = '';\n  }\n  if (path[path.length - 1] === '/') {\n    path = path.slice(0, -1);\n  }\n  return {\n    path: path,\n    params: params\n  };\n};\nvar createPathParser = exports.createPathParser = function (childRouters, routeConfigs, _ref) {\n  var _ref$paths = _ref.paths,\n    pathConfigs = _ref$paths === void 0 ? {} : _ref$paths,\n    disableRouteNamePaths = _ref.disableRouteNamePaths;\n  var pathsByRouteNames = {};\n  var paths = [];\n  Object.keys(childRouters).forEach(function (routeName) {\n    var pathPattern = void 0;\n    if (pathConfigs[routeName] !== undefined) {\n      pathPattern = pathConfigs[routeName];\n    } else {\n      pathPattern = routeConfigs[routeName].path;\n    }\n    if (pathPattern === undefined) {\n      pathPattern = disableRouteNamePaths ? null : routeName;\n    }\n    (0, _invariant2.default)(pathPattern === null || typeof pathPattern === 'string', \"Route path for \" + routeName + \" must be specified as a string, or null.\");\n    var isPathMatchable = pathPattern !== null;\n    var exactReKeys = [];\n    var exactRe = isPathMatchable ? (0, _pathToRegexp2.default)(pathPattern, exactReKeys) : null;\n    var extendedPathReKeys = [];\n    var isWildcard = pathPattern === '' || !isPathMatchable;\n    var extendedPathRe = (0, _pathToRegexp2.default)(isWildcard ? '*' : pathPattern + \"/*\", extendedPathReKeys);\n    pathsByRouteNames[routeName] = {\n      exactRe: exactRe,\n      exactReKeys: exactReKeys,\n      extendedPathRe: extendedPathRe,\n      extendedPathReKeys: extendedPathReKeys,\n      isWildcard: isWildcard,\n      toPath: pathPattern === null ? function () {\n        return '';\n      } : (0, _pathToRegexp.compile)(pathPattern)\n    };\n  });\n  paths = Object.entries(pathsByRouteNames);\n  var getActionForPathAndParams = function getActionForPathAndParams() {\n    var pathToResolve = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var inputParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (var _ref2 of paths) {\n      var _ref3 = _slicedToArray(_ref2, 2);\n      var routeName = _ref3[0];\n      var path = _ref3[1];\n      var _path2 = path,\n        exactRe = _path2.exactRe,\n        exactReKeys = _path2.exactReKeys,\n        extendedPathRe = _path2.extendedPathRe,\n        extendedPathReKeys = _path2.extendedPathReKeys;\n      var childRouter = childRouters[routeName];\n      var exactMatch = exactRe && exactRe.exec(pathToResolve);\n      if (exactMatch && exactMatch.length) {\n        var extendedMatch = extendedPathRe && extendedPathRe.exec(pathToResolve);\n        var childAction = null;\n        if (extendedMatch && childRouter) {\n          var restOfPath = getRestOfPath(extendedMatch, extendedPathReKeys);\n          childAction = childRouter.getActionForPathAndParams(restOfPath, inputParams);\n        }\n        return _NavigationActions2.default.navigate({\n          routeName: routeName,\n          params: getParamsFromPath(inputParams, exactMatch, exactReKeys),\n          action: childAction\n        });\n      }\n    }\n    for (var _ref4 of paths) {\n      var _ref5 = _slicedToArray(_ref4, 2);\n      var _routeName = _ref5[0];\n      var _path = _ref5[1];\n      var _path3 = _path,\n        _extendedPathRe = _path3.extendedPathRe,\n        _extendedPathReKeys = _path3.extendedPathReKeys;\n      var _childRouter = childRouters[_routeName];\n      var _extendedMatch = _extendedPathRe && _extendedPathRe.exec(pathToResolve);\n      if (_extendedMatch && _extendedMatch.length) {\n        var _restOfPath = getRestOfPath(_extendedMatch, _extendedPathReKeys);\n        var _childAction = null;\n        if (_childRouter) {\n          _childAction = _childRouter.getActionForPathAndParams(_restOfPath, inputParams);\n        }\n        if (!_childAction) {\n          continue;\n        }\n        return _NavigationActions2.default.navigate({\n          routeName: _routeName,\n          params: getParamsFromPath(inputParams, _extendedMatch, _extendedPathReKeys),\n          action: _childAction\n        });\n      }\n    }\n    return null;\n  };\n  var getPathAndParamsForRoute = function getPathAndParamsForRoute(route) {\n    var routeName = route.routeName,\n      params = route.params;\n    var childRouter = childRouters[routeName];\n    var _pathsByRouteNames$ro = pathsByRouteNames[routeName],\n      toPath = _pathsByRouteNames$ro.toPath,\n      exactReKeys = _pathsByRouteNames$ro.exactReKeys;\n    var subPath = toPath(params);\n    var nonPathParams = {};\n    if (params) {\n      Object.keys(params).filter(function (paramName) {\n        return !exactReKeys.find(function (k) {\n          return k.name === paramName;\n        });\n      }).forEach(function (paramName) {\n        nonPathParams[paramName] = params[paramName];\n      });\n    }\n    if (childRouter) {\n      var child = childRouter.getPathAndParamsForState(route);\n      return {\n        path: subPath ? subPath + \"/\" + child.path : child.path,\n        params: child.params ? _extends({}, nonPathParams, child.params) : nonPathParams\n      };\n    }\n    return {\n      path: subPath,\n      params: nonPathParams\n    };\n  };\n  return {\n    getActionForPathAndParams: getActionForPathAndParams,\n    getPathAndParamsForRoute: getPathAndParamsForRoute\n  };\n};","map":{"version":3,"names":["_slicedToArray","require","Object","defineProperty","exports","value","createPathParser","urlToPathAndParams","getParamsFromPath","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_pathToRegexp","_pathToRegexp2","_interopRequireDefault","_NavigationActions","_NavigationActions2","_invariant","_invariant2","obj","__esModule","default","queryString","inputParams","pathMatch","pathMatchKeys","params","slice","reduce","paramsOut","matchResult","asterisk","paramName","name","decodedMatchResult","decodeURIComponent","e","getRestOfPath","rest","findIndex","k","url","uriPrefix","searchMatch","match","parse","urlWithoutSearch","delimiter","path","split","childRouters","routeConfigs","_ref","_ref$paths","paths","pathConfigs","disableRouteNamePaths","pathsByRouteNames","keys","forEach","routeName","pathPattern","isPathMatchable","exactReKeys","exactRe","extendedPathReKeys","isWildcard","extendedPathRe","toPath","compile","entries","getActionForPathAndParams","pathToResolve","_ref2","_ref3","_path2","childRouter","exactMatch","exec","extendedMatch","childAction","restOfPath","navigate","action","_ref4","_ref5","_routeName","_path","_path3","_extendedPathRe","_extendedPathReKeys","_childRouter","_extendedMatch","_restOfPath","_childAction","getPathAndParamsForRoute","route","_pathsByRouteNames$ro","subPath","nonPathParams","filter","find","child","getPathAndParamsForState"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/Documents/front/FrontM/node_modules/@react-navigation/core/dist/routers/pathUtils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathParser = exports.urlToPathAndParams = exports.getParamsFromPath = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable import/no-commonjs */\n\nvar _pathToRegexp = require('path-to-regexp');\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nvar _NavigationActions = require('../NavigationActions');\n\nvar _NavigationActions2 = _interopRequireDefault(_NavigationActions);\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar queryString = require('query-string');\n\nvar getParamsFromPath = exports.getParamsFromPath = (inputParams, pathMatch, pathMatchKeys) => {\n  var params = pathMatch.slice(1).reduce(\n  // iterate over matched path params\n  (paramsOut, matchResult, i) => {\n    var key = pathMatchKeys[i];\n    if (!key || key.asterisk) {\n      return paramsOut;\n    }\n    var paramName = key.name;\n\n    var decodedMatchResult = void 0;\n    try {\n      decodedMatchResult = decodeURIComponent(matchResult);\n    } catch (e) {\n      // ignore `URIError: malformed URI`\n    }\n\n    paramsOut[paramName] = decodedMatchResult || matchResult;\n    return paramsOut;\n  }, _extends({}, inputParams));\n  return params;\n};\nvar getRestOfPath = (pathMatch, pathMatchKeys) => {\n  var rest = pathMatch[pathMatchKeys.findIndex(k => k.asterisk) + 1];\n  return rest;\n};\n\nvar urlToPathAndParams = exports.urlToPathAndParams = (url, uriPrefix) => {\n  var searchMatch = url.match(/^(.*)\\?(.*)$/);\n  var params = searchMatch ? queryString.parse(searchMatch[2]) : {};\n  var urlWithoutSearch = searchMatch ? searchMatch[1] : url;\n  var delimiter = uriPrefix || '://';\n  var path = urlWithoutSearch.split(delimiter)[1];\n  if (path === undefined) {\n    path = urlWithoutSearch;\n  }\n  if (path === '/') {\n    path = '';\n  }\n  if (path[path.length - 1] === '/') {\n    path = path.slice(0, -1);\n  }\n  return {\n    path,\n    params\n  };\n};\n\nvar createPathParser = exports.createPathParser = (childRouters, routeConfigs, { paths: pathConfigs = {}, disableRouteNamePaths }) => {\n  var pathsByRouteNames = {};\n  var paths = [];\n\n  // Build pathsByRouteNames, which includes a regex to match paths for each route. Keep in mind, the regex will pass for the route and all child routes. The code that uses pathsByRouteNames will need to also verify that the child router produces an action, in the case of isPathMatchable false (a null path).\n  Object.keys(childRouters).forEach(routeName => {\n    var pathPattern = void 0;\n\n    // First check for paths on the router, then check the route config\n    if (pathConfigs[routeName] !== undefined) {\n      pathPattern = pathConfigs[routeName];\n    } else {\n      pathPattern = routeConfigs[routeName].path;\n    }\n\n    if (pathPattern === undefined) {\n      // If the user hasn't specified a path at all nor disableRouteNamePaths, then we assume the routeName is an appropriate path\n      pathPattern = disableRouteNamePaths ? null : routeName;\n    }\n\n    (0, _invariant2.default)(pathPattern === null || typeof pathPattern === 'string', `Route path for ${routeName} must be specified as a string, or null.`);\n\n    // the path may be specified as null, which is similar to empty string because it allows child routers to handle the action, but it will not match empty paths\n    var isPathMatchable = pathPattern !== null;\n    // pathPattern is a string with inline params, such as people/:id/*foo\n    var exactReKeys = [];\n    var exactRe = isPathMatchable ? (0, _pathToRegexp2.default)(pathPattern, exactReKeys) : null;\n    var extendedPathReKeys = [];\n    var isWildcard = pathPattern === '' || !isPathMatchable;\n    var extendedPathRe = (0, _pathToRegexp2.default)(isWildcard ? '*' : `${pathPattern}/*`, extendedPathReKeys);\n\n    pathsByRouteNames[routeName] = {\n      exactRe,\n      exactReKeys,\n      extendedPathRe,\n      extendedPathReKeys,\n      isWildcard,\n      toPath: pathPattern === null ? () => '' : (0, _pathToRegexp.compile)(pathPattern)\n    };\n  });\n\n  paths = Object.entries(pathsByRouteNames);\n\n  var getActionForPathAndParams = (pathToResolve = '', inputParams = {}) => {\n    // Attempt to match `pathToResolve` with a route in this router's routeConfigs, deferring to child routers\n\n    for (var [routeName, path] of paths) {\n      var { exactRe, exactReKeys, extendedPathRe, extendedPathReKeys } = path;\n      var childRouter = childRouters[routeName];\n\n      var exactMatch = exactRe && exactRe.exec(pathToResolve);\n\n      if (exactMatch && exactMatch.length) {\n        var extendedMatch = extendedPathRe && extendedPathRe.exec(pathToResolve);\n        var childAction = null;\n        if (extendedMatch && childRouter) {\n          var restOfPath = getRestOfPath(extendedMatch, extendedPathReKeys);\n          childAction = childRouter.getActionForPathAndParams(restOfPath, inputParams);\n        }\n\n        return _NavigationActions2.default.navigate({\n          routeName,\n          params: getParamsFromPath(inputParams, exactMatch, exactReKeys),\n          action: childAction\n        });\n      }\n    }\n\n    for (var [_routeName, _path] of paths) {\n      var { extendedPathRe: _extendedPathRe, extendedPathReKeys: _extendedPathReKeys } = _path;\n      var _childRouter = childRouters[_routeName];\n\n      var _extendedMatch = _extendedPathRe && _extendedPathRe.exec(pathToResolve);\n\n      if (_extendedMatch && _extendedMatch.length) {\n        var _restOfPath = getRestOfPath(_extendedMatch, _extendedPathReKeys);\n        var _childAction = null;\n        if (_childRouter) {\n          _childAction = _childRouter.getActionForPathAndParams(_restOfPath, inputParams);\n        }\n        if (!_childAction) {\n          continue;\n        }\n        return _NavigationActions2.default.navigate({\n          routeName: _routeName,\n          params: getParamsFromPath(inputParams, _extendedMatch, _extendedPathReKeys),\n          action: _childAction\n        });\n      }\n    }\n\n    return null;\n  };\n  var getPathAndParamsForRoute = route => {\n    var { routeName, params } = route;\n    var childRouter = childRouters[routeName];\n    var { toPath, exactReKeys } = pathsByRouteNames[routeName];\n    var subPath = toPath(params);\n    var nonPathParams = {};\n    if (params) {\n      Object.keys(params).filter(paramName => !exactReKeys.find(k => k.name === paramName)).forEach(paramName => {\n        nonPathParams[paramName] = params[paramName];\n      });\n    }\n    if (childRouter) {\n      // If it has a router it's a navigator.\n      // If it doesn't have router it's an ordinary React component.\n      var child = childRouter.getPathAndParamsForState(route);\n      return {\n        path: subPath ? `${subPath}/${child.path}` : child.path,\n        params: child.params ? _extends({}, nonPathParams, child.params) : nonPathParams\n      };\n    }\n    return {\n      path: subPath,\n      params: nonPathParams\n    };\n  };\n  return { getActionForPathAndParams, getPathAndParamsForRoute };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}