{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"setValue\", \"type\", \"flex\", \"pattern\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useStyles from \"./textInput.module\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function DataInput(_ref) {\n  var value = _ref.value,\n    setValue = _ref.setValue,\n    type = _ref.type,\n    flex = _ref.flex,\n    pattern = _ref.pattern,\n    data = _objectWithoutProperties(_ref, _excluded);\n  var styles = useStyles();\n  var inputMask;\n  switch (type) {\n    case \"password\":\n      inputMask = {\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        maxLength: 12\n      };\n      break;\n    case \"nickname\":\n      inputMask = {\n        maxLength: 10\n      };\n      break;\n    case \"email\":\n      inputMask = {\n        autoCompleteType: \"email\",\n        keyboardType: \"email-address\",\n        maxLength: 55\n      };\n      break;\n    case \"code\":\n      inputMask = {\n        keyboardType: \"number-pad\",\n        maxLength: 4\n      };\n      break;\n    default:\n      inputMask = {};\n  }\n  var inputWidth = flex ? \"90%\" : 600;\n  var inputHeight = flex ? 44 : 44;\n  var validateInput = function validateInput(text) {\n    if (!pattern) return true;\n    var regex = new RegExp(pattern);\n    return regex.test(text);\n  };\n  return _jsx(View, {\n    style: [styles.container, {\n      width: inputWidth,\n      height: inputHeight\n    }],\n    children: _jsx(TextInput, _objectSpread(_objectSpread(_objectSpread({}, data), inputMask), {}, {\n      placeholderTextColor: \"#7C858E\",\n      value: value,\n      pattern: pa,\n      style: [styles.input, {\n        paddingLeft: 21\n      }],\n      onChangeText: function onChangeText(text) {\n        if (!pattern || validateInput(text)) {\n          setValue(text);\n        }\n      }\n    }))\n  });\n}","map":{"version":3,"names":["React","View","TextInput","useStyles","jsx","_jsx","DataInput","_ref","value","setValue","type","flex","pattern","data","_objectWithoutProperties","_excluded","styles","inputMask","secureTextEntry","autoCompleteType","maxLength","keyboardType","inputWidth","inputHeight","validateInput","text","regex","RegExp","test","style","container","width","height","children","_objectSpread","placeholderTextColor","pa","input","paddingLeft","onChangeText"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/inputs/textInput/textInput.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, TextInput } from \"react-native-web\";\r\nimport useStyles from \"./textInput.module\";\r\n\r\nexport default function DataInput({ value, setValue, type, flex, pattern, ...data }) {\r\n  const styles = useStyles();\r\n\r\n  let inputMask;\r\n  switch (type) {\r\n    case \"password\":\r\n      inputMask = {\r\n        secureTextEntry: true,\r\n        autoCompleteType: \"password\",\r\n        maxLength: 12,\r\n      };\r\n      break;\r\n    case \"nickname\":\r\n      inputMask = {\r\n        maxLength: 10,\r\n      };\r\n      break;\r\n    case \"email\":\r\n      inputMask = {\r\n        autoCompleteType: \"email\",\r\n        keyboardType: \"email-address\",\r\n        maxLength: 55,\r\n      };\r\n      break;\r\n    case \"code\":\r\n      inputMask = {\r\n        keyboardType: \"number-pad\",\r\n        maxLength: 4,\r\n      };\r\n      break;\r\n    default:\r\n      inputMask = {};\r\n  }\r\n\r\n  const inputWidth = flex ? \"90%\" : 600;\r\n  const inputHeight = flex ? 44 : 44;\r\n\r\n  const validateInput = (text) => {\r\n    if (!pattern) return true; // If no pattern provided, consider it valid\r\n    const regex = new RegExp(pattern);\r\n    return regex.test(text);\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n      <TextInput\r\n        {...data}\r\n        {...inputMask}\r\n        placeholderTextColor={\"#7C858E\"}\r\n        value={value}\r\n        pattern = {pa}\r\n        style={[styles.input, { paddingLeft: 21 }]}\r\n        onChangeText={(text) => {\r\n          if (!pattern || validateInput(text)) {\r\n            setValue(text);\r\n          }\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAE1B,OAAOC,SAAS;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAE3C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAoD;EAAA,IAAjDC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IAAKC,IAAI,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EAC/E,IAAMC,MAAM,GAAGb,SAAS,CAAC,CAAC;EAE1B,IAAIc,SAAS;EACb,QAAQP,IAAI;IACV,KAAK,UAAU;MACbO,SAAS,GAAG;QACVC,eAAe,EAAE,IAAI;QACrBC,gBAAgB,EAAE,UAAU;QAC5BC,SAAS,EAAE;MACb,CAAC;MACD;IACF,KAAK,UAAU;MACbH,SAAS,GAAG;QACVG,SAAS,EAAE;MACb,CAAC;MACD;IACF,KAAK,OAAO;MACVH,SAAS,GAAG;QACVE,gBAAgB,EAAE,OAAO;QACzBE,YAAY,EAAE,eAAe;QAC7BD,SAAS,EAAE;MACb,CAAC;MACD;IACF,KAAK,MAAM;MACTH,SAAS,GAAG;QACVI,YAAY,EAAE,YAAY;QAC1BD,SAAS,EAAE;MACb,CAAC;MACD;IACF;MACEH,SAAS,GAAG,CAAC,CAAC;EAClB;EAEA,IAAMK,UAAU,GAAGX,IAAI,GAAG,KAAK,GAAG,GAAG;EACrC,IAAMY,WAAW,GAAGZ,IAAI,GAAG,EAAE,GAAG,EAAE;EAElC,IAAMa,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI,EAAK;IAC9B,IAAI,CAACb,OAAO,EAAE,OAAO,IAAI;IACzB,IAAMc,KAAK,GAAG,IAAIC,MAAM,CAACf,OAAO,CAAC;IACjC,OAAOc,KAAK,CAACE,IAAI,CAACH,IAAI,CAAC;EACzB,CAAC;EAED,OACEpB,IAAA,CAACJ,IAAI;IAAC4B,KAAK,EAAE,CAACb,MAAM,CAACc,SAAS,EAAE;MAAEC,KAAK,EAAET,UAAU;MAAEU,MAAM,EAAET;IAAY,CAAC,CAAE;IAAAU,QAAA,EAC1E5B,IAAA,CAACH,SAAS,EAAAgC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACJrB,IAAI,GACJI,SAAS;MACbkB,oBAAoB,EAAE,SAAU;MAChC3B,KAAK,EAAEA,KAAM;MACbI,OAAO,EAAIwB,EAAG;MACdP,KAAK,EAAE,CAACb,MAAM,CAACqB,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAE;MAC3CC,YAAY,EAAE,SAAAA,aAACd,IAAI,EAAK;QACtB,IAAI,CAACb,OAAO,IAAIY,aAAa,CAACC,IAAI,CAAC,EAAE;UACnChB,QAAQ,CAACgB,IAAI,CAAC;QAChB;MACF;IAAE,EACH;EAAC,CACE,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}