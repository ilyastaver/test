{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport SettingsBody from \"../components/settingsBody/settingsBody\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAdmin = _useState2[0],\n    setIsAdmin = _useState2[1];\n  var role = 'Amoniac';\n  var handleRoleChange = function handleRoleChange(role) {\n    setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n      role: role\n    }));\n    onRoleChange(role);\n  };\n  var _useState3 = useState({\n      nickname: 'Default Nickname'\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEditingNickname = _useState6[0],\n    setIsEditingNickname = _useState6[1];\n  var _useState7 = useState('Добавить'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    addButtonLabel = _useState8[0],\n    setAddButtonLabel = _useState8[1];\n  var handleAddButtonClick = function handleAddButtonClick() {\n    if (isEditingNickname) {\n      setIsEditingNickname(false);\n      setAddButtonLabel('Добавить');\n    } else {\n      setIsEditingNickname(true);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.containerSettings,\n    children: [_jsxs(View, {\n      style: styles.channNameContainer,\n      children: [_jsx(View, {\n        style: styles.dataInputContainer,\n        children: _jsx(DataInput, {\n          value: inputText.nickname,\n          setValue: function setValue(text) {\n            return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n              nickname: text\n            }));\n          },\n          placeholder: \"\",\n          type: \"nickname\",\n          flex: false,\n          editable: isEditingNickname\n        })\n      }), _jsxs(TouchableHighlight, {\n        onPress: handleAddButtonClick,\n        children: [_jsx(AddSvg, {}), _jsx(Text, {\n          style: styles.addButtonLabel,\n          children: addButtonLabel\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.settingsContainer,\n      children: _jsxs(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: [_jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Channel');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: 'Удалить канал',\n        onPress: function onPress() {\n          return console.log(\"Delete\");\n        },\n        disabled: !isAdmin\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableHighlight","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","BackSvg","SettingsBody","DataInput","AddSvg","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","styles","_useState","_useState2","_slicedToArray","isAdmin","setIsAdmin","role","handleRoleChange","setInputText","_objectSpread","inputText","onRoleChange","_useState3","nickname","_useState4","_useState5","_useState6","isEditingNickname","setIsEditingNickname","_useState7","_useState8","addButtonLabel","setAddButtonLabel","handleAddButtonClick","style","containerSettings","children","channNameContainer","dataInputContainer","value","setValue","text","placeholder","type","flex","editable","onPress","settingsContainer","scrollbarWidth","flexDirection","username","topLeft","navigate","bottomLeft","title","console","log","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport AddSvg from '../assets/icons/addSvg';\r\n\r\nexport default function SettingsScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const role = 'Amoniac';\r\n    const handleRoleChange = (role) => {\r\n        setInputText({ ...inputText, role: role });\r\n        onRoleChange(role);\r\n    };\r\n    const [inputText, setInputText] = useState({\r\n        nickname: 'Default Nickname',\r\n    });\r\n    const [isEditingNickname, setIsEditingNickname] = useState(false);\r\n    const [addButtonLabel, setAddButtonLabel] = useState('Добавить');\r\n\r\n    const handleAddButtonClick = () => {\r\n        if (isEditingNickname) {\r\n            // Save changes and exit edit mode\r\n            setIsEditingNickname(false);\r\n            setAddButtonLabel('Добавить');\r\n        } else {\r\n            // Enter edit mode\r\n            setIsEditingNickname(true);\r\n           \r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.containerSettings}>\r\n            <View style={styles.channNameContainer}>\r\n                <View style={styles.dataInputContainer}>\r\n                    <DataInput\r\n                        value={inputText.nickname}\r\n                        setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                        placeholder={\"\"}\r\n                        type={\"nickname\"}\r\n                        flex={false}\r\n                        editable={isEditingNickname}\r\n                    />\r\n                </View>\r\n                <TouchableHighlight onPress={handleAddButtonClick}>\r\n                    <AddSvg />\r\n                    <Text style={styles.addButtonLabel}>{addButtonLabel}</Text>\r\n                </TouchableHighlight>\r\n            </View>\r\n            <View style={styles.settingsContainer}>\r\n                <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    <SettingsBody role={role} username={\"John Doe\"} onRoleChange={handleRoleChange} />\r\n                    <SettingsBody role={role} username={\"John Doe\"} onRoleChange={handleRoleChange} />\r\n                    <SettingsBody role={role} username={\"John Doe\"} onRoleChange={handleRoleChange} />\r\n                    <SettingsBody role={role} username={\"John Doe\"} onRoleChange={handleRoleChange} />\r\n                    <SettingsBody role={role} username={\"John Doe\"} onRoleChange={handleRoleChange} />\r\n                </ScrollView>\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('Channel')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <View style={styles.bottomLeft}>\r\n                <HeaderButton title={'Удалить канал'} onPress={() => console.log(\"Delete\")} disabled={!isAdmin} />\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}