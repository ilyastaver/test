{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport SettingsBody from \"../components/settingsBody/settingsBody\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAdmin = _useState2[0],\n    SetIsAdmin = _useState2[1];\n  var role = 'Amoniac';\n  var handleRoleChange = function handleRoleChange(role) {\n    setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n      role: role\n    }));\n    onRoleChange(role);\n  };\n  var _useState3 = useState({\n      nickname: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsx(View, {\n      children: _jsx(DataInput, {\n        value: inputText.nickname,\n        setValue: function setValue(text) {\n          return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n            nickname: text\n          }));\n        },\n        placeholder: \"Никнейм\",\n        type: \"nickname\",\n        flex: false\n      })\n    }), _jsx(View, {\n      style: styles.settingsContainer,\n      children: _jsxs(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: [_jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        }), _jsx(SettingsBody, {\n          role: role,\n          username: \"John Doe\",\n          onRoleChange: handleRoleChange\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Channel');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: 'Удалить канал',\n        onPress: function onPress() {\n          return console.log(\"Delete\");\n        },\n        disabled: !isAdmin\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableHighlight","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","BackSvg","SettingsBody","DataInput","AddSvg","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","styles","_useState","_useState2","_slicedToArray","isAdmin","SetIsAdmin","role","handleRoleChange","setInputText","_objectSpread","inputText","onRoleChange","_useState3","nickname","_useState4","style","containerMain","children","value","setValue","text","placeholder","type","flex","settingsContainer","scrollbarWidth","flexDirection","username","topLeft","onPress","navigate","bottomLeft","title","console","log","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport AddSvg from '../assets/icons/addSvg';\r\n\r\nexport default function SettingsScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [isAdmin, SetIsAdmin] = useState(false);\r\n    const role = 'Amoniac';\r\n    const handleRoleChange = (role) => {\r\n        setInputText({ ...inputText, role: role });\r\n        onRoleChange(role);\r\n    };\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n      });\r\n   \r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View>\r\n                <DataInput value={inputText.nickname} setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={\"Никнейм\"} type={\"nickname\"} flex={false}/>\r\n              \r\n            </View>\r\n            <View style={styles.settingsContainer}>\r\n                <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    <SettingsBody\r\n                        role={role}\r\n                        username={\"John Doe\"}\r\n                        onRoleChange = {handleRoleChange}\r\n                    />\r\n                    <SettingsBody\r\n                        role={role}\r\n                        username={\"John Doe\"}\r\n                        onRoleChange = {handleRoleChange}\r\n                    />\r\n                    <SettingsBody\r\n                        role={role}\r\n                        username={\"John Doe\"}\r\n                        onRoleChange = {handleRoleChange}\r\n                    />\r\n                    <SettingsBody\r\n                        role={role}\r\n                        username={\"John Doe\"}\r\n                        onRoleChange = {handleRoleChange}\r\n                    />\r\n                    <SettingsBody\r\n                        role={role}\r\n                        username={\"John Doe\"}\r\n                        onRoleChange = {handleRoleChange}\r\n                    />\r\n                    \r\n                </ScrollView>\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('Channel')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <View style={styles.bottomLeft}>\r\n                <HeaderButton title={'Удалить канал'} onPress={() => console.log(\"Delete\")} disabled={!isAdmin} />\r\n            </View>\r\n        </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}