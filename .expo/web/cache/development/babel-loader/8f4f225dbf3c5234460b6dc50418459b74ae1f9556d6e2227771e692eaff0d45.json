{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport SearchBody from \"../components/searchBodies/searchBody\";\nimport ShowAvatar from \"../components/Avatar/ShowAvatar/showAvatar\";\nimport BorderButton from \"../components/buttons/borderButton\";\nimport ChangeAvatar from \"../components/Avatar/ChangeAvatar/changeAvatar\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      nickname: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var isFormValid = inputText.nickname;\n  var _useState3 = useState('ilia.stavier@mail.ru'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(48),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fontSize = _useState6[0],\n    setFontSize = _useState6[1];\n  var emailTextRef = useRef(null);\n  useEffect(function () {\n    if (emailTextRef.current) {\n      var emailTextWidth = emailTextRef.current.offsetWidth;\n      var containerWidth = styles.emailContainer.width;\n      var newFontSize = containerWidth / emailTextWidth * fontSize;\n      setFontSize(newFontSize);\n    }\n  }, [email, styles.emailContainer.width, fontSize]);\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.profileSettingsContainer,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 10\n        },\n        children: _jsx(ChangeAvatar, {})\n      }), _jsx(Text, {\n        style: {\n          color: '#000000',\n          fontSize: 48,\n          textAlign: 'center',\n          marginBottom: 13\n        },\n        children: \"Username\"\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15\n        },\n        children: _jsx(Text, {\n          style: {\n            color: '#000000',\n            fontSize: fontSize,\n            textAlign: 'center',\n            marginBottom: 13\n          },\n          ref: emailTextRef,\n          children: email\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangeEmail');\n          }\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить пароль\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangePassword');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('MainAuth');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","DataInput","SearchBody","ShowAvatar","BorderButton","ChangeAvatar","BackSvg","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useState","nickname","_useState2","_slicedToArray","inputText","setInputText","isFormValid","_useState3","_useState4","email","setEmail","_useState5","_useState6","fontSize","setFontSize","emailTextRef","useRef","useEffect","current","emailTextWidth","offsetWidth","containerWidth","emailContainer","width","newFontSize","style","containerMain","children","profileSettingsContainer","marginBottom","color","textAlign","borderTopWidth","borderBottomWidth","borderColor","paddingHorizontal","paddingVertical","ref","title","onPress","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const isFormValid = inputText.nickname;\r\n\r\n   \r\n    const [email, setEmail] = useState('ilia.stavier@mail.ru');\r\n    const [fontSize, setFontSize] = useState(48);\r\n    const emailTextRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      if (emailTextRef.current) {\r\n        const emailTextWidth = emailTextRef.current.offsetWidth;\r\n        const containerWidth = styles.emailContainer.width;\r\n        const newFontSize = (containerWidth / emailTextWidth) * fontSize;\r\n        setFontSize(newFontSize);\r\n      }\r\n    }, [email, styles.emailContainer.width, fontSize]);\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n\r\n            <View style={styles.profileSettingsContainer}>\r\n                <View style={{\r\n                    marginBottom: 10,\r\n                }}>\r\n                    <ChangeAvatar />\r\n                </View>\r\n                <Text style={{\r\n                    color: '#000000',\r\n                    fontSize: 48,\r\n                    textAlign: 'center',\r\n                    marginBottom: 13\r\n                }}>Username</Text>\r\n                <View style={{\r\n                    borderTopWidth: 1,\r\n                    borderBottomWidth: 1,\r\n                    borderColor: '#000000',\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 15,\r\n                }}>\r\n                    <Text\r\n            style={{\r\n              color: '#000000',\r\n              fontSize,\r\n              textAlign: 'center',\r\n              marginBottom: 13\r\n            }}\r\n            ref={emailTextRef}\r\n          >{email}</Text>\r\n                </View>\r\n                <View >\r\n                    <HeaderButton title={\"Изменить почту\"} onPress={() => navigation.navigate('ChangeEmail')} />\r\n                </View>\r\n                <View >\r\n                    <HeaderButton title={\"Изменить пароль\"} onPress={() => navigation.navigate('ChangePassword')} />\r\n                </View>\r\n\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}