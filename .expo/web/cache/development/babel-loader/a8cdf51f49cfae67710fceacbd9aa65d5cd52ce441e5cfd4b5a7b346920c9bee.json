{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar localVariables = ['Variable 1', 'Variable 2', 'Variable 3'];\nvar App = function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedVariable = _useState2[0],\n    setSelectedVariable = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleLogin = function handleLogin() {};\n  var handleCreateChannel = function handleCreateChannel() {};\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(View, {\n      style: {\n        alignItems: 'center'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          marginBottom: 20\n        },\n        children: \"Log in to start chatting\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: 20\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'gray',\n            padding: 10,\n            flex: 1\n          },\n          placeholder: \"Search\",\n          value: selectedVariable,\n          onChangeText: setSelectedVariable\n        }), _jsx(View, {\n          style: {\n            position: 'relative',\n            width: '50%'\n          },\n          children: _jsx(View, {\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0\n            },\n            children: localVariables.map(function (variable) {\n              return _jsx(TouchableOpacity, {\n                style: {\n                  padding: 10\n                },\n                onPress: function onPress() {\n                  return setSelectedVariable(variable);\n                },\n                children: _jsx(Text, {\n                  children: variable\n                })\n              }, variable);\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: '100%',\n          marginBottom: 20\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'gray',\n            padding: 10\n          },\n          placeholder: \"Username\",\n          value: username,\n          onChangeText: setUsername\n        }), _jsx(TextInput, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'gray',\n            padding: 10,\n            marginTop: 10\n          },\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          value: password,\n          onChangeText: setPassword\n        }), _jsx(TouchableOpacity, {\n          style: {\n            backgroundColor: 'blue',\n            padding: 10,\n            marginTop: 10\n          },\n          onPress: handleLogin,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              textAlign: 'center'\n            },\n            children: \"Log in\"\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          padding: 10\n        },\n        onPress: handleCreateChannel,\n        children: _jsx(Text, {\n          style: {\n            color: 'white',\n            textAlign: 'center'\n          },\n          children: \"Create Channel\"\n        })\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","View","Text","ScrollView","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","localVariables","App","_useState","_useState2","_slicedToArray","selectedVariable","setSelectedVariable","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","handleLogin","handleCreateChannel","contentContainerStyle","flexGrow","justifyContent","children","style","alignItems","fontSize","marginBottom","flexDirection","borderWidth","borderColor","padding","flex","placeholder","value","onChangeText","position","width","top","left","right","bottom","map","variable","onPress","marginTop","secureTextEntry","backgroundColor","color","textAlign"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/Documents/front/FrontM/screens/GreetingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, ScrollView, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nconst localVariables = ['Variable 1', 'Variable 2', 'Variable 3'];\r\n\r\nconst App = () => {\r\n  const [selectedVariable, setSelectedVariable] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // code to handle user login\r\n  };\r\n\r\n  const handleCreateChannel = () => {\r\n    // code to handle creating a new channel\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ flexGrow: 1, justifyContent: 'center' }}>\r\n      <View style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontSize: 20, marginBottom: 20 }}>Log in to start chatting</Text>\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 20 }}>\r\n          <TextInput\r\n            style={{ borderWidth: 1, borderColor: 'gray', padding: 10, flex: 1 }}\r\n            placeholder=\"Search\"\r\n            value={selectedVariable}\r\n            onChangeText={setSelectedVariable}\r\n          />\r\n          <View style={{ position: 'relative', width: '50%' }}>\r\n            <View style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}>\r\n              {localVariables.map((variable) => (\r\n                <TouchableOpacity\r\n                  key={variable}\r\n                  style={{ padding: 10 }}\r\n                  onPress={() => setSelectedVariable(variable)}\r\n                >\r\n                  <Text>{variable}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={{ width: '100%', marginBottom: 20 }}>\r\n          <TextInput\r\n            style={{ borderWidth: 1, borderColor: 'gray', padding: 10 }}\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChangeText={setUsername}\r\n          />\r\n          <TextInput\r\n            style={{ borderWidth: 1, borderColor: 'gray', padding: 10, marginTop: 10 }}\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n            value={password}\r\n            onChangeText={setPassword}\r\n          />\r\n          <TouchableOpacity\r\n            style={{ backgroundColor: 'blue', padding: 10, marginTop: 10 }}\r\n            onPress={handleLogin}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>Log in</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <TouchableOpacity\r\n          style={{ backgroundColor: 'green', padding: 10 }}\r\n          onPress={handleCreateChannel}\r\n        >\r\n          <Text style={{ color: 'white', textAlign: 'center' }}>Create Channel</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}