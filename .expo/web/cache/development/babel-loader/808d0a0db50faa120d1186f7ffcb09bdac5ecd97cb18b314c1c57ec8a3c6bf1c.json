{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexports.default = getChildEventSubscriber;\nfunction getChildEventSubscriber(addListener, key) {\n  var actionSubscribers = new Set();\n  var willFocusSubscribers = new Set();\n  var didFocusSubscribers = new Set();\n  var willBlurSubscribers = new Set();\n  var didBlurSubscribers = new Set();\n  var refocusSubscribers = new Set();\n  var removeAll = function removeAll() {\n    [actionSubscribers, willFocusSubscribers, didFocusSubscribers, willBlurSubscribers, didBlurSubscribers, refocusSubscribers].forEach(function (set) {\n      return set.clear();\n    });\n    upstreamSubscribers.forEach(function (subs) {\n      return subs && subs.remove();\n    });\n  };\n  var getChildSubscribers = function getChildSubscribers(evtName) {\n    switch (evtName) {\n      case 'action':\n        return actionSubscribers;\n      case 'willFocus':\n        return willFocusSubscribers;\n      case 'didFocus':\n        return didFocusSubscribers;\n      case 'willBlur':\n        return willBlurSubscribers;\n      case 'didBlur':\n        return didBlurSubscribers;\n      case 'refocus':\n        return refocusSubscribers;\n      default:\n        return null;\n    }\n  };\n  var _emit = function emit(type, payload) {\n    var payloadWithType = _extends({}, payload, {\n      type: type\n    });\n    var subscribers = getChildSubscribers(type);\n    subscribers && subscribers.forEach(function (subs) {\n      subs(payloadWithType);\n    });\n  };\n  var lastEmittedEvent = 'didBlur';\n  var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'refocus', 'action'];\n  var upstreamSubscribers = upstreamEvents.map(function (eventName) {\n    return addListener(eventName, function (payload) {\n      if (eventName === 'refocus') {\n        _emit(eventName, payload);\n        return;\n      }\n      var state = payload.state,\n        lastState = payload.lastState,\n        action = payload.action;\n      var lastRoutes = lastState && lastState.routes;\n      var routes = state && state.routes;\n      var focusKey = routes && routes[state.index].key;\n      var isChildFocused = focusKey === key;\n      var lastRoute = lastRoutes && lastRoutes.find(function (route) {\n        return route.key === key;\n      });\n      var newRoute = routes && routes.find(function (route) {\n        return route.key === key;\n      });\n      var childPayload = {\n        context: key + \":\" + action.type + \"_\" + (payload.context || 'Root'),\n        state: newRoute,\n        lastState: lastRoute,\n        action: action,\n        type: eventName\n      };\n      var isTransitioning = !!state && state.isTransitioning;\n      var previouslyLastEmittedEvent = lastEmittedEvent;\n      if (lastEmittedEvent === 'didBlur') {\n        if (eventName === 'willFocus' && isChildFocused) {\n          _emit(lastEmittedEvent = 'willFocus', childPayload);\n        } else if (eventName === 'action' && isChildFocused) {\n          _emit(lastEmittedEvent = 'willFocus', childPayload);\n        }\n      }\n      if (lastEmittedEvent === 'willFocus') {\n        if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n          _emit(lastEmittedEvent = 'didFocus', childPayload);\n        } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n          _emit(lastEmittedEvent = 'didFocus', childPayload);\n        }\n      }\n      if (lastEmittedEvent === 'didFocus') {\n        if (!isChildFocused) {\n          _emit(lastEmittedEvent = 'willBlur', childPayload);\n        } else if (eventName === 'willBlur') {\n          _emit(lastEmittedEvent = 'willBlur', childPayload);\n        } else if (eventName === 'action' && previouslyLastEmittedEvent === 'didFocus') {\n          _emit('action', childPayload);\n        }\n      }\n      if (lastEmittedEvent === 'willBlur') {\n        if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n          _emit(lastEmittedEvent = 'didBlur', childPayload);\n        } else if (eventName === 'didBlur') {\n          _emit(lastEmittedEvent = 'didBlur', childPayload);\n        }\n      }\n      if (lastEmittedEvent === 'didBlur' && !newRoute) {\n        removeAll();\n      }\n    });\n  });\n  return {\n    addListener: function addListener(eventName, eventHandler) {\n      var subscribers = getChildSubscribers(eventName);\n      if (!subscribers) {\n        throw new Error(\"Invalid event name \\\"\" + eventName + \"\\\"\");\n      }\n      subscribers.add(eventHandler);\n      var remove = function remove() {\n        subscribers.delete(eventHandler);\n      };\n      return {\n        remove: remove\n      };\n    },\n    emit: function emit(eventName, payload) {\n      if (eventName !== 'refocus') {\n        console.error(\"navigation.emit only supports the 'refocus' event currently.\");\n        return;\n      }\n      _emit(eventName, payload);\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","getChildEventSubscriber","addListener","actionSubscribers","Set","willFocusSubscribers","didFocusSubscribers","willBlurSubscribers","didBlurSubscribers","refocusSubscribers","removeAll","forEach","set","clear","upstreamSubscribers","subs","remove","getChildSubscribers","evtName","emit","type","payload","payloadWithType","subscribers","lastEmittedEvent","upstreamEvents","map","eventName","state","lastState","action","lastRoutes","routes","focusKey","index","isChildFocused","lastRoute","find","route","newRoute","childPayload","context","isTransitioning","previouslyLastEmittedEvent","eventHandler","Error","add","delete","console","error"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/Documents/front/FrontM/node_modules/@react-navigation/core/dist/getChildEventSubscriber.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getChildEventSubscriber;\n/*\n * This is used to extract one children's worth of events from a stream of navigation action events\n *\n * Based on the 'action' events that get fired for this navigation state, this utility will fire\n * focus and blur events for this child\n */\nfunction getChildEventSubscriber(addListener, key) {\n  var actionSubscribers = new Set();\n  var willFocusSubscribers = new Set();\n  var didFocusSubscribers = new Set();\n  var willBlurSubscribers = new Set();\n  var didBlurSubscribers = new Set();\n  var refocusSubscribers = new Set();\n\n  var removeAll = () => {\n    [actionSubscribers, willFocusSubscribers, didFocusSubscribers, willBlurSubscribers, didBlurSubscribers, refocusSubscribers].forEach(set => set.clear());\n\n    upstreamSubscribers.forEach(subs => subs && subs.remove());\n  };\n\n  var getChildSubscribers = evtName => {\n    switch (evtName) {\n      case 'action':\n        return actionSubscribers;\n      case 'willFocus':\n        return willFocusSubscribers;\n      case 'didFocus':\n        return didFocusSubscribers;\n      case 'willBlur':\n        return willBlurSubscribers;\n      case 'didBlur':\n        return didBlurSubscribers;\n      case 'refocus':\n        return refocusSubscribers;\n      default:\n        return null;\n    }\n  };\n\n  var emit = (type, payload) => {\n    var payloadWithType = _extends({}, payload, { type });\n    var subscribers = getChildSubscribers(type);\n    subscribers && subscribers.forEach(subs => {\n      subs(payloadWithType);\n    });\n  };\n\n  // lastEmittedEvent keeps track of focus state for one route. First we assume\n  // we are blurred. If we are focused on initialization, the first 'action'\n  // event will cause onFocus+willFocus events because we had previously been\n  // considered blurred\n  var lastEmittedEvent = 'didBlur';\n\n  var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'refocus', 'action'];\n\n  var upstreamSubscribers = upstreamEvents.map(eventName => addListener(eventName, payload => {\n    if (eventName === 'refocus') {\n      emit(eventName, payload);\n      return;\n    }\n\n    var { state, lastState, action } = payload;\n    var lastRoutes = lastState && lastState.routes;\n    var routes = state && state.routes;\n\n    // const lastFocusKey =\n    //   lastState && lastState.routes && lastState.routes[lastState.index].key;\n    var focusKey = routes && routes[state.index].key;\n\n    var isChildFocused = focusKey === key;\n    var lastRoute = lastRoutes && lastRoutes.find(route => route.key === key);\n    var newRoute = routes && routes.find(route => route.key === key);\n    var childPayload = {\n      context: `${key}:${action.type}_${payload.context || 'Root'}`,\n      state: newRoute,\n      lastState: lastRoute,\n      action,\n      type: eventName\n    };\n    var isTransitioning = !!state && state.isTransitioning;\n\n    var previouslyLastEmittedEvent = lastEmittedEvent;\n\n    if (lastEmittedEvent === 'didBlur') {\n      // The child is currently blurred. Look for willFocus conditions\n      if (eventName === 'willFocus' && isChildFocused) {\n        emit(lastEmittedEvent = 'willFocus', childPayload);\n      } else if (eventName === 'action' && isChildFocused) {\n        emit(lastEmittedEvent = 'willFocus', childPayload);\n      }\n    }\n    if (lastEmittedEvent === 'willFocus') {\n      // We are currently mid-focus. Look for didFocus conditions.\n      // If state.isTransitioning is false, this child event happens immediately after willFocus\n      if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n        emit(lastEmittedEvent = 'didFocus', childPayload);\n      } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n        emit(lastEmittedEvent = 'didFocus', childPayload);\n      }\n    }\n\n    if (lastEmittedEvent === 'didFocus') {\n      // The child is currently focused. Look for blurring events\n      if (!isChildFocused) {\n        // The child is no longer focused within this navigation state\n        emit(lastEmittedEvent = 'willBlur', childPayload);\n      } else if (eventName === 'willBlur') {\n        // The parent is getting a willBlur event\n        emit(lastEmittedEvent = 'willBlur', childPayload);\n      } else if (eventName === 'action' && previouslyLastEmittedEvent === 'didFocus') {\n        // While focused, pass action events to children for grandchildren focus\n        emit('action', childPayload);\n      }\n    }\n\n    if (lastEmittedEvent === 'willBlur') {\n      // The child is mid-blur. Wait for transition to end\n      if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n        // The child is done blurring because transitioning is over, or isTransitioning\n        // never began and didBlur fires immediately after willBlur\n        emit(lastEmittedEvent = 'didBlur', childPayload);\n      } else if (eventName === 'didBlur') {\n        // Pass through the parent didBlur event if it happens\n        emit(lastEmittedEvent = 'didBlur', childPayload);\n      }\n    }\n\n    if (lastEmittedEvent === 'didBlur' && !newRoute) {\n      removeAll();\n    }\n  }));\n\n  return {\n    addListener(eventName, eventHandler) {\n      var subscribers = getChildSubscribers(eventName);\n      if (!subscribers) {\n        throw new Error(`Invalid event name \"${eventName}\"`);\n      }\n      subscribers.add(eventHandler);\n      var remove = () => {\n        subscribers.delete(eventHandler);\n      };\n      return { remove };\n    },\n    emit(eventName, payload) {\n      if (eventName !== 'refocus') {\n        console.error(`navigation.emit only supports the 'refocus' event currently.`);\n        return;\n      }\n      emit(eventName, payload);\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}