{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport { useEffect, useState } from \"react\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GreetingsScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n  var styles = useStyles();\n  var _useState = useState({\n      password: '',\n      email: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  return _jsx(View, {\n    style: styles.containerMain,\n    children: _jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.email,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                email: text\n              }));\n            },\n            placeholder: \"Почта\"\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: \"Пароль\"\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          marginTop: 13\n        },\n        children: _jsx(TouchableHighlight, {\n          children: _jsx(Text, {})\n        })\n      }), _jsx(View, {\n        style: {\n          marginTop: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Войти\"\n        })\n      }), _jsx(View, {\n        style: {\n          marginTop: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Зарегистрироваться\"\n        })\n      })]\n    })\n  });\n}\nexport default GreetingsScreen;","map":{"version":3,"names":["React","View","Text","Button","TouchableHighlight","useStyles","DataInput","useEffect","useState","HeaderButton","jsx","_jsx","jsxs","_jsxs","GreetingsScreen","_ref","_objectDestructuringEmpty","styles","_useState","password","email","_useState2","_slicedToArray","inputText","setInputText","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","marginTop","title"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/Documents/front/FrontM/screens/AuthScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useEffect, useState } from \"react\";\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\n\r\n\r\nfunction GreetingsScreen({ }) {\r\n    const styles = useStyles();\r\n    const [inputText, setInputText] = useState({\r\n        password: '',\r\n        email: ''\r\n      });\r\n  return (\r\n    <View style={styles.containerMain}>\r\n    <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n    <View style={{marginBottom: 13}}>\r\n    <DataInput value={inputText.email} setValue={(text) => setInputText({...inputText, email: text})} placeholder={\"Почта\"} />\r\n    </View>\r\n    <View style={{marginBottom: 13}}>\r\n    <DataInput value={inputText.password} setValue={(text) => setInputText({...inputText, password: text})} placeholder={\"Пароль\"} />\r\n    </View>\r\n    </View>\r\n    <View style={{marginTop: 13}}>\r\n    <TouchableHighlight>\r\n        <Text></Text>\r\n    </TouchableHighlight>\r\n    </View>\r\n    \r\n    <View style={{marginTop: 13}}>\r\n    <HeaderButton title={\"Войти\"}/>\r\n    </View>\r\n    <View style={{marginTop: 13}}>\r\n    <HeaderButton title={\"Зарегистрироваться\"}/>\r\n    </View>\r\n    </View>\r\n    \r\n  </View>\r\n  );\r\n}\r\n\r\nexport default GreetingsScreen;"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,kBAAA;AAE1B,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY;AAA2C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI9D,SAASC,eAAeA,CAAAC,IAAA,EAAM;EAAAC,yBAAA,CAAAD,IAAA;EAC1B,IAAME,MAAM,GAAGZ,SAAS,CAAC,CAAC;EAC1B,IAAAa,SAAA,GAAkCV,QAAQ,CAAC;MACvCW,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAHGK,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAIhC,OACEV,IAAA,CAACV,IAAI;IAACwB,KAAK,EAAER,MAAM,CAACS,aAAc;IAAAC,QAAA,EAClCd,KAAA,CAACZ,IAAI;MAACwB,KAAK,EAAER,MAAM,CAACW,aAAc;MAAAD,QAAA,GAC9Bd,KAAA,CAACZ,IAAI;QAACwB,KAAK,EAAER,MAAM,CAACY,cAAe;QAAAF,QAAA,GACvChB,IAAA,CAACV,IAAI;UAACwB,KAAK,EAAE;YAACK,YAAY,EAAE;UAAE,CAAE;UAAAH,QAAA,EAChChB,IAAA,CAACL,SAAS;YAACyB,KAAK,EAAER,SAAS,CAACH,KAAM;YAACY,QAAQ,EAAE,SAAAA,SAACC,IAAI;cAAA,OAAKT,YAAY,CAAAU,aAAA,CAAAA,aAAA,KAAKX,SAAS;gBAAEH,KAAK,EAAEa;cAAI,EAAC,CAAC;YAAA,CAAC;YAACE,WAAW,EAAE;UAAQ,CAAE;QAAC,CACpH,CAAC,EACPxB,IAAA,CAACV,IAAI;UAACwB,KAAK,EAAE;YAACK,YAAY,EAAE;UAAE,CAAE;UAAAH,QAAA,EAChChB,IAAA,CAACL,SAAS;YAACyB,KAAK,EAAER,SAAS,CAACJ,QAAS;YAACa,QAAQ,EAAE,SAAAA,SAACC,IAAI;cAAA,OAAKT,YAAY,CAAAU,aAAA,CAAAA,aAAA,KAAKX,SAAS;gBAAEJ,QAAQ,EAAEc;cAAI,EAAC,CAAC;YAAA,CAAC;YAACE,WAAW,EAAE;UAAS,CAAE;QAAC,CAC3H,CAAC;MAAA,CACD,CAAC,EACPxB,IAAA,CAACV,IAAI;QAACwB,KAAK,EAAE;UAACW,SAAS,EAAE;QAAE,CAAE;QAAAT,QAAA,EAC7BhB,IAAA,CAACP,kBAAkB;UAAAuB,QAAA,EACfhB,IAAA,CAACT,IAAI,IAAO;QAAC,CACG;MAAC,CACf,CAAC,EAEPS,IAAA,CAACV,IAAI;QAACwB,KAAK,EAAE;UAACW,SAAS,EAAE;QAAE,CAAE;QAAAT,QAAA,EAC7BhB,IAAA,CAACF,YAAY;UAAC4B,KAAK,EAAE;QAAQ,CAAC;MAAC,CACzB,CAAC,EACP1B,IAAA,CAACV,IAAI;QAACwB,KAAK,EAAE;UAACW,SAAS,EAAE;QAAE,CAAE;QAAAT,QAAA,EAC7BhB,IAAA,CAACF,YAAY;UAAC4B,KAAK,EAAE;QAAqB,CAAC;MAAC,CACtC,CAAC;IAAA,CACD;EAAC,CAEH,CAAC;AAET;AAEA,eAAevB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}