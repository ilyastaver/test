{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport SettingsBody from \"../components/settingsBody/settingsBody\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var channelId = route.params.channelId;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAdmin = _useState2[0],\n    setIsAdmin = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    role = _useState4[0],\n    setRole = _useState4[1];\n  var _useState5 = useState({\n      nickname: Chann\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputText = _useState6[0],\n    setInputText = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isEditingNickname = _useState8[0],\n    setIsEditingNickname = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    channelData = _useState10[0],\n    setChannelData = _useState10[1];\n  var username = 'admin';\n  var password = 'root';\n  useFocusEffect(React.useCallback(function () {\n    fetchChannelData();\n    console.log(channelId);\n  }, []));\n  useEffect(function () {\n    function fetchSavedData() {\n      return _fetchSavedData.apply(this, arguments);\n    }\n    function _fetchSavedData() {\n      _fetchSavedData = _asyncToGenerator(function* () {\n        try {\n          var savedRole = yield AsyncStorage.getItem('role');\n          if (savedRole !== null) {\n            setRole(savedRole);\n          }\n          var savedNickname = yield AsyncStorage.getItem('nickname');\n          if (savedNickname !== null) {\n            setInputText({\n              nickname: savedNickname\n            });\n          }\n        } catch (error) {\n          console.log('Error fetching saved data:', error);\n        }\n      });\n      return _fetchSavedData.apply(this, arguments);\n    }\n    fetchSavedData();\n  }, []);\n  var fetchChannelData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"http://localhost:8080/api/channels/\" + channelId, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          var _channelData = yield response.json();\n          console.log('Fetched channel data:', _channelData);\n          setChannelData(_channelData);\n        } else {\n          console.log('Failed to fetch channel data');\n        }\n      } catch (error) {\n        console.log('Error fetching channel data:', error);\n      }\n    });\n    return function fetchChannelData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRoleChange = function () {\n    var _ref3 = _asyncToGenerator(function* (newRole) {\n      setRole(newRole);\n      try {\n        yield AsyncStorage.setItem('role', newRole);\n      } catch (error) {\n        console.log('Error saving role:', error);\n      }\n    });\n    return function handleRoleChange(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleAddButtonClick = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (isEditingNickname) {\n        setIsEditingNickname(false);\n        try {\n          yield AsyncStorage.setItem('nickname', inputText.nickname);\n        } catch (error) {\n          console.log('Error saving nickname:', error);\n        }\n      } else {\n        setIsEditingNickname(true);\n      }\n    });\n    return function handleAddButtonClick() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var members = [{\n    role: role,\n    username: \"John Doe\",\n    onRoleChange: handleRoleChange\n  }];\n  return _jsxs(View, {\n    style: styles.containerSettings,\n    children: [_jsxs(View, {\n      style: styles.channNameContainer,\n      children: [_jsx(View, {\n        style: styles.dataInputContainer,\n        children: _jsx(DataInput, {\n          value: inputText.nickname,\n          setValue: function setValue(text) {\n            return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n              nickname: text\n            }));\n          },\n          placeholder: \"\",\n          type: \"nickname\",\n          flex: false,\n          editable: isEditingNickname\n        })\n      }), _jsx(TouchableHighlight, {\n        onPress: handleAddButtonClick,\n        children: _jsx(AddSvg, {})\n      })]\n    }), _jsx(View, {\n      style: styles.settingsContainer,\n      children: _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        }\n      })\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Channel');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: 'Удалить канал',\n        onPress: function onPress() {\n          return console.log(\"Delete\");\n        },\n        disabled: !isAdmin\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableHighlight","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","BackSvg","SettingsBody","DataInput","AddSvg","AsyncStorage","useFocusEffect","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","route","channelId","params","styles","_useState","_useState2","_slicedToArray","isAdmin","setIsAdmin","_useState3","_useState4","role","setRole","_useState5","nickname","Chann","_useState6","inputText","setInputText","_useState7","_useState8","isEditingNickname","setIsEditingNickname","_useState9","_useState10","channelData","setChannelData","username","password","useCallback","fetchChannelData","console","log","fetchSavedData","_fetchSavedData","apply","arguments","_asyncToGenerator","savedRole","getItem","savedNickname","error","_ref2","response","fetch","method","headers","btoa","ok","json","handleRoleChange","_ref3","newRole","setItem","_x","handleAddButtonClick","_ref4","members","onRoleChange","style","containerSettings","children","channNameContainer","dataInputContainer","value","setValue","text","_objectSpread","placeholder","type","flex","editable","onPress","settingsContainer","scrollbarWidth","flexDirection","topLeft","navigate","bottomLeft","title","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nexport default function SettingsScreen({ navigation, route }) {\r\n  const { channelId } = route.params;\r\n  const styles = useStyles();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  const [inputText, setInputText] = useState({\r\n    nickname: Chann,\r\n  });\r\n  const [isEditingNickname, setIsEditingNickname] = useState(false);\r\n  const [channelData, setChannelData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchChannelData();\r\n      console.log(channelId);\r\n    }, [])\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchSavedData() {\r\n      try {\r\n        const savedRole = await AsyncStorage.getItem('role');\r\n        if (savedRole !== null) {\r\n          setRole(savedRole);\r\n        }\r\n\r\n        const savedNickname = await AsyncStorage.getItem('nickname');\r\n        if (savedNickname !== null) {\r\n          setInputText({ nickname: savedNickname });\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching saved data:', error);\r\n      }\r\n    }\r\n\r\n    fetchSavedData();\r\n  }, []);\r\n\r\n  const fetchChannelData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/channels/${channelId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const channelData = await response.json();\r\n        console.log('Fetched channel data:', channelData); // Add this line\r\n        setChannelData(channelData);\r\n      } else {\r\n        // Handle error response\r\n        console.log('Failed to fetch channel data');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching channel data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleRoleChange = async (newRole) => {\r\n    setRole(newRole);\r\n    try {\r\n      await AsyncStorage.setItem('role', newRole);\r\n    } catch (error) {\r\n      console.log('Error saving role:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddButtonClick = async () => {\r\n    if (isEditingNickname) {\r\n      // Save changes and exit edit mode\r\n      setIsEditingNickname(false);\r\n      try {\r\n        await AsyncStorage.setItem('nickname', inputText.nickname);\r\n      } catch (error) {\r\n        console.log('Error saving nickname:', error);\r\n      }\r\n    } else {\r\n      // Enter edit mode\r\n      setIsEditingNickname(true);\r\n    }\r\n  };\r\n\r\n  const members = [\r\n    {\r\n      role: role,\r\n      username: \"John Doe\",\r\n      onRoleChange: handleRoleChange\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.containerSettings}>\r\n      <View style={styles.channNameContainer}>\r\n        <View style={styles.dataInputContainer}>\r\n          <DataInput\r\n            value={inputText.nickname}\r\n            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n            placeholder={\"\"}\r\n            type={\"nickname\"}\r\n            flex={false}\r\n            editable={isEditingNickname}\r\n          />\r\n        </View>\r\n        <TouchableHighlight onPress={handleAddButtonClick}>\r\n          <AddSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.settingsContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          \r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Channel')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <HeaderButton title={'Удалить канал'} onPress={() => console.log(\"Delete\")} disabled={!isAdmin} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}