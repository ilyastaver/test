{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AuthScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      password: '',\n      email: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var isFormValid = inputText.email && inputText.password;\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var username = 'admin';\n  var password = 'root';\n  var handleLogin = function handleLogin() {\n    var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(inputText.email)) {\n      alert('Invalid email format');\n      return;\n    }\n    var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n    var requestBody = {\n      email: inputText.email,\n      password: inputText.password\n    };\n    fetch('http://localhost:8080/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Basic \" + btoa(username + \":\" + password)\n      },\n      body: JSON.stringify(requestBody)\n    }).then(function (response) {\n      if (response.ok) {\n        response.json().then(function (data) {\n          login(data);\n        });\n      } else {\n        response.json().then(function (errorData) {\n          var errorMessage = errorData.message || 'Login failed';\n          Alert.alert(errorMessage);\n        });\n      }\n    }).catch(function (error) {\n      console.error('Error:', error);\n    });\n  };\n  return _jsx(View, {\n    style: styles.containerMain,\n    children: _jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.email,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                email: text\n              }));\n            },\n            placeholder: \"\\u041F\\u043E\\u0447\\u0442\\u0430\",\n            type: \"email\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          marginTop: 13,\n          marginRight: 13\n        },\n        children: _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return navigation.navigate('Forgot');\n          },\n          children: _jsx(Text, {\n            children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n          onPress: handleLogin,\n          disabled: !isFormValid\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n          onPress: function onPress() {\n            return navigation.navigate('Reg');\n          }\n        })\n      })]\n    })\n  });\n}\nexport default AuthScreen;","map":{"version":3,"names":["React","useContext","useState","View","Text","TouchableHighlight","Alert","useStyles","DataInput","HeaderButton","AuthContext","jsx","_jsx","jsxs","_jsxs","AuthScreen","_ref","navigation","styles","_useState","password","email","_useState2","_slicedToArray","inputText","setInputText","isFormValid","_useContext","login","username","handleLogin","emailRegex","test","alert","passwordRegex","requestBody","fetch","method","headers","btoa","body","JSON","stringify","then","response","ok","json","data","errorData","errorMessage","message","catch","error","console","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","marginTop","marginRight","onPress","navigate","title","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/AuthScreen.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { View, Text, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction AuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    password: '',\r\n    email: ''\r\n  });\r\n  const isFormValid = inputText.email && inputText.password;\r\n\r\n  const { login } = useContext(AuthContext);\r\n \r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const handleLogin = () => {\r\n    // Validate the email format\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Invalid email format');\r\n      return;\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    \r\n  \r\n    // Create the request body\r\n    const requestBody = {\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n  \r\n    // Send the API request\r\n    fetch('http://localhost:8080/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        // Handle the response\r\n        if (response.ok) {\r\n          // Login successful\r\n          // Assuming the response contains user data or token, you can pass it to the login function\r\n          response.json().then(data => {\r\n            login(data); // Pass the user data or token to the login function from AuthContext\r\n          });\r\n        } else {\r\n          // Login failed\r\n          response.json().then(errorData => {\r\n            const errorMessage = errorData.message || 'Login failed';\r\n            Alert.alert(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={{ marginTop: 13, marginRight: 13 }}>\r\n          <TouchableHighlight onPress={() => navigation.navigate('Forgot')}>\r\n            <Text>Забыли пароль?</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Войти\"\r\n            onPress={handleLogin}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={() => navigation.navigate('Reg')}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AuthScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}