{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchBody(_ref) {\n  var data = _ref.data;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isHovered = _React$useState2[0],\n    setIsHovered = _React$useState2[1];\n  var avatarUrl = data.avatarUrl,\n    username = data.username,\n    onPress = data.onPress,\n    containerStyle = data.containerStyle;\n  var handlePress = function handlePress() {\n    onPress();\n    console.log(onPress);\n  };\n  return _jsx(TouchableHighlight, {\n    style: [styles.container, containerStyle, isHovered && {\n      backgroundColor: \"#E7DEDE\"\n    }],\n    onPress: handlePress,\n    onMouseEnter: function onMouseEnter() {\n      return setIsHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setIsHovered(false);\n    },\n    children: avatarUrl ? _jsxs(View, {\n      style: styles.avatarContainer,\n      children: [_jsx(ShowAvatar, {\n        imageUrl: avatarUrl\n      }), _jsx(Text, {\n        style: styles.username,\n        children: username\n      })]\n    }) : _jsx(Text, {\n      style: styles.channelName,\n      children: username\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 26,\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  },\n  avatarContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  username: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  channelName: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableHighlight","Image","ShowAvatar","jsx","_jsx","jsxs","_jsxs","SearchBody","_ref","data","_React$useState","useState","_React$useState2","_slicedToArray","isHovered","setIsHovered","avatarUrl","username","onPress","containerStyle","handlePress","console","log","style","styles","container","backgroundColor","onMouseEnter","onMouseLeave","children","avatarContainer","imageUrl","channelName","create","borderRadius","paddingVertical","paddingHorizontal","flexDirection","alignItems","fontSize","fontWeight"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/searchBodies/searchBody.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Text, TouchableHighlight, Image } from \"react-native-web\";\r\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\r\n\r\nexport default function SearchBody({ data }) {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const { avatarUrl, username, onPress, containerStyle } = data;\r\n  const handlePress = () => {\r\n    onPress();\r\n    console.log(onPress);\r\n  };\r\n  return (\r\n    <TouchableHighlight\r\n      style={[styles.container, containerStyle, isHovered && { backgroundColor: \"#E7DEDE\" }]}\r\n      onPress={handlePress}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      {avatarUrl ? (\r\n        <View style={styles.avatarContainer}>\r\n          <ShowAvatar imageUrl= {avatarUrl}  />\r\n          <Text style={styles.username}>{username}</Text>\r\n        </View>\r\n      ) : (\r\n        <Text style={styles.channelName}>{username}</Text>\r\n      )}\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 26,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n  },\r\n  avatarContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  username: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  channelName: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,UAAU;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAW;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACvC,IAAAC,eAAA,GAAkCd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAhDI,SAAS,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAC9B,IAAQI,SAAS,GAAwCP,IAAI,CAArDO,SAAS;IAAEC,QAAQ,GAA8BR,IAAI,CAA1CQ,QAAQ;IAAEC,OAAO,GAAqBT,IAAI,CAAhCS,OAAO;IAAEC,cAAc,GAAKV,IAAI,CAAvBU,cAAc;EACpD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBF,OAAO,CAAC,CAAC;IACTG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACtB,CAAC;EACD,OACEd,IAAA,CAACJ,kBAAkB;IACjBuB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEN,cAAc,EAAEL,SAAS,IAAI;MAAEY,eAAe,EAAE;IAAU,CAAC,CAAE;IACvFR,OAAO,EAAEE,WAAY;IACrBO,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMZ,YAAY,CAAC,IAAI,CAAC;IAAA,CAAC;IACvCa,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMb,YAAY,CAAC,KAAK,CAAC;IAAA,CAAC;IAAAc,QAAA,EAEvCb,SAAS,GACRV,KAAA,CAACT,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACM,eAAgB;MAAAD,QAAA,GAClCzB,IAAA,CAACF,UAAU;QAAC6B,QAAQ,EAAGf;MAAU,CAAG,CAAC,EACrCZ,IAAA,CAACL,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACP,QAAS;QAAAY,QAAA,EAAEZ;MAAQ,CAAO,CAAC;IAAA,CAC3C,CAAC,GAEPb,IAAA,CAACL,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACQ,WAAY;MAAAH,QAAA,EAAEZ;IAAQ,CAAO;EAClD,CACiB,CAAC;AAEzB;AAIA,IAAMO,MAAM,GAAG1B,UAAU,CAACmC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTC,eAAe,EAAE,SAAS;IAC1BQ,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDN,eAAe,EAAE;IACfO,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDrB,QAAQ,EAAE;IACRsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDR,WAAW,EAAE;IACXO,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}