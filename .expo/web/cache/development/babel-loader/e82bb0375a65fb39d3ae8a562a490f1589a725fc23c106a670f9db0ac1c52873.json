{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChangeEmailScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      email: '',\n      code: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    updateUser = _useContext.updateUser;\n  var username = 'admin';\n  var password = 'root';\n  var isButtonDisabled = function isButtonDisabled() {\n    return !inputText.email || !inputText.code;\n  };\n  var isDisabled = function isDisabled() {\n    return !inputText.email;\n  };\n  var getCode = function getCode() {\n    var email = encodeURIComponent(inputText.email);\n    var apiUrl = \"http://localhost:8080/api/send_email?email=\" + email;\n    fetch(apiUrl, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.code) {\n        setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n          code: data.code\n        }));\n        Alert.alert('Success', 'Code has been sent to your email');\n      } else {\n        Alert.alert('Error', 'Failed to get code');\n      }\n    }).catch(function (error) {\n      console.error('Error getting code:', error);\n      Alert.alert('Error', 'Failed to get code');\n    });\n  };\n  var changeEmail = function changeEmail() {\n    var userId = user == null ? void 0 : user.id;\n    var email = encodeURIComponent(inputText.email);\n    var apiUrl = \"http://localhost:8080/api/users/\" + userId + \"/update/email?email=\" + email;\n    fetch(apiUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Basic \" + btoa(username + \":\" + password)\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        Alert.alert('Success', 'Email updated successfully');\n      } else {\n        Alert.alert('Error', 'Failed to update email');\n      }\n    }).catch(function (error) {\n      console.error('Error updating email:', error);\n      alert('Error', 'Failed to update email');\n    });\n  };\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.email,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                email: text\n              }));\n            },\n            placeholder: \"Почта\",\n            type: \"email\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.code,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                code: text\n              }));\n            },\n            placeholder: \"Код\",\n            type: \"code\",\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: changeEmail,\n          disabled: isButtonDisabled()\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Получить код\",\n          onPress: getCode,\n          disabled: isDisabled()\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Profile');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}\nexport default ChangeEmailScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","Button","TouchableHighlight","Alert","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","jsx","_jsx","jsxs","_jsxs","ChangeEmailScreen","_ref","navigation","styles","_useState","email","code","_useState2","_slicedToArray","inputText","setInputText","_useContext","user","updateUser","username","password","isButtonDisabled","isDisabled","getCode","encodeURIComponent","apiUrl","fetch","method","then","response","json","data","_objectSpread","alert","catch","error","console","changeEmail","userId","id","headers","Authorization","btoa","ok","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","placeholder","type","flex","title","onPress","disabled","topLeft","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangeEmailScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Button, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction ChangeEmailScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const isButtonDisabled = () => {\r\n    return !inputText.email || !inputText.code;\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `http://localhost:8080/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Assuming the API returns a response with a \"code\" property\r\n        if (data.code) {\r\n          setInputText({ ...inputText, code: data.code });\r\n          Alert.alert('Success', 'Code has been sent to your email');\r\n        } else {\r\n          Alert.alert('Error', 'Failed to get code');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error getting code:', error);\r\n        Alert.alert('Error', 'Failed to get code');\r\n      });\r\n  };\r\n\r\n  const changeEmail = () => {\r\n    const userId = user?.id;\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `http://localhost:8080/api/users/${userId}/update/email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          Alert.alert('Success', 'Email updated successfully');\r\n        } else {\r\n          Alert.alert('Error', 'Failed to update email');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating email:', error);\r\n        alert('Error', 'Failed to update email');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={\"Почта\"}\r\n              type={\"email\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={\"Код\"}\r\n              type={\"code\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title={\"Изменить почту\"}\r\n            onPress={changeEmail}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title={\"Получить код\"}\r\n            onPress={getCode}\r\n            disabled={isDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangeEmailScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}