{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport AuthContext from \"../context/AuthContext\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChangePasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      newPassword: '',\n      password: '',\n      confirmPassword: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var username = 'admin';\n  var password = 'root';\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var id = user == null ? void 0 : user.id;\n  var isButtonDisabled = function isButtonDisabled() {\n    return !inputText.newPassword || !inputText.password || !inputText.confirmPassword;\n  };\n  var handleUpdatePassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (inputText.newPassword !== inputText.confirmPassword) {\n        return alert('New password does not match the confirmation one');\n      }\n      var id = user == null ? void 0 : user.id;\n      var queryParams = new URLSearchParams({\n        last_password: inputText.password,\n        new_password: inputText.newPassword\n      });\n      try {\n        var response = yield fetch(\"http://localhost:8080/api/users/\" + id + \"/update/password?\" + queryParams.toString(), {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          alert('Password updated');\n        } else {\n          console.error('Failed to update password');\n        }\n      } catch (error) {\n        console.error('Error updating password:', error);\n      }\n    });\n    return function handleUpdatePassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.newPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                newPassword: text\n              }));\n            },\n            placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.confirmPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                confirmPassword: text\n              }));\n            },\n            placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onPress: handleUpdatePassword,\n          disabled: isButtonDisabled()\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Profile');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}\nexport default ChangePasswordScreen;","map":{"version":3,"names":["React","useState","useContext","View","TouchableHighlight","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","axios","jsx","_jsx","jsxs","_jsxs","ChangePasswordScreen","_ref","navigation","styles","_useState","newPassword","password","confirmPassword","_useState2","_slicedToArray","inputText","setInputText","username","_useContext","user","id","isButtonDisabled","handleUpdatePassword","_ref2","_asyncToGenerator","alert","queryParams","URLSearchParams","last_password","new_password","response","fetch","toString","method","headers","ok","console","error","apply","arguments","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","disabled","topLeft","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangePasswordScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight } from 'react-native';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { user } = useContext(AuthContext);\r\n  const id = user?.id; // Assuming the user object has an 'id' property\r\n\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      return alert('New password does not match the confirmation one');\r\n    }\r\n    \r\n    const id = user?.id;\r\n    const queryParams = new URLSearchParams({\r\n      last_password: inputText.password,\r\n      new_password: inputText.newPassword,\r\n    });\r\n  \r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/users/${id}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Password update successful\r\n        alert('Password updated');\r\n      } else {\r\n        // Handle error response\r\n        console.error('Failed to update password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder=\"Подтвердить пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Изменить пароль\"\r\n            onPress={handleUpdatePassword}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}