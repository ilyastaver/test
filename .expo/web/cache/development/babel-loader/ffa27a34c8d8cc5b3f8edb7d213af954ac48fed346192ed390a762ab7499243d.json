{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport MessageBody from \"../components/messageBody/messageBody\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChannelUnauthScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  useEffect(function () {\n    setShouldUseFocusEffect(false);\n  }, [channelData.messages]);\n  useFocusEffect(React.useCallback(function () {\n    fetchChannelData();\n  }, [channelData.messages]));\n  var username = 'admin';\n  var password = 'root';\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    channelData = _useState2[0],\n    setChannelData = _useState2[1];\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.barChanContainer,\n      children: [_jsx(Text, {\n        style: styles.barText,\n        children: \"Channels name\"\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: 'Присоединиться',\n          onPress: function onPress() {\n            return navigation.navigate('Auth');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.historyContainer,\n      children: _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: messageBodies.map(function (data, index) {\n          return _jsx(MessageBody, {\n            data: data\n          }, index);\n        })\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Auth');\n        },\n        children: _jsx(CreateSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","TextInput","CreateSvg","useStyles","useFocusEffect","HeaderButton","MessageBody","AuthContext","jsx","_jsx","jsxs","_jsxs","ChannelUnauthScreen","_ref","navigation","styles","setShouldUseFocusEffect","channelData","messages","useCallback","fetchChannelData","username","password","_useState","_useState2","_slicedToArray","setChannelData","style","containerMain","children","barChanContainer","barText","title","onPress","navigate","historyContainer","flex","scrollbarWidth","flexDirection","messageBodies","map","data","index","bottomLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChannelUnauthScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, TextInput } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n\r\nexport default function ChannelUnauthScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    \r\n    useEffect(() => {\r\n        setShouldUseFocusEffect(false); // Reset the flag\r\n    }, [channelData.messages]);\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchChannelData();\r\n        }, [channelData.messages])\r\n    );\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>Channels name</Text>\r\n                <View>\r\n                    <HeaderButton title={'Присоединиться'} onPress={() => navigation.navigate('Auth')} />\r\n                </View>\r\n            </View >\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {messageBodies.map((data, index) =>\r\n                        <MessageBody key={index} data={data} />\r\n                    )}\r\n                </ScrollView>\r\n\r\n            </View>\r\n            <View style = {styles.bottomLeft}>\r\n             <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n        </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAEnD,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,SAASC,cAAc,QAAQ,0BAA0B;AACzD,OAAOC,YAAY;AAEnB,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjD,eAAe,SAASC,mBAAmBA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACpD,IAAMC,MAAM,GAAGZ,SAAS,CAAC,CAAC;EAE1BT,SAAS,CAAC,YAAM;IACZsB,uBAAuB,CAAC,KAAK,CAAC;EAClC,CAAC,EAAE,CAACC,WAAW,CAACC,QAAQ,CAAC,CAAC;EAC1Bd,cAAc,CACVZ,KAAK,CAAC2B,WAAW,CAAC,YAAM;IACpBC,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACH,WAAW,CAACC,QAAQ,CAAC,CAC7B,CAAC;EACD,IAAMG,QAAQ,GAAG,OAAO;EACxB,IAAMC,QAAQ,GAAG,MAAM;EACvB,IAAAC,SAAA,GAAsC9B,QAAQ,CAAC,EAAE,CAAC;IAAA+B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CN,WAAW,GAAAO,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,OACIb,KAAA,CAAChB,IAAI;IAACgC,KAAK,EAAEZ,MAAM,CAACa,aAAc;IAAAC,QAAA,GAC9BlB,KAAA,CAAChB,IAAI;MAACgC,KAAK,EAAEZ,MAAM,CAACe,gBAAiB;MAAAD,QAAA,GACjCpB,IAAA,CAACb,IAAI;QAAC+B,KAAK,EAAEZ,MAAM,CAACgB,OAAQ;QAAAF,QAAA,EAAC;MAAa,CAAM,CAAC,EACjDpB,IAAA,CAACd,IAAI;QAAAkC,QAAA,EACDpB,IAAA,CAACJ,YAAY;UAAC2B,KAAK,EAAE,gBAAiB;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMnB,UAAU,CAACoB,QAAQ,CAAC,MAAM,CAAC;UAAA;QAAC,CAAE;MAAC,CACnF,CAAC;IAAA,CACJ,CAAC,EACRzB,IAAA,CAACd,IAAI;MAACgC,KAAK,EAAEZ,MAAM,CAACoB,gBAAiB;MAAAN,QAAA,EACjCpB,IAAA,CAACT,UAAU;QAAC2B,KAAK,EAAE;UAAES,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE,CAAC;UAAEC,aAAa,EAAE;QAAS,CAAE;QAAAT,QAAA,EAC1EU,aAAa,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;UAAA,OACvBjC,IAAA,CAACH,WAAW;YAAamC,IAAI,EAAEA;UAAK,GAAlBC,KAAoB,CAAC;QAAA,CAC3C;MAAC,CACO;IAAC,CAEX,CAAC,EACPjC,IAAA,CAACd,IAAI;MAACgC,KAAK,EAAIZ,MAAM,CAAC4B,UAAW;MAAAd,QAAA,EAChCpB,IAAA,CAACZ,kBAAkB;QAACoC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMnB,UAAU,CAACoB,QAAQ,CAAC,MAAM,CAAC;QAAA,CAAC;QAAAL,QAAA,EAClEpB,IAAA,CAACP,SAAS,IAAE;MAAC,CACK;IAAC,CACf,CAAC;EAAA,CACD,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}