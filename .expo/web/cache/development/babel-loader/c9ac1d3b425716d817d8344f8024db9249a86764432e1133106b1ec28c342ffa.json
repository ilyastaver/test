{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useStyles from \"./showAvatar.module\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PlusSvg from \"../../../assets/icons/plusSvg\";\nimport { ImageContext } from \"../../../context/ImageContext\";\nimport AuthContext from \"../../../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ShowAvatar(_ref) {\n  var imageUrl = _ref.imageUrl,\n    profile = _ref.profile;\n  var styles = useStyles({\n    profile: profile\n  });\n  var _useContext = useContext(ImageContext),\n    selectedImage = _useContext.selectedImage;\n  var _useContext2 = useContext(AuthContext),\n    user = _useContext2.user;\n  var renderAvatar = function renderAvatar() {\n    if (selectedImage) {\n      return _jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: imageUrl\n        }\n      });\n    } else if (imageUrl) {\n      var base64Image = \"data:image/jpeg;base64,\" + image;\n      return _jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: base64Image\n        }\n      });\n    } else {\n      return _jsx(View, {\n        style: styles.nonePhoto,\n        children: _jsx(PlusSvg, {\n          style: {\n            transform: [{\n              scale: 0.5\n            }]\n          }\n        })\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.round,\n      children: selectedImage ? _jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: imageUrl\n        }\n      }) : _jsx(View, {\n        style: styles.nonePhoto,\n        children: _jsx(PlusSvg, {\n          style: {\n            transform: [{\n              scale: 0.5\n            }]\n          }\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["useEffect","useState","React","useContext","View","Image","useStyles","Text","PlusSvg","ImageContext","AuthContext","jsx","_jsx","ShowAvatar","_ref","imageUrl","profile","styles","_useContext","selectedImage","_useContext2","user","renderAvatar","style","image","source","uri","base64Image","nonePhoto","children","transform","scale","container","round"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/Avatar/ShowAvatar/showAvatar.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport React, { useContext } from 'react';\r\nimport { View, Image } from 'react-native-web';\r\nimport useStyles from './showAvatar.module';\r\nimport { Text } from 'react-native';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\n\r\nexport default function ShowAvatar({ imageUrl, profile }) {\r\n  const styles = useStyles({ profile });\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user } = useContext(AuthContext); // Use `useContext` instead of `useState`\r\n\r\n  const renderAvatar = () => {\r\n    if (selectedImage) {\r\n      return <Image style={styles.image} source={{ uri: imageUrl }} />;\r\n    } else if (imageUrl) {\r\n      const base64Image = `data:image/jpeg;base64,${image}`; // Assuming the byte code is in JPEG format\r\n      return <Image style={styles.image} source={{ uri: base64Image }} />;\r\n    } else {\r\n      return (\r\n        <View style={styles.nonePhoto}>\r\n          <PlusSvg style={{ transform: [{ scale: 0.5 }] }} />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n        {selectedImage ? (\r\n          <Image style={styles.image} source={{ uri: imageUrl }} />\r\n        ) : (\r\n          <View style={styles.nonePhoto}>\r\n            <PlusSvg style={{ transform: [{ scale: 0.5 }] }} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAE1C,OAAOC,SAAS;AAA4B,OAAAC,IAAA;AAE5C,OAAOC,OAAO;AACd,SAASC,YAAY;AACrB,OAAOC,WAAW;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAEvD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACpD,IAAMC,MAAM,GAAGX,SAAS,CAAC;IAAEU,OAAO,EAAPA;EAAQ,CAAC,CAAC;EACrC,IAAAE,WAAA,GAA0Bf,UAAU,CAACM,YAAY,CAAC;IAA1CU,aAAa,GAAAD,WAAA,CAAbC,aAAa;EACrB,IAAAC,YAAA,GAAiBjB,UAAU,CAACO,WAAW,CAAC;IAAhCW,IAAI,GAAAD,YAAA,CAAJC,IAAI;EAEZ,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIH,aAAa,EAAE;MACjB,OAAOP,IAAA,CAACP,KAAK;QAACkB,KAAK,EAAEN,MAAM,CAACO,KAAM;QAACC,MAAM,EAAE;UAAEC,GAAG,EAAEX;QAAS;MAAE,CAAE,CAAC;IAClE,CAAC,MAAM,IAAIA,QAAQ,EAAE;MACnB,IAAMY,WAAW,+BAA6BH,KAAO;MACrD,OAAOZ,IAAA,CAACP,KAAK;QAACkB,KAAK,EAAEN,MAAM,CAACO,KAAM;QAACC,MAAM,EAAE;UAAEC,GAAG,EAAEC;QAAY;MAAE,CAAE,CAAC;IACrE,CAAC,MAAM;MACL,OACEf,IAAA,CAACR,IAAI;QAACmB,KAAK,EAAEN,MAAM,CAACW,SAAU;QAAAC,QAAA,EAC5BjB,IAAA,CAACJ,OAAO;UAACe,KAAK,EAAE;YAAEO,SAAS,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAC;UAAE;QAAE,CAAE;MAAC,CAC/C,CAAC;IAEX;EACF,CAAC;EACD,OACEnB,IAAA,CAACR,IAAI;IAACmB,KAAK,EAAEN,MAAM,CAACe,SAAU;IAAAH,QAAA,EAC5BjB,IAAA,CAACR,IAAI;MAACmB,KAAK,EAAEN,MAAM,CAACgB,KAAM;MAAAJ,QAAA,EACvBV,aAAa,GACZP,IAAA,CAACP,KAAK;QAACkB,KAAK,EAAEN,MAAM,CAACO,KAAM;QAACC,MAAM,EAAE;UAAEC,GAAG,EAAEX;QAAS;MAAE,CAAE,CAAC,GAEzDH,IAAA,CAACR,IAAI;QAACmB,KAAK,EAAEN,MAAM,CAACW,SAAU;QAAAC,QAAA,EAC5BjB,IAAA,CAACJ,OAAO;UAACe,KAAK,EAAE;YAAEO,SAAS,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAC;UAAE;QAAE,CAAE;MAAC,CAC/C;IACP,CACG;EAAC,CACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}