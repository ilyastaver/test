{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport ChangeAvatar from \"../components/Avatar/ChangeAvatar/changeAvatar\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport CrossSvg from \"../assets/icons/crossSvg\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      nickname: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEditable = _useState4[0],\n    setIsEditable = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFormValid = _useState6[0],\n    setIsFormValid = _useState6[1];\n  var emailContainerRef = useRef(null);\n  var _useState7 = useState(36),\n    _useState8 = _slicedToArray(_useState7, 2),\n    emailFontSize = _useState8[0],\n    setEmailFontSize = _useState8[1];\n  var _useState9 = useState('ilia.stavier@mail.ru'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    emailText = _useState10[0],\n    setEmailText = _useState10[1];\n  useEffect(function () {\n    handleEmailLayout();\n  }, []);\n  var handleEmailLayout = function handleEmailLayout() {\n    var emailContainerWidth = emailContainerRef.current.offsetWidth;\n    var desiredMaxWidth = 300;\n    var desiredMaxFontSize = 36;\n    var emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\n    setEmailFontSize(emailFontSize);\n  };\n  var handleEditNickname = function handleEditNickname() {\n    setIsEditable(!isEditable);\n  };\n  var handleNicknameChange = function handleNicknameChange(value) {\n    setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n      nickname: value\n    }));\n    setIsFormValid(value.trim().length > 0);\n  };\n  var handleSaveNickname = function handleSaveNickname() {\n    setEmailText(inputText.nickname);\n    setIsEditable(false);\n  };\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.profileSettingsContainer,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(ChangeAvatar, {})\n      }), isEditable ? _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            color: '#000000',\n            fontSize: 48,\n            textAlign: 'center',\n            marginBottom: 13,\n            flex: 1\n          },\n          onChangeText: handleNicknameChange,\n          value: inputText.nickname,\n          placeholder: \"Nickname\",\n          placeholderTextColor: \"#A0A0A0\"\n        }), isFormValid ? _jsx(TouchableHighlight, {\n          onPress: handleSaveNickname,\n          children: _jsx(CrossSvg, {})\n        }) : null]\n      }) : _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: '#000000',\n            fontSize: 48,\n            textAlign: 'center',\n            marginBottom: 13,\n            flex: 1\n          },\n          children: emailText\n        }), _jsx(TouchableHighlight, {\n          onPress: handleEditNickname,\n          children: _jsx(AddSvg, {})\n        })]\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15,\n          width: '100%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginBottom: 13\n        },\n        children: _jsx(View, {\n          ref: emailContainerRef,\n          onLayout: handleEmailLayout,\n          children: _jsx(Text, {\n            style: {\n              color: '#000000',\n              fontSize: emailFontSize,\n              textAlign: 'center',\n              marginBottom: 13\n            },\n            children: emailText\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangeEmail');\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Изменить пароль\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangePassword');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('MainAuth');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","useStyles","HeaderButton","ChangeAvatar","BackSvg","CrossSvg","AddSvg","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useState","nickname","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","isEditable","setIsEditable","_useState5","_useState6","isFormValid","setIsFormValid","emailContainerRef","_useState7","_useState8","emailFontSize","setEmailFontSize","_useState9","_useState10","emailText","setEmailText","handleEmailLayout","emailContainerWidth","current","offsetWidth","desiredMaxWidth","desiredMaxFontSize","Math","min","handleEditNickname","handleNicknameChange","value","_objectSpread","trim","length","handleSaveNickname","style","containerMain","children","profileSettingsContainer","marginBottom","flexDirection","alignItems","TextInput","color","fontSize","textAlign","flex","onChangeText","placeholder","placeholderTextColor","onPress","borderTopWidth","borderBottomWidth","borderColor","paddingHorizontal","paddingVertical","width","overflow","textOverflow","whiteSpace","ref","onLayout","title","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native-web';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n    const styles = useStyles();\r\n    const [inputText, setInputText] = useState({\r\n      nickname: '',\r\n    });\r\n    const [isEditable, setIsEditable] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n  \r\n    const emailContainerRef = useRef(null);\r\n    const [emailFontSize, setEmailFontSize] = useState(36);\r\n    const [emailText, setEmailText] = useState('ilia.stavier@mail.ru');\r\n  \r\n    useEffect(() => {\r\n      handleEmailLayout();\r\n    }, []);\r\n  \r\n    const handleEmailLayout = () => {\r\n      const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n      const desiredMaxWidth = 300; // You can adjust this as needed\r\n      const desiredMaxFontSize = 36; // You can adjust this as needed\r\n      const emailFontSize = Math.min(\r\n        desiredMaxFontSize,\r\n        (desiredMaxWidth / emailContainerWidth) * desiredMaxFontSize\r\n      );\r\n      setEmailFontSize(emailFontSize);\r\n    };\r\n  \r\n    const handleEditNickname = () => {\r\n      setIsEditable(!isEditable);\r\n    };\r\n  \r\n    const handleNicknameChange = (value) => {\r\n      setInputText({ ...inputText, nickname: value });\r\n      setIsFormValid(value.trim().length > 0);\r\n    };\r\n  \r\n    const handleSaveNickname = () => {\r\n      setEmailText(inputText.nickname);\r\n      setIsEditable(false);\r\n    };\r\n  \r\n    return (\r\n      <View style={styles.containerMain}>\r\n        <View style={styles.profileSettingsContainer}>\r\n          <View style={{\r\n            marginBottom: 13,\r\n          }}>\r\n            <ChangeAvatar />\r\n          </View>\r\n          {isEditable ? (\r\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n              <TextInput\r\n                style={{\r\n                  color: '#000000',\r\n                  fontSize: 48,\r\n                  textAlign: 'center',\r\n                  marginBottom: 13,\r\n                  flex: 1,\r\n                }}\r\n                onChangeText={handleNicknameChange}\r\n                value={inputText.nickname}\r\n                placeholder=\"Nickname\"\r\n                placeholderTextColor=\"#A0A0A0\"\r\n              />\r\n              {isFormValid ? (\r\n                <TouchableHighlight onPress={handleSaveNickname}>\r\n                  <CrossSvg />\r\n                </TouchableHighlight>\r\n              ) : null}\r\n            </View>\r\n          ) : (\r\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n              <Text style={{\r\n                color: '#000000',\r\n                fontSize: 48,\r\n                textAlign: 'center',\r\n                marginBottom: 13,\r\n                flex: 1,\r\n              }}>{emailText}</Text>\r\n              <TouchableHighlight onPress={handleEditNickname}>\r\n                <AddSvg />\r\n              </TouchableHighlight>\r\n            </View>\r\n          )}\r\n                <View style={{\r\n                    borderTopWidth: 1,\r\n                    borderBottomWidth: 1,\r\n                    borderColor: '#000000',\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 15,\r\n                    width: '100%',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    marginBottom: 13\r\n                }}>\r\n                    <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n                        <Text style={{\r\n                            color: '#000000',\r\n                            fontSize: emailFontSize,\r\n                            textAlign: 'center',\r\n                            marginBottom: 13\r\n                        }}>{emailText}</Text>\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <HeaderButton title={\"Изменить почту\"} onPress={() => navigation.navigate('ChangeEmail')} />\r\n                </View>\r\n                <View style={{ marginBottom: 13 }}>\r\n                    <HeaderButton title={\"Изменить пароль\"} onPress={() => navigation.navigate('ChangePassword')} />\r\n                </View>\r\n            </View>\r\n            <View style={styles.topLeft}>\r\n                <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n                    <BackSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}