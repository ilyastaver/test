{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _invariant = require(\"./utils/invariant\");\nvar _invariant2 = _interopRequireDefault(_invariant);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar StateUtils = {\n  get: function get(state, key) {\n    return state.routes.find(function (route) {\n      return route.key === key;\n    }) || null;\n  },\n  indexOf: function indexOf(state, key) {\n    return state.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n  },\n  has: function has(state, key) {\n    return !!state.routes.some(function (route) {\n      return route.key === key;\n    });\n  },\n  push: function push(state, route) {\n    (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);\n    var routes = state.routes.slice();\n    routes.push(route);\n    return _extends({}, state, {\n      index: routes.length - 1,\n      routes: routes\n    });\n  },\n  pop: function pop(state) {\n    if (state.index <= 0) {\n      return state;\n    }\n    var routes = state.routes.slice(0, -1);\n    return _extends({}, state, {\n      index: routes.length - 1,\n      routes: routes\n    });\n  },\n  jumpToIndex: function jumpToIndex(state, index) {\n    if (index === state.index) {\n      return state;\n    }\n    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);\n    return _extends({}, state, {\n      index: index\n    });\n  },\n  jumpTo: function jumpTo(state, key) {\n    var index = StateUtils.indexOf(state, key);\n    return StateUtils.jumpToIndex(state, index);\n  },\n  back: function back(state) {\n    var index = state.index - 1;\n    var route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n  forward: function forward(state) {\n    var index = state.index + 1;\n    var route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n  replaceAndPrune: function replaceAndPrune(state, key, route) {\n    var index = StateUtils.indexOf(state, key);\n    var replaced = StateUtils.replaceAtIndex(state, index, route);\n    return _extends({}, replaced, {\n      routes: replaced.routes.slice(0, index + 1)\n    });\n  },\n  replaceAt: function replaceAt(state, key, route) {\n    var preserveIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var index = StateUtils.indexOf(state, key);\n    var nextIndex = preserveIndex ? state.index : index;\n    var nextState = StateUtils.replaceAtIndex(state, index, route);\n    nextState.index = nextIndex;\n    return nextState;\n  },\n  replaceAtIndex: function replaceAtIndex(state, index, route) {\n    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);\n    if (state.routes[index] === route && index === state.index) {\n      return state;\n    }\n    var routes = state.routes.slice();\n    routes[index] = route;\n    return _extends({}, state, {\n      index: index,\n      routes: routes\n    });\n  },\n  reset: function reset(state, routes, index) {\n    (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');\n    var nextIndex = index === undefined ? routes.length - 1 : index;\n    if (state.routes.length === routes.length && state.index === nextIndex) {\n      var compare = function compare(route, ii) {\n        return routes[ii] === route;\n      };\n      if (state.routes.every(compare)) {\n        return state;\n      }\n    }\n    (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n    return _extends({}, state, {\n      index: nextIndex,\n      routes: routes\n    });\n  }\n};\nexports.default = StateUtils;","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_invariant","require","_invariant2","_interopRequireDefault","obj","__esModule","default","StateUtils","get","state","routes","find","route","indexOf","findIndex","has","some","push","slice","index","pop","jumpToIndex","jumpTo","back","forward","replaceAndPrune","replaced","replaceAtIndex","replaceAt","preserveIndex","undefined","nextIndex","nextState","reset","Array","isArray","compare","ii","every"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/Documents/front/FrontM/node_modules/@react-navigation/core/dist/StateUtils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _invariant = require('./utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Utilities to perform atomic operation with navigate state and routes.\n *\n * ```javascript\n * const state1 = {key: 'screen 1'};\n * const state2 = NavigationStateUtils.push(state1, {key: 'screen 2'});\n * ```\n */\nvar StateUtils = {\n  /**\n   * Gets a route by key. If the route isn't found, returns `null`.\n   */\n  get(state, key) {\n    return state.routes.find(route => route.key === key) || null;\n  },\n\n  /**\n   * Returns the first index at which a given route's key can be found in the\n   * routes of the navigation state, or -1 if it is not present.\n   */\n  indexOf(state, key) {\n    return state.routes.findIndex(route => route.key === key);\n  },\n\n  /**\n   * Returns `true` at which a given route's key can be found in the\n   * routes of the navigation state.\n   */\n  has(state, key) {\n    return !!state.routes.some(route => route.key === key);\n  },\n\n  /**\n   * Pushes a new route into the navigation state.\n   * Note that this moves the index to the position to where the last route in the\n   * stack is at.\n   */\n  push(state, route) {\n    (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);\n\n    var routes = state.routes.slice();\n    routes.push(route);\n\n    return _extends({}, state, {\n      index: routes.length - 1,\n      routes\n    });\n  },\n\n  /**\n   * Pops out a route from the navigation state.\n   * Note that this moves the index to the position to where the last route in the\n   * stack is at.\n   */\n  pop(state) {\n    if (state.index <= 0) {\n      // [Note]: Over-popping does not throw error. Instead, it will be no-op.\n      return state;\n    }\n    var routes = state.routes.slice(0, -1);\n    return _extends({}, state, {\n      index: routes.length - 1,\n      routes\n    });\n  },\n\n  /**\n   * Sets the focused route of the navigation state by index.\n   */\n  jumpToIndex(state, index) {\n    if (index === state.index) {\n      return state;\n    }\n\n    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);\n\n    return _extends({}, state, {\n      index\n    });\n  },\n\n  /**\n   * Sets the focused route of the navigation state by key.\n   */\n  jumpTo(state, key) {\n    var index = StateUtils.indexOf(state, key);\n    return StateUtils.jumpToIndex(state, index);\n  },\n\n  /**\n   * Sets the focused route to the previous route.\n   */\n  back(state) {\n    var index = state.index - 1;\n    var route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n\n  /**\n   * Sets the focused route to the next route.\n   */\n  forward(state) {\n    var index = state.index + 1;\n    var route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n\n  /**\n   * Replace a route by a key.\n   * Note that this moves the index to the position to where the new route in the\n   * stack is at and updates the routes array accordingly.\n   */\n  replaceAndPrune(state, key, route) {\n    var index = StateUtils.indexOf(state, key);\n    var replaced = StateUtils.replaceAtIndex(state, index, route);\n\n    return _extends({}, replaced, {\n      routes: replaced.routes.slice(0, index + 1)\n    });\n  },\n\n  /**\n   * Replace a route by a key.\n   * Note that this moves the index to the position to where the new route in the\n   * stack is at. Does not prune the routes.\n   * If preserveIndex is true then replacing the route does not cause the index\n   * to change to the index of that route.\n   */\n  replaceAt(state, key, route, preserveIndex = false) {\n    var index = StateUtils.indexOf(state, key);\n    var nextIndex = preserveIndex ? state.index : index;\n    var nextState = StateUtils.replaceAtIndex(state, index, route);\n    nextState.index = nextIndex;\n    return nextState;\n  },\n\n  /**\n   * Replace a route by a index.\n   * Note that this moves the index to the position to where the new route in the\n   * stack is at.\n   */\n  replaceAtIndex(state, index, route) {\n    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);\n\n    if (state.routes[index] === route && index === state.index) {\n      return state;\n    }\n\n    var routes = state.routes.slice();\n    routes[index] = route;\n\n    return _extends({}, state, {\n      index,\n      routes\n    });\n  },\n\n  /**\n   * Resets all routes.\n   * Note that this moves the index to the position to where the last route in the\n   * stack is at if the param `index` isn't provided.\n   */\n  reset(state, routes, index) {\n    (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');\n\n    var nextIndex = index === undefined ? routes.length - 1 : index;\n\n    if (state.routes.length === routes.length && state.index === nextIndex) {\n      var compare = (route, ii) => routes[ii] === route;\n      if (state.routes.every(compare)) {\n        return state;\n      }\n    }\n\n    (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n\n    return _extends({}, state, {\n      index: nextIndex,\n      routes\n    });\n  }\n};\n\nexports.default = StateUtils;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}