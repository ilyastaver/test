{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport SearchBody from \"../components/searchBodies/searchBody\";\nimport ShowAvatar from \"../components/Avatar/ShowAvatar/showAvatar\";\nimport BorderButton from \"../components/buttons/borderButton\";\nimport ChangeAvatar from \"../components/Avatar/ChangeAvatar/changeAvatar\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      nickname: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var isFormValid = inputText.nickname;\n  var _useState3 = useState(36),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emailFontSize = _useState4[0],\n    setEmailFontSize = _useState4[1];\n  var handleEmailLayout = function handleEmailLayout(event) {\n    var desiredMaxWidth = 300;\n    var desiredMaxFontSize = 48;\n    var emailContainerWidth = event.nativeEvent.layout.width;\n    var emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\n    setEmailFontSize(emailFontSize);\n  };\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.profileSettingsContainer,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 10\n        },\n        children: _jsx(ChangeAvatar, {})\n      }), _jsx(Text, {\n        style: {\n          color: '#000000',\n          fontSize: 48,\n          textAlign: 'center',\n          marginBottom: 13\n        },\n        children: \"Username\"\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15\n        },\n        children: _jsx(View, {\n          ref: emailContainerRef,\n          onLayout: handleEmailLayout,\n          children: _jsx(Text, {\n            style: {\n              color: '#000000',\n              fontSize: emailFontSize,\n              textAlign: 'center',\n              marginBottom: 13\n            },\n            children: \"ilidfdfdffdfdfdfdfdfa.stavier@mail.ru\"\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangeEmail');\n          }\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить пароль\",\n          onPress: function onPress() {\n            return navigation.navigate('ChangePassword');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('MainAuth');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","DataInput","SearchBody","ShowAvatar","BorderButton","ChangeAvatar","BackSvg","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useState","nickname","_useState2","_slicedToArray","inputText","setInputText","isFormValid","_useState3","_useState4","emailFontSize","setEmailFontSize","handleEmailLayout","event","desiredMaxWidth","desiredMaxFontSize","emailContainerWidth","nativeEvent","layout","width","Math","min","style","containerMain","children","profileSettingsContainer","marginBottom","color","fontSize","textAlign","borderTopWidth","borderBottomWidth","borderColor","paddingHorizontal","paddingVertical","ref","emailContainerRef","onLayout","title","onPress","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const isFormValid = inputText.nickname;\r\n\r\n  const [emailFontSize, setEmailFontSize] = useState(36);\r\n\r\n  const handleEmailLayout = (event) => {\r\n    const desiredMaxWidth = 300; // You can adjust this as needed\r\n    const desiredMaxFontSize = 48; // You can adjust this as needed\r\n    const emailContainerWidth = event.nativeEvent.layout.width;\r\n    const emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\r\n    setEmailFontSize(emailFontSize);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n\r\n      <View style={styles.profileSettingsContainer}>\r\n        <View style={{\r\n          marginBottom: 10,\r\n        }}>\r\n          <ChangeAvatar />\r\n        </View>\r\n        <Text style={{\r\n          color: '#000000',\r\n          fontSize: 48,\r\n          textAlign: 'center',\r\n          marginBottom: 13\r\n        }}>Username</Text>\r\n        <View style={{\r\n          borderTopWidth: 1,\r\n          borderBottomWidth: 1,\r\n          borderColor: '#000000',\r\n          paddingHorizontal: 10,\r\n          paddingVertical: 15,\r\n        }}>\r\n          <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n            <Text style={{\r\n              color: '#000000',\r\n              fontSize: emailFontSize,\r\n              textAlign: 'center',\r\n              marginBottom: 13\r\n            }}>ilidfdfdffdfdfdfdfdfa.stavier@mail.ru</Text>\r\n          </View>\r\n        </View>\r\n        <View >\r\n          <HeaderButton title={\"Изменить почту\"} onPress={() => navigation.navigate('ChangeEmail')} />\r\n        </View>\r\n        <View >\r\n          <HeaderButton title={\"Изменить пароль\"} onPress={() => navigation.navigate('ChangePassword')} />\r\n        </View>\r\n\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}