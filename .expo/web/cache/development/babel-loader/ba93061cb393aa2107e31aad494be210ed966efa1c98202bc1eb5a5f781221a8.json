{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchBody(_ref) {\n  var data = _ref.data;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isHovered = _React$useState2[0],\n    setIsHovered = _React$useState2[1];\n  var avatarUrl = data.avatarUrl,\n    username = data.username,\n    channelName = data.channelName,\n    onPress = data.onPress,\n    containerStyle = data.containerStyle;\n  return _jsx(TouchableOpacity, {\n    style: [styles.container, containerStyle, isHovered && {\n      backgroundColor: \"#E7DEDE\"\n    }],\n    onPress: onPress,\n    onMouseEnter: function onMouseEnter() {\n      return setIsHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setIsHovered(false);\n    },\n    children: avatarUrl ? _jsxs(View, {\n      style: styles.avatarContainer,\n      children: [_jsx(ShowAvatar, {\n        imageUrl: avatarUrl\n      }), _jsx(Text, {\n        style: styles.username,\n        children: username\n      })]\n    }) : _jsx(Text, {\n      style: styles.channelName,\n      children: username\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 26,\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  },\n  avatarContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  username: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  channelName: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableOpacity","Image","ShowAvatar","jsx","_jsx","jsxs","_jsxs","SearchBody","_ref","data","_React$useState","useState","_React$useState2","_slicedToArray","isHovered","setIsHovered","avatarUrl","username","channelName","onPress","containerStyle","style","styles","container","backgroundColor","onMouseEnter","onMouseLeave","children","avatarContainer","imageUrl","create","borderRadius","paddingVertical","paddingHorizontal","flexDirection","alignItems","fontSize","fontWeight"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/searchBodies/searchBody.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Text, TouchableOpacity, Image } from \"react-native-web\";\r\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\r\n\r\nexport default function SearchBody({ data }) {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const { avatarUrl, username, channelName, onPress, containerStyle } = data;\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.container, containerStyle, isHovered && { backgroundColor: \"#E7DEDE\" }]}\r\n      onPress={onPress}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      {avatarUrl ? (\r\n        <View style={styles.avatarContainer}>\r\n          <ShowAvatar imageUrl= {avatarUrl}  />\r\n          <Text style={styles.username}>{username}</Text>\r\n        </View>\r\n      ) : (\r\n        <Text style={styles.channelName}>{username}</Text>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 26,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n  },\r\n  avatarContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  username: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  channelName: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,UAAU;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAW;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACvC,IAAAC,eAAA,GAAkCd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAhDI,SAAS,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAC9B,IAAQI,SAAS,GAAqDP,IAAI,CAAlEO,SAAS;IAAEC,QAAQ,GAA2CR,IAAI,CAAvDQ,QAAQ;IAAEC,WAAW,GAA8BT,IAAI,CAA7CS,WAAW;IAAEC,OAAO,GAAqBV,IAAI,CAAhCU,OAAO;IAAEC,cAAc,GAAKX,IAAI,CAAvBW,cAAc;EACjE,OACEhB,IAAA,CAACJ,gBAAgB;IACfqB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEH,cAAc,EAAEN,SAAS,IAAI;MAAEU,eAAe,EAAE;IAAU,CAAC,CAAE;IACvFL,OAAO,EAAEA,OAAQ;IACjBM,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMV,YAAY,CAAC,IAAI,CAAC;IAAA,CAAC;IACvCW,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMX,YAAY,CAAC,KAAK,CAAC;IAAA,CAAC;IAAAY,QAAA,EAEvCX,SAAS,GACRV,KAAA,CAACT,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACM,eAAgB;MAAAD,QAAA,GAClCvB,IAAA,CAACF,UAAU;QAAC2B,QAAQ,EAAGb;MAAU,CAAG,CAAC,EACrCZ,IAAA,CAACL,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACL,QAAS;QAAAU,QAAA,EAAEV;MAAQ,CAAO,CAAC;IAAA,CAC3C,CAAC,GAEPb,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACJ,WAAY;MAAAS,QAAA,EAAEV;IAAQ,CAAO;EAClD,CACe,CAAC;AAEvB;AAEA,IAAMK,MAAM,GAAGxB,UAAU,CAACgC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTC,eAAe,EAAE,SAAS;IAC1BO,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDL,eAAe,EAAE;IACfM,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDlB,QAAQ,EAAE;IACRmB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDnB,WAAW,EAAE;IACXkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}