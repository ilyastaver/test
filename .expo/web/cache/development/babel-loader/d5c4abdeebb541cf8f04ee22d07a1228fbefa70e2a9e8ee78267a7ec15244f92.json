{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport SettingsBody from \"../components/settingsBody/settingsBody\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAdmin = _useState2[0],\n    SetIsAdmin = _useState2[1];\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsx(View, {\n      style: styles.settingsContainer,\n      children: _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: _jsx(SettingsBody, {\n          username: 'Hello',\n          role: 'Asshole'\n        })\n      })\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Channel');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: 'Удалить канал',\n        onPress: function onPress() {\n          return console.log(\"Delete\");\n        },\n        disabled: !isAdmin\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableHighlight","ScrollView","CreateSvg","useStyles","SearchInput","HeaderButton","BackSvg","SettingsBody","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","styles","_useState","_useState2","_slicedToArray","isAdmin","SetIsAdmin","style","containerMain","children","settingsContainer","flex","scrollbarWidth","flexDirection","username","role","topLeft","onPress","navigate","bottomLeft","title","console","log","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\n\r\nexport default function SettingsScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [isAdmin, SetIsAdmin] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.settingsContainer}>\r\n      <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}> \r\n        <SettingsBody username={'Hello'} role={'Asshole'}/>\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Channel')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n          <HeaderButton title={'Удалить канал'} onPress={() => console.log(\"Delete\")} disabled={!isAdmin}/>\r\n      </View>\r\n    </View>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,OAAO;AACd,OAAOC,YAAY;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnE,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACjD,IAAMC,MAAM,GAAGZ,SAAS,CAAC,CAAC;EAC1B,IAAAa,SAAA,GAA8BnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,OACEN,KAAA,CAACb,IAAI;IAACuB,KAAK,EAAEN,MAAM,CAACO,aAAc;IAAAC,QAAA,GAChCd,IAAA,CAACX,IAAI;MAACuB,KAAK,EAAEN,MAAM,CAACS,iBAAkB;MAAAD,QAAA,EACtCd,IAAA,CAACR,UAAU;QAACoB,KAAK,EAAE;UAAEI,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE,CAAC;UAAEC,aAAa,EAAE;QAAS,CAAE;QAAAJ,QAAA,EACzEd,IAAA,CAACF,YAAY;UAACqB,QAAQ,EAAE,OAAQ;UAACC,IAAI,EAAE;QAAU,CAAC;MAAC,CACvC;IAAC,CACT,CAAC,EACPpB,IAAA,CAACX,IAAI;MAACuB,KAAK,EAAEN,MAAM,CAACe,OAAQ;MAAAP,QAAA,EAC1Bd,IAAA,CAACT,kBAAkB;QAAC+B,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMjB,UAAU,CAACkB,QAAQ,CAAC,SAAS,CAAC;QAAA,CAAC;QAAAT,QAAA,EAChEd,IAAA,CAACH,OAAO,IAAE;MAAC,CACO;IAAC,CACjB,CAAC,EACPG,IAAA,CAACX,IAAI;MAACuB,KAAK,EAAEN,MAAM,CAACkB,UAAW;MAAAV,QAAA,EAC3Bd,IAAA,CAACJ,YAAY;QAAC6B,KAAK,EAAE,eAAgB;QAACH,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QAAA,CAAC;QAACC,QAAQ,EAAE,CAAClB;MAAQ,CAAC;IAAC,CAC/F,CAAC;EAAA,CACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}