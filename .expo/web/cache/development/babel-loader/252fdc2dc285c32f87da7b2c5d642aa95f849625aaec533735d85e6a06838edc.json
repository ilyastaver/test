{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SendSvg from \"../../../assets/icons/sendSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MessageInput = function MessageInput(_ref) {\n  var onSend = _ref.onSend;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var handleSend = function handleSend() {\n    if (message) {\n      onSend(message);\n      setMessage('');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Type your message here...\",\n      value: message,\n      onChangeText: setMessage\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      onPress: handleSend,\n      children: _jsx(SendSvg, {})\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    borderRadius: 10\n  },\n  input: {\n    flex: 1,\n    height: 44,\n    fontSize: 16,\n    paddingLeft: 40,\n    borderRadius: 10,\n    backgroundColor: \"#FFFFFF\",\n    color: \"#000000\",\n    boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\n    width: \"80%\"\n  },\n  sendButton: {\n    alignSelf: 'flex-end'\n  }\n});\nexport default MessageInput;","map":{"version":3,"names":["React","useState","View","StyleSheet","TouchableOpacity","TextInput","SendSvg","jsx","_jsx","jsxs","_jsxs","MessageInput","_ref","onSend","_useState","_useState2","_slicedToArray","message","setMessage","handleSend","style","styles","container","children","input","placeholder","value","onChangeText","sendButton","onPress","create","flexDirection","alignItems","borderRadius","flex","height","fontSize","paddingLeft","backgroundColor","color","boxShadow","width","alignSelf"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/inputs/messageInput/messageInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, TextInput } from 'react-native-web';\r\n\r\nimport SendSvg from '../../../assets/icons/sendSvg';\r\n\r\nconst MessageInput = ({ onSend }) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (message) {\r\n      onSend(message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Type your message here...\"\r\n        value={message}\r\n        onChangeText={setMessage}\r\n      />\r\n      <TouchableOpacity style={styles.sendButton} onPress={handleSend}>\r\n        <SendSvg />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        borderRadius: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      height: 44,\r\n      fontSize: 16,\r\n      paddingLeft: 40,\r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      width: \"80%\", // Add this line to set input width to 80%\r\n    },\r\n    sendButton: {\r\n        alignSelf: 'flex-end',\r\n      },\r\n  });\r\n  export default MessageInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAGxC,OAAOC,OAAO;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EAC5B,IAAAC,SAAA,GAA8Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB,IAAIF,OAAO,EAAE;MACXJ,MAAM,CAACI,OAAO,CAAC;MACfC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,OACER,KAAA,CAACR,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bf,IAAA,CAACH,SAAS;MACRe,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAET,OAAQ;MACfU,YAAY,EAAET;IAAW,CAC1B,CAAC,EACFV,IAAA,CAACJ,gBAAgB;MAACgB,KAAK,EAAEC,MAAM,CAACO,UAAW;MAACC,OAAO,EAAEV,UAAW;MAAAI,QAAA,EAC9Df,IAAA,CAACF,OAAO,IAAE;IAAC,CACK,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMe,MAAM,GAAGlB,UAAU,CAAC2B,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,YAAY;IACxBC,YAAY,EAAE;EAClB,CAAC;EACDT,KAAK,EAAE;IACLU,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfJ,YAAY,EAAE,EAAE;IAChBK,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,8BAA8B;IACzCC,KAAK,EAAE;EACT,CAAC;EACDb,UAAU,EAAE;IACRc,SAAS,EAAE;EACb;AACJ,CAAC,CAAC;AACF,eAAe/B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}