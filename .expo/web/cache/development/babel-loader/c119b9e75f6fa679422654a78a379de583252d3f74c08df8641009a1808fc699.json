{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport { useEffect, useState } from \"react\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction RegScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      nickname: '',\n      email: '',\n      password: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var isFormValid = inputText.email && inputText.password && inputText.email;\n  return _jsx(View, {\n    style: styles.containerMain,\n    children: _jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.nickname,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                nickname: text\n              }));\n            },\n            placeholder: \"Никнейм\"\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.email,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                email: text\n              }));\n            },\n            placeholder: \"Почта\"\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: \"Пароль\",\n            secureTextEntry: true\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Зарегистрироваться\",\n          onPress: function onPress() {\n            return navigation.navigate('Auth');\n          }\n        })\n      })]\n    })\n  });\n}\nexport default RegScreen;","map":{"version":3,"names":["React","View","Text","Button","TouchableHighlight","useStyles","DataInput","useEffect","useState","HeaderButton","jsx","_jsx","jsxs","_jsxs","RegScreen","_ref","navigation","styles","_useState","nickname","email","password","_useState2","_slicedToArray","inputText","setInputText","isFormValid","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","secureTextEntry","title","onPress","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/RegScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useEffect, useState } from \"react\";\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\n\r\n\r\nfunction RegScreen({ navigation}) {\r\n    const styles = useStyles();\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n        email: '',\r\n        password:''\r\n      });\r\n      const isFormValid = inputText.email && inputText.password && inputText.email; \r\n  return (\r\n    <View style={styles.containerMain}>\r\n    <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n    <View style={{marginBottom: 13}}>\r\n    <DataInput value={inputText.nickname} setValue={(text) => setInputText({...inputText, nickname: text})} placeholder={\"Никнейм\"} />\r\n    </View>\r\n    <View style={{marginBottom: 13}}>\r\n    <DataInput value={inputText.email} setValue={(text) => setInputText({...inputText, email: text})} placeholder={\"Почта\"} />\r\n    </View>\r\n    <View style={{marginBottom: 13}}>\r\n    <DataInput value={inputText.password} setValue={(text) => setInputText({...inputText, password: text})} placeholder={\"Пароль\"}  secureTextEntry={true} />\r\n    </View>\r\n    </View>\r\n    \r\n    \r\n    <View >\r\n    <HeaderButton title={\"Зарегистрироваться\"} onPress={() => navigation.navigate('Auth')}/>\r\n    </View>\r\n    </View>\r\n    \r\n  </View>\r\n  );\r\n}\r\n\r\nexport default RegScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}