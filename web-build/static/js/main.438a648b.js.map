{"version":3,"file":"static/js/main.438a648b.js","mappings":"wvBAkCA,QAhCgB,SAACA,GAAK,OACpBC,EAAAA,EAAAA,MAACC,IAAGC,EAAAA,EAAA,CACFC,MAAM,6BACNC,MAAO,IACPC,OAAQ,IACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLI,EAAE,83FAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,UACLI,EAAE,oIAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLK,YAAa,GACbD,EAAE,oIAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,UACLI,EAAE,+NAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLK,YAAa,GACbD,EAAE,iOAEA,E,+CC1BO,SAASE,EAAYC,GAA8B,IAA5BC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QAASC,EAAQH,EAARG,SAC9CC,ECLO,SAAmBD,GAChC,IACME,EAAsB,GADVC,EAAAA,QAAAA,IAAe,UAAzBf,MAGFgB,EAAcJ,EAAW,sBAAwB,0BAEvD,OAAOK,EAAAA,QAAAA,OAAkB,CACvBC,OAAQ,CACNC,gBAAiBH,EACjBI,aAAc,GACdC,SAAUP,EACVQ,gBAAiB,GACjBC,kBAAmB,GACnBC,UAAW,QACXC,eAAgB,GAChBC,YAAa,IAEfC,WAAY,CACVC,WAAY,qBACZC,MAAO,UACPC,SAAU,GACVC,UAAW,WAGjB,CDnBiBC,CAAUpB,GAEzB,OACER,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACC,MAAOrB,EAAOK,OAAQP,QAASA,EAASC,SAAUA,EAAST,UAE3EC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAOc,WAAWxB,SAAEO,KAIzC,CEbe,SAASsB,IACtB,IAAAI,GAAsCC,EAAAA,EAAAA,UAASC,OAAOC,YAAWC,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA7CM,GAAFF,EAAA,GAAgBA,EAAA,IAClCG,GAAwCN,EAAAA,EAAAA,UAASC,OAAOM,aAAYC,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA/CG,GAAFD,EAAA,GAAiBA,EAAA,IAcpC,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnBN,EAAeJ,OAAOC,YACtBO,EAAgBR,OAAOM,YACzB,EAIA,OAFAN,OAAOW,iBAAiB,SAAUD,GAE3B,WACLV,OAAOY,oBAAoB,SAAUF,EACvC,CACF,GAAG,IACI/B,EAAAA,QAAAA,OAAkB,CACvBkC,UAAW,CACTC,KAAM,EACNjC,gBAAiB,UACjBkC,eAAgB,SAChBC,WAAY,UAEdC,aAAc,CACZC,UAAW,IAEbC,cAAe,CACbL,KAAM,EACNjC,gBAAiB,0BACjBkC,eAAgB,SAChBC,WAAY,UAEdI,WAAY,CACVC,SAAU,WACVC,OAAQ,GACRC,KAAM,IAERC,QAAS,CACPH,SAAU,WACVI,IAAK,GACLF,KAAM,IAERG,cAAe,CACb7C,gBAAiB,UACjBC,aAAc,GACd6C,QAAS,GACTC,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXX,SAAU,WACVI,IAAK,MACLvC,UAAW,OACX8B,WAAY,SACZD,eAAgB,UAElBkB,iBAAkB,CAChBpD,gBAAiB,UACjBC,aAAc,GACd6C,QAAS,GACTC,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXX,SAAU,WACVI,IAAK,MACL/D,MAAO,MACPC,OAAQ,MACRoD,eAAgB,SAChBC,WAAY,UAEdkB,KAAM,CACJ5C,WAAY,qBACZC,MAAO,UACPC,SAAU,GACVC,UAAW,UAEb0C,eAAgB,CACdzE,MAAO,MACPsD,WAAY,SACZD,eAAgB,aAChBqB,WAAY,KAIlB,C,cCxFaC,GAAeC,EAAAA,EAAAA,iBAEfC,EAAgB,SAAHpE,GAAsB,IAAhBN,EAAQM,EAARN,SAC9BiC,GAA0CC,EAAAA,EAAAA,UAAS,MAAKG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAAjD0C,EAAatC,EAAA,GAAEuC,EAAgBvC,EAAA,IAEtCO,EAAAA,EAAAA,YAAU,WACR,IAAMiC,EAAcC,aAAaC,QAAQ,iBACrCF,GACFD,EAAiBI,KAAKC,MAAMJ,GAGhC,GAAG,IAOH,OACE5E,EAAAA,EAAAA,KAACuE,EAAaU,SAAQ,CAACC,MAAO,CAAER,cAAAA,EAAeS,oBANrB,SAACC,GAC3BT,EAAiBS,GACjBP,aAAaQ,QAAQ,gBAAiBN,KAAKO,UAAUF,GACvD,GAGuErF,SAClEA,GAGP,ECrBMwF,GAAcf,EAAAA,EAAAA,iBAEPgB,EAAe,SAAHnF,GAAsB,IAAhBN,EAAQM,EAARN,SAC7BiC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA5CyD,EAAUrD,EAAA,GAAEsD,EAAatD,EAAA,GAChCG,GAAwBN,EAAAA,EAAAA,UAAS,MAAKQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA/BoD,EAAIlD,EAAA,GAAEmD,EAAOnD,EAAA,GACZ0C,GAAwBU,EAAAA,EAAAA,YAAWtB,GAAnCY,qBAERxC,EAAAA,EAAAA,YAAU,WACRmD,GACF,GAAG,IAEH,IAAMA,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,UAAG,YACvB,IACE,IAAMC,QAAwBC,EAAAA,QAAAA,QAAqB,cAC7CC,QAAiBD,EAAAA,QAAAA,QAAqB,QACpB,SAApBD,GAA8BE,IAChCT,GAAc,GACdE,EAAQb,KAAKC,MAAMmB,IAEvB,CAAE,MAAOC,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,CACF,IAAC,kBAXqB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAahBC,EAAK,eAAAC,GAAAT,EAAAA,EAAAA,UAAG,UAAOG,GACnBT,GAAc,GACdE,EAAQO,GACR,UACQD,EAAAA,QAAAA,cACAA,EAAAA,QAAAA,QAAqB,aAAc,cACnCA,EAAAA,QAAAA,QAAqB,OAAQnB,KAAKO,UAAUa,GACpD,CAAE,MAAOC,GACPC,QAAQD,MAAM,sBAAuBA,EACvC,CACF,IAAC,gBAVUM,GAAA,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAYLI,EAAM,eAAAC,GAAAZ,EAAAA,EAAAA,UAAG,YACbN,GAAc,GACdE,EAAQ,MACRT,EAAoB,MACpB,UACQe,EAAAA,QAAAA,WAAwB,oBACxBA,EAAAA,QAAAA,WAAwB,QAC9BW,WAAWC,SAAS,OACtB,CAAE,MAAOV,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,IAAC,kBAXW,OAAAQ,EAAAN,MAAA,KAAAC,UAAA,KAiBNQ,EAAmB,CACvBtB,WAAAA,EACAE,KAAAA,EACAa,MAAAA,EACAG,OAAAA,EACAK,WATiB,SAACC,GAClBrB,EAAQqB,EACV,GAUA,OACEjH,EAAAA,EAAAA,KAACuF,EAAYN,SAAQ,CAACC,MAAO6B,EAAiBhH,SAC3CA,GAGP,EAEA,UC5CA,QArBA,SAAwBM,GAAkB,IAAfwG,EAAUxG,EAAVwG,WACnBpG,EAASmB,IAGf,OAFuBiE,EAAAA,EAAAA,YAAWN,GAA1BE,YAGNoB,EAAWC,SAAS,YACb,OAGPtH,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOsC,UAAUhD,SAAA,EAC5BC,EAAAA,EAAAA,KAACmH,EAAO,KACRnH,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO0C,aAAapD,UAC/BC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAO,uCACPC,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,QAK1D,E,2kBCHA,QArBkB,SAACvH,GAAK,OACtBC,EAAAA,EAAAA,MAACC,IAAGC,EAAAA,EAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAIzH,KAAK,aACpCE,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAIzH,KAAK,OAAOK,YAAa,MACxDH,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLI,EAAE,uHAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,OACPC,YAAa,IACbvH,EAAE,yHAEA,E,ioBCLR,QAdkB,SAACX,GAAK,OACtBS,EAAAA,EAAAA,KAACP,IAAGC,EAAAA,EAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,UAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,UACLI,EAAE,kYAEA,E,2kBCGR,QAfiB,SAACX,GAAK,OACrBS,EAAAA,EAAAA,KAACP,IAAGC,EAAAA,EAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,UAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,OACPC,YAAa,IACbvH,EAAE,uDAEA,E,ylBCGR,QAfgB,SAACX,GAAK,OACpBS,EAAAA,EAAAA,KAACP,IAAGC,EAAAA,EAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,UAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLI,EAAE,kFAEA,ECNO,SAASwH,EAAUrH,GAA0B,IAAvBsH,EAAQtH,EAARsH,SAC7BlH,ECRO,SAAmBlB,GAC9B,IAAAqI,GAA0BC,EAAAA,EAAAA,WAClBC,GADKF,EAALhI,MAAagI,EAAN/H,OACKN,EAAZuI,SAEFC,EAAiBD,EAAU,GAAK,GAChCE,EAAaF,EAAUC,EAAiB,GACxCE,EAAcH,EAAUC,EAAiB,GACzCG,EAAiBJ,EAAUC,EAAiB,GAC5CI,EAAkBL,EAAUC,EAAiB,GAEnD,OAAOlH,EAAAA,QAAAA,OAAkB,CACvBkC,UAAW,CACTqF,cAAe,OAEjBhD,MAAO,CACLxF,MAAOoI,EACPnI,OAAQoI,EACRjH,aAAc,KAEhBqH,MAAO,CACLxE,QAAS,EACT7C,aAAc,IACdM,YAAa,GACbgH,YAAa,EACbC,YAAa,WAEfC,UAAW,CACT3I,OAAQsI,EACRvI,MAAOsI,EACPnH,gBAAiB,UACjBC,aAAc,IACdiC,eAAgB,SAChBC,WAAY,UAEduF,KAAM,CACJrF,UAAW,GACXgF,cAAe,UAEjBM,SAAU,CACRhH,SAAU,GACViH,WAAY,OACZC,aAAc,EACdxF,UAAW,GAEbyF,YAAa,CACXnH,SAAU,GACVD,MAAO,YAGb,CDzCeG,CAAU,CAAEkG,QADyBzH,EAAPyH,UAGrCnC,IADkBE,EAAAA,EAAAA,YAAWtB,GAA7BG,eACSmB,EAAAA,EAAAA,YAAWN,GAApBI,MAkBR,OACE3F,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOsC,UAAUhD,UAC5BC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4H,MAAMtI,SAlBT,WACnB,GAAI4H,GAAYA,EAASmB,WAAW,cAClC,OAAO9I,EAAAA,EAAAA,KAAC+I,EAAAA,QAAK,CAACjH,MAAOrB,EAAO2E,MAAO4D,OAAQ,CAAEC,IAAKtB,KAC7C,GAAIA,EACT,OAAO3H,EAAAA,EAAAA,KAAC+I,EAAAA,QAAK,CAACjH,MAAOrB,EAAO2E,MAAO4D,OAAQ,CAAEC,IAAI,0BAA2BtB,KACvE,GAAIhC,EAAKP,MAAO,CACrB,IAAM8D,EAAW,0BAA6BvD,EAAKP,MACnD,OAAOpF,EAAAA,EAAAA,KAAC+I,EAAAA,QAAK,CAACjH,MAAOrB,EAAO2E,MAAO4D,OAAQ,CAAEC,IAAKC,IACpD,CACE,OACElJ,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO+H,UAAUzI,UAC5BC,EAAAA,EAAAA,KAACmJ,EAAO,CAACrH,MAAO,CAAEsH,UAAW,CAAC,CAAEC,MAAO,SAI/C,CAIKC,MAIP,C,2kBEnBA,QAhBkB,SAAC/J,GAAK,OACtBC,EAAAA,EAAAA,MAACC,IAAGC,EAAAA,EAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,GAAIC,GAAI,OAAQC,EAAG,GAAIC,OAAO,OAAOC,YAAa,KAC9DzH,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,OACPC,YAAa,EACbvH,EAAE,gDAEA,ECVO,SAASqJ,EAAUlJ,GAAY,IAATmJ,EAAInJ,EAAJmJ,KACnCC,EAAkCC,EAAAA,UAAe,GAAMC,GAAAtH,EAAAA,EAAAA,SAAAoH,EAAA,GAAhDG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,EAAuEN,EAAvEM,UAAWC,EAA4DP,EAA5DO,SAAuBxJ,GAAqCiJ,EAAlDQ,YAAkDR,EAArCjJ,SAAS0J,EAA4BT,EAA5BS,eAAgBC,EAAYV,EAAZU,KAAMC,EAAMX,EAANW,GAGnE1J,ECTO,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBkC,UAAW,CACThC,gBAAiB,UACjBC,aAAc,GACdE,gBAAiB,GACjBC,kBAAmB,IAErBiJ,aAAc,CACZhC,cAAe,MACflF,WAAY,SACZD,eAAgB,iBAElBoH,gBAAiB,CACfjC,cAAe,MACflF,WAAY,UAEd6G,SAAU,CACRvI,WAAY,qBACZE,SAAU,GACViH,WAAY,OACZ2B,WAAY,GAEdN,YAAa,CACXxI,WAAY,qBACZE,SAAU,GACViH,WAAY,QAEd4B,gBAAiB,CACfD,WAAY,SAGtB,CDxBiB1I,GA0Bf,OACE5B,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CACjBC,MAAO,CAACrB,EAAOsC,UAAWkH,EAAgBL,GAAa,CAAE7I,gBAAiB,YAC1ER,QAASA,EACTiK,aAAc,kBAAMX,GAAa,EAAK,EACtCY,aAAc,kBAAMZ,GAAa,EAAM,EAAC9J,UAExCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO2J,aAAarK,SAAA,CAC9B+J,IACCtK,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4J,gBAAgBtK,SAAA,EAClCC,EAAAA,EAAAA,KAAC0H,EAAU,CAACC,SAAUmC,KACtB9J,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAOsJ,SAAShK,SAAEgK,QAGjCD,IAAa9J,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAOuJ,YAAYjK,SAAEgK,IAChDG,IACClK,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAACrB,EAAO8J,gBAAiB,CAAEnB,UAAW,CAAC,CAAEC,MAAO,OAAUtJ,UACrEC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QA1CX,WAEjBmK,MAAM,uEAAuEP,EAAM,CACjFQ,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQC,iBAGnCC,MAAK,SAAAC,GAEAA,EAASC,IAEXC,MAAM,6BACNhJ,OAAOiJ,SAASC,UAGhB/E,QAAQgF,IAAI,wBAEhB,IACCC,OAAM,SAAAlF,GACLC,QAAQD,MAAM,uBAAwBA,EACxC,GACJ,EAmBkDrG,UACtCC,EAAAA,EAAAA,KAACuL,EAAS,YAOxB,C,0oBEtDe,SAASC,GAAWnL,GAAoD,IAAjD6E,EAAK7E,EAAL6E,MAAOuG,EAAQpL,EAARoL,SAAsBC,GAAFrL,EAAVwG,WAAkBxG,EAANqL,QAAWlC,GAAImC,EAAAA,EAAAA,SAAAtL,EAAAuL,GAChF5J,GAAkCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1C6J,EAASzJ,EAAA,GAAE0J,EAAY1J,EAAA,GAC9BG,GAAkDN,EAAAA,EAAAA,WAAS,GAAMQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA1DwJ,EAAiBtJ,EAAA,GAAEuJ,EAAoBvJ,EAAA,GAExCwJ,GAAcC,EAAAA,EAAAA,iBAcdzL,ECxBO,WACb,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACvBkC,UAAW,CACTqF,cAAe,MACfnF,eAAgB,SAChBC,WAAY,SACZnC,gBAAiB,UACjBoL,OAAQ,GAEVC,KAAM,CACJ7I,SAAU,WACVE,KAAM,GACN0I,OAAQ,GAGVE,YAAa,CACX9I,SAAU,WACV+I,MAAO,GACP3I,IAAK,MACLyF,UAAW,CAAC,CAAEmD,YAAa,KAC3BJ,OAAQ,GAEVK,SAAU,CACRjJ,SAAU,WACVI,IAAK,GACLF,KAAM,EACN6I,MAAO,EACPtJ,KAAM,EACNyJ,UAAW,IACXC,UAAW,OACX3L,gBAAiB,UACjBC,aAAc,GACd2L,UAAW,+BACXR,OAAQ,EACRtI,QAAS,IAEX+I,MAAO,CACL5J,KAAM,EACNxB,WAAY,qBACZ3B,OAAQ,GACRD,MAAO,IACP8B,SAAU,GACVmL,YAAa,GACbC,aAAc,GACd9L,aAAc,GACdD,gBAAiB,UACjBU,MAAO,UACPkL,UAAW,iCAGjB,CD3BiB/K,GAeTmI,EAAW,QACXgD,EAAW,OACjBC,GAA8B/K,EAAAA,EAAAA,UAAS,IAAGgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0CnL,EAAAA,EAAAA,UAAS,IAAGoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,IACtC1K,EAAAA,EAAAA,YAAU,WACR,IAAM6K,EAAS,eAAAzH,GAAAC,EAAAA,EAAAA,UAAG,YAChB,IAEE,IAAMyH,QAAwB/C,MAAM,kEAAmE,CACrGC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAIU,EAAgBxC,GAAI,CAKtB,IAJA,IAAMyC,QAAoBD,EAAgBE,OACpCC,EAAmB,GACnBC,EAAgB,GAAGC,EAAA,YAGvB,IAAMC,EAAUL,EAAYM,GAG5BJ,EAAiBK,KAAK,CACpBnD,KAAMiD,EAAQjD,KACdvK,QAAS,kBAtDA2N,EAsDkBH,EAAQ5D,QArD7C8B,EAAYnF,SAAS,UAAW,CAAEoH,UAAAA,IADhB,IAACA,CAsD6B,EACtCpE,UAAW,OAIb+D,EAAcI,KAAK,CACjBnD,KAAMiD,EAAQjD,KACdvK,QAAS,kBArDM2N,EAqDkBH,EAAQ5D,QApDnD8B,EAAYnF,SAAS,gBAAiB,CAAEoH,UAAAA,IADhB,IAACA,CAqD6B,EAC5CpE,UAAW,MAEf,EAhBSkE,EAAI,EAAGA,EAAIN,EAAYS,OAAQH,UAAGF,IAmB3C,IAAMM,QAAqB1D,MAAM,+DAAgE,CAC/FC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAIqB,EAAanD,GAIf,IAHA,IAAM9E,QAAiBiI,EAAaT,OAAOU,EAAA,YAIzC,IAAM1I,EAAOQ,EAAS6H,GAEtBJ,EAAiBK,KAAK,CACpBnD,KAAMnF,EAAKmF,KACXvK,QAAS,kBAhFE+N,EAgFoB3I,OA/E3CsG,EAAYnF,SAAS,OAAQ,CAAEwH,SAAAA,IADT,IAACA,CAgFyB,EACpCxE,UAAWnE,EAAKP,OAEpB,EARS4I,EAAI,EAAGA,EAAI7H,EAASgI,OAAQH,UAAGK,SAUxChI,QAAQgF,IAAI,6BAGd8B,EAAWS,GACXL,EAAiBM,EACnB,MACExH,QAAQgF,IAAI,+BAEhB,CAAE,MAAOjF,GACPC,QAAQgF,IAAI,uBAAwBjF,EACtC,CACF,IAAC,kBApEc,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAsEfiH,GACF,GAAG,IAEH,IAAMe,EAAkBrJ,GACnBwG,EAAS4B,EAAgBJ,GAASsB,QAAO,SAACC,GAAM,OAC/CA,EAAO3D,KAAK4D,cAAcC,SAASzJ,EAAMwJ,cAAc,IAExDhD,EAAS4B,EAAgBJ,EAE9B,OACE1N,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOsC,UAAUhD,SAAA,EAC5BC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO2L,KAAKrM,UACvBC,EAAAA,EAAAA,KAAC4O,EAAS,OAEZ5O,EAAAA,EAAAA,KAAC6O,EAAAA,QAASnP,GAAAA,GAAA,GACJ8J,GAAI,IACRsF,qBAAqB,UACrB5J,MAAOA,EACPpD,MAAO,CAACrB,EAAOmM,MAAO,CAAEC,YAAa,KACrCkC,QA3Gc,WAClBjD,GAAa,GACbE,GAAqB,EACvB,EA0GMgD,aAAc,SAAC5K,GAAI,OAAKqH,EAASrH,EAAK,KAEvCyH,IACC7L,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAACC,UA1GI,WAC1BzD,EAAS,IACTK,GAAa,GACbE,GAAqB,EACvB,EAsGuDjM,UAC/CC,EAAAA,EAAAA,KAACmP,EAAQ,CAACrN,MAAOrB,EAAO4L,gBAG3BN,IACC/L,EAAAA,EAAAA,KAACoP,EAAAA,QAAU,CAACtN,MAAOrB,EAAO+L,SAASzM,SAChCwO,EAAgBc,KAAI,SAACZ,EAAQa,GAAK,OACjCtP,EAAAA,EAAAA,KAACuJ,EAAU,CAETC,KAAM,CACJM,UAAW2E,EAAO3E,UAClBC,SAAU0E,EAAO3D,KACjBvK,QAASkO,EAAOlO,UAJb+O,EAML,QAMd,CE1Je,SAASC,GAAgBlP,GAAkB,IAAfwG,EAAUxG,EAAVwG,WACnCpG,EAASmB,IAGf,OACEpC,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAChCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO0D,iBAAiBpE,UACnCC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO2D,KAAKrE,SAAC,oOAE5BC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO6C,WAAWvD,UAC7BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,EAAC/G,UAC7DC,EAAAA,EAAAA,KAACwP,EAAS,UAKpB,C,ynBCnBe,SAASC,GAASpP,GAA4C,IAGvEqP,EAH8BxK,EAAK7E,EAAL6E,MAAOuG,EAAQpL,EAARoL,SAAUkE,EAAItP,EAAJsP,KAAM3M,EAAI3C,EAAJ2C,KAASwG,GAAImC,EAAAA,EAAAA,SAAAtL,EAAAuL,IAChEnL,ECFO,WACb,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACvBkC,UAAW,CACTqF,cAAe,MACfnF,eAAgB,SAChBC,WAAY,SACZnC,gBAAiB,UACjBC,aAAc,IAEhB4L,MAAO,CACL5J,KAAM,EACNxB,WAAY,qBACZ3B,OAAQ,GACR6B,SAAU,GACVmL,YAAa,GACb7L,aAAc,GACdD,gBAAiB,UACjBU,MAAO,UACPkL,UAAW,+BACX/M,MAAO,QAGb,CDrBiBgC,GAGf,OAAQ+N,GACN,IAAK,WACHD,EAAY,CACVE,iBAAiB,EACjBC,iBAAkB,WAClBC,UAAW,IAEb,MACF,IAAK,WACHJ,EAAY,CACVI,UAAW,IAEb,MACF,IAAK,QACHJ,EAAY,CACVG,iBAAkB,QAClBE,aAAc,gBACdD,UAAW,IAEb,MACF,IAAK,OACHJ,EAAY,CACVK,aAAc,aACdD,UAAW,GAEb,MACF,QACEJ,EAAY,CAAC,EAGjB,IAAMM,EAAahN,EAAO,MAAQ,IAGlC,OACEhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAACrB,EAAOsC,UAAW,CAAEnD,MAAOoQ,EAAYnQ,OAH5B,KAGmDE,UAC1EC,EAAAA,EAAAA,KAAC6O,EAAAA,QAASnP,GAAAA,GAAAA,GAAA,GACJ8J,GACAkG,GAAS,IACbZ,qBAAsB,UACtB5J,MAAOA,EACPpD,MAAO,CAACrB,EAAOmM,MAAO,CAAEC,YAAa,KACrCmC,aAAc,SAAC5K,GAAI,OAAKqH,EAASrH,EAAK,MAI9C,C,+kBE4DA,SAzGA,SAAmB/D,GAAkB,IAAfwG,EAAUxG,EAAVwG,WACdpG,EAASmB,IACfI,GAAkCC,EAAAA,EAAAA,UAAS,CACzC8K,SAAU,GACVkD,MAAO,KACP7N,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAHKkO,EAAS9N,EAAA,GAAE+N,EAAY/N,EAAA,GAIxBgO,EAAcF,EAAUD,OAASC,EAAUnD,SAEzCvG,GAAUX,EAAAA,EAAAA,YAAWN,GAArBiB,MA6CR,OACExG,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,UAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOmD,cAAc7D,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4D,eAAetE,SAAA,EACjCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUD,MACjBxE,SAAU,SAAArH,GAAI,OAAI+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAED,MAAO7L,IAAO,EAC7DiM,YAAY,iCACZV,KAAK,QACL3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUnD,SACjBtB,SAAU,SAAArH,GAAI,OAAI+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEnD,SAAU3I,IAAO,EAChEiM,YAAY,uCACZV,KAAK,WACL3M,MAAM,UAIZxD,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsB,UAAW,GAAI9B,YAAa,IAAKvB,SAAA,EAC9CC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,SAAS,EAAC/G,UAC/DC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAS,CAACN,WAAY,sBAAsBzB,SAAC,kFAErDC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CACTwO,kBAAmB,EACnBC,kBAAmB,QACnB3Q,MAAO,cAIbI,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAM,iCACNC,QA5EU,WAIlB,IAAMiQ,EAAc,CAClBP,MAAOC,EAAUD,MACjBlD,SAAUmD,EAAUnD,UAItBrC,MAAM,+DAAgE,CACpEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,eAEpC0G,KAAM1L,KAAKO,UAAUkL,KAEpBzF,MAAK,SAAAC,GAEAA,EAASC,GAGXD,EAAS2C,OAAO5C,MAAK,SAAAvB,GACnBhD,EAAMgD,EACR,IAGAwB,EAAS2C,OAAO5C,MAAK,SAAA2F,GACnB,IAAMC,EAAeD,EAAUE,SAAW,eAC1C1F,MAAMyF,EACR,GAEJ,IACCrF,OAAM,SAAAlF,GACLC,QAAQD,MAAM,SAAUA,EAC1B,GACJ,EAwCU5F,UAAW4P,OAGfpQ,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAM,+GACNC,QAAS,kBAAMsG,EAAWC,SAAS,MAAM,UAMrD,E,+kBCRA,SAhGA,SAAkBzG,GAAkB,IAAfwG,EAAUxG,EAAVwG,WACbpG,EAASmB,IACfI,GAAkCC,EAAAA,EAAAA,UAAS,CACzC6I,KAAM,GACNmF,MAAO,GACPlD,SAAU,KACV3K,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAJKkO,EAAS9N,EAAA,GAAE+N,EAAY/N,EAAA,GASxBgO,EAAcF,EAAUpF,MAAQoF,EAAUnD,UAAYmD,EAAUD,MAyCtE,OACEjQ,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,UAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOmD,cAAc7D,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4D,eAAetE,SAAA,EACjCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUpF,KACjBW,SAAU,SAAArH,GAAI,OAAI+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEpF,KAAM1G,IAAO,EAC5DiM,YAAY,6CACZV,KAAK,WACL3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUD,MACjBxE,SAAU,SAAArH,GAAI,OAAI+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAED,MAAO7L,IAAO,EAC7DiM,YAAY,iCACZV,KAAK,QACL3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUnD,SACjBtB,SAAU,SAAArH,GAAI,OAAI+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEnD,SAAU3I,IAAO,EAChEiM,YAAY,uCACZV,KAAK,WACL3M,MAAM,UAIZhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAM,+GACNC,QA1EiB,WAGzB,GADmB,mDACHsQ,KAAKX,EAAUD,OAA/B,CAKA,GADsB,wCACHY,KAAKX,EAAUnD,UAAlC,CAKA,IAAMyD,EAAc,CAClB1F,KAAMoF,EAAUpF,KAChBmF,MAAOC,EAAUD,MACjBlD,SAAUmD,EAAUnD,UAGtBrC,MAAM,kEAAmE,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,eAEpC0G,KAAM1L,KAAKO,UAAUkL,KAEpBzF,MAAK,SAAAC,GACAA,EAASC,GACXpE,EAAWC,SAAS,QAEpBT,QAAQD,MAAM,sBAElB,IACCkF,OAAM,SAAAlF,GACLC,QAAQD,MAAM,SAAUA,EAC1B,GAzBF,MAFE8E,MAAM,+KAHR,MAFEA,MAAM,uBAiCV,EAsCU1K,UAAW4P,UAMvB,E,+kBC8FA,SA5LA,SAAqB/P,GAAkB,IAAfwG,EAAUxG,EAAVwG,WAChBpG,EAASmB,IACfI,GAAkCC,EAAAA,EAAAA,UAAS,CACzC6O,YAAa,GACbb,MAAO,GACPc,gBAAiB,GACjBC,KAAM,KACN5O,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GALKkO,EAAS9N,EAAA,GAAE+N,EAAY/N,EAAA,GAQxB2H,EAAW,QACXgD,EAAW,OACjBxK,GAAwCN,EAAAA,EAAAA,UAAS,IAAGQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA7C0O,EAAYxO,EAAA,GAAEyO,EAAezO,EAAA,GA+C9B0O,EAAW,eAAApL,GAAAC,EAAAA,EAAAA,UAAG,UAAOiK,GACzB,IACE,IAAMjF,QAAiBN,MAAM,4EAA4EuF,EAAS,CAChHrF,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAGlD,GAAI/B,EAASC,GAEb,aADyBD,EAAS2C,OAGhCzC,MAAM,iBAEV,CAAE,MAAO9E,GAEP,MADAC,QAAQD,MAAM,+BAAgCA,GACxCA,CACR,CACF,IAAC,gBAlBgBM,GAAA,OAAAX,EAAAO,MAAA,KAAAC,UAAA,KAoBX6K,EAAc,eAAA3K,GAAAT,EAAAA,EAAAA,UAAG,UAAOqL,GAC5B,IACE,IAAMC,EAAc,IAAIC,gBAAgB,CACtCC,aAActB,EAAUY,cAEpB9F,QAAiBN,MAAM,gEAAgE2G,EAAM,oBAAoBC,EAAYG,WAAc,CAC/I9G,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,IAEhD0D,KAAM1L,KAAKO,UAAU,CACnBkM,aAActB,EAAUY,gBAGxB9F,EAASC,GACXC,MAAM,iCAENF,EAAS2C,OAAO5C,MAAK,SAAA2F,GACnB,IAAMC,EAAeD,EAAUE,QAChC1F,MAAMyF,EACP,GAEJ,CAAE,MAAOvK,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CACF,IAAC,gBA1BmBsL,GAAA,OAAAjL,EAAAH,MAAA,KAAAC,UAAA,KA4BdoL,EAAmB,eAAA/K,GAAAZ,EAAAA,EAAAA,UAAG,YAE1B,GADsB,wCACH6K,KAAKX,EAAUY,aAIlC,IAGE,IAAMO,QAAeF,EAAYjB,EAAUD,OAGzCoB,SACID,EAAeC,GACrBnG,MAAM,kCAENA,MAAM,kBAINrE,EAAWC,SAAS,OACtB,CAAE,MAAOV,GAEP8E,MAAM,4BAA6B9E,EACrC,MArBE8E,MAAM,+KAsBV,IAAC,kBAzBwB,OAAAtE,EAAAN,MAAA,KAAAC,UAAA,KA4BzB,OACEvG,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,UAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOmD,cAAc7D,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4D,eAAetE,SAAA,EACjCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUD,MACjBxE,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAED,MAAO7L,IAAO,EAC/DiM,YAAa,iCACbV,KAAM,QACN3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUY,YACjBrF,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEY,YAAa1M,IAAO,EACrEiM,YAAa,sEACbV,KAAM,WACN3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUa,gBACjBtF,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEa,gBAAiB3M,IAAO,EACzEiM,YAAa,0GACbV,KAAM,WACN3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUc,KACjBvF,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEc,KAAM5M,IAAO,EAC9DiM,YAAa,qBACbV,KAAM,OACN3M,MAAM,UAKZhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,wFAAmBC,QAASoR,EAAqBnR,UAlKzE0P,EAAUY,cACVZ,EAAUD,QACVC,EAAUa,kBACVb,EAAUc,MACXd,EAAUY,cAAgBZ,EAAUa,iBAAmBb,EAAUc,MAAQC,OAgKvEjR,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,sEAAgBC,QAzJ7B,WAEd,GADmB,mDACHsQ,KAAKX,EAAUD,OAA/B,CAIA,IAAMA,EAAQ2B,mBAAmB1B,EAAUD,OAG3CvF,MAFY,2EAA8EuF,EAE5E,CACZtF,OAAQ,MACRC,QAAS,CACPiH,cAAc,SAAUhH,KAAQd,EAAQ,IAAIgD,MAG7ChC,MAAK,SAACC,GAAQ,OAAKA,EAAS2C,MAAM,IAClC5C,MAAK,SAACvB,GACL0H,EAAgB1H,GACZA,EACF0B,MAAM,oCAENA,MAAM,qBAGV,IACCI,OAAM,SAAClF,GACNC,QAAQD,MAAM,sBAAuBA,GACrC8E,MAAM,qBACR,GAvBF,MAFEA,MAAM,uBA0BV,EA4H+D1K,UA5JrD0P,EAAUD,cAiKtB,E,+kBClKA,SA5BsB,SAAC1Q,GAAK,OAC1BC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,UACLI,EAAE,wGAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLK,YAAa,GACbD,EAAE,wGAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,UACLI,EAAE,mmBAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLK,YAAa,GACbD,EAAE,qmBAEA,E,0BCxBO,SAAS0B,KACtB,IAAAI,GAAsCC,EAAAA,EAAAA,UAASC,OAAOC,YAAWC,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA7CM,GAAFF,EAAA,GAAgBA,EAAA,IAClCG,GAAwCN,EAAAA,EAAAA,UAASC,OAAOM,aAAYC,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA/CG,GAAFD,EAAA,GAAiBA,EAAA,IAcpC,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnBN,EAAeJ,OAAOC,YACtBO,EAAgBR,OAAOM,YACzB,EAIA,OAFAN,OAAOW,iBAAiB,SAAUD,GAE3B,WACLV,OAAOY,oBAAoB,SAAUF,EACvC,CACF,GAAG,IACI/B,EAAAA,QAAAA,OAAkB,CACvBkC,UAAW,CACTC,KAAM,EACNjC,gBAAiB,UACjBkC,eAAgB,SAChBC,WAAY,UAEdC,aAAc,CACZC,UAAW,IAEb0O,mBAAoB,CAClB1J,cAAe,MACfnF,eAAgB,SAChBC,WAAY,SACZS,IAAK,GACLkJ,YAAa,GACbkF,SAAU,SACVxO,SAAU,YAEZyO,mBAAoB,CAClB1Q,YAAa,IAEf2Q,kBAAmB,CACjB7J,cAAe,MACflF,WAAY,SACZ0F,aAAc,IAEhBvF,cAAe,CACbL,KAAM,EACNjC,gBAAiB,0BACjBkC,eAAgB,SAChBC,WAAY,UAEdgP,kBAAmB,CACjBlP,KAAM,EACNC,eAAgB,SAChBmF,cAAe,MACflF,WAAY,SACZnC,gBAAiB,2BAEnBuC,WAAY,CACVC,SAAU,WACVC,OAAQ,GACRC,KAAM,IAERC,QAAS,CACPH,SAAU,WACVI,IAAK,GACLF,KAAM,IAERG,cAAe,CACb7C,gBAAiB,UACjBC,aAAc,GACd6C,QAAS,GACTC,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXX,SAAU,WACVI,IAAK,MACLvC,UAAW,OACX8B,WAAY,SACZD,eAAgB,UAElBkB,iBAAkB,CAChBpD,gBAAiB,UACjBC,aAAc,GACdpB,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,WACVI,IAAK,GACL2I,MAAO,GACPxI,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,GAEbiO,aAAc,CACZpR,gBAAiB,UACjBC,aAAc,GACdpB,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,WACVI,IAAK,GACL2I,MAAO,GACPxI,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,GAEbkO,iBAAkB,CAChBrR,gBAAiB,UACjBC,aAAc,GACdpB,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,WACVI,IAAK,GACL2I,MAAO,GACPxI,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXkE,cAAe,MACfnF,eAAgB,gBAChBC,WAAY,UAEdmP,QAAS,CACP7Q,WAAY,qBACZE,SAAU,GACVmL,YAAa,IAEfyF,kBAAmB,CACjBpP,WAAY,SACZnC,gBAAiB,UACjBC,aAAc,GACd6C,QAAS,GACTC,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXnD,gBAAiB,UACjBC,aAAc,GACdpB,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,YAGZgP,cAAe,CACb3S,MAAO,MACPC,OAAQ,MACR0D,SAAU,WACVC,OAAQ,EACR8I,MAAO,IACPlJ,UAAW,IAEboP,iBAAkB,CAChBzR,gBAAiB,UACjB8C,QAAS,GACT7C,aAAc,GACdpB,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,WACVC,OAAQ,GACR8I,MAAO,GACPxI,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,GAEbuO,iBAAkB,CAChB1R,gBAAiB,UACjB8C,QAAS,GACT7C,aAAc,GACdoC,UAAW,GACXxD,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,WACVI,IAAK,MACL2I,MAAO,IACPlD,UAAW,CAAC,CAAEmD,WAAY,SAC1BzI,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,GAEbwO,iBAAkB,CAChB3R,gBAAiB,UACjBC,aAAc,GACdpB,MAAO,MACPC,OAAQ,MACRkS,SAAU,SACVxO,SAAU,WACVI,IAAK,GACLF,KAAM,GACNK,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXhB,WAAY,SACZD,eAAgB,SAChBqB,WAAY,GACZqO,cAAe,IAEjBC,yBAA0B,CACxB7R,gBAAiB,UACjBC,aAAc,GACdpB,MAAO,MACPmS,SAAU,SACVxO,SAAU,WACVO,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXhB,WAAY,SACZD,eAAgB,SAChBqB,WAAY,GACZqO,cAAe,GACfvR,UAAW,UACXgC,UAAW,OACXwF,aAAc,OACdnF,KAAM,MACNE,IAAK,MACLyF,UAAW,CAAC,CAAEyJ,WAAY,QAAU,CAAEtG,WAAY,UAIpDuG,eAAgB,CACd/R,gBAAiB,UACjBC,aAAc,GACd6C,QAAS,GACTC,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXX,SAAU,WACVI,IAAK,MACLF,KAAM,MACN2F,UAAW,CAAC,CAAEyJ,WAAY,QAAU,CAAEtG,WAAY,SAClD3M,MAAO,MACPC,OAAQ,MACRoD,eAAgB,SAChBC,WAAY,SACZkF,cAAe,UAEjBhE,KAAM,CACJ5C,WAAY,qBACZC,MAAO,UACPC,SAAU,GACVC,UAAW,SACXiH,aAAc,IAEhBvE,eAAgB,CACdzE,MAAO,MACPsD,WAAY,SACZD,eAAgB,aAChBqB,WAAY,KAGlB,CC9Qe,SAASyO,GAAY1S,GAAY,IAATmJ,EAAInJ,EAAJmJ,KAC5BjJ,EAAiBiJ,EAAjBjJ,QAAS6D,EAAQoF,EAARpF,KACV3D,ECJK,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBC,OAAQ,CACNkS,eAAgB,EAChB1C,kBAAmB,EACnB/H,YAAa,UACbpH,kBAAmB,GACnBD,gBAAiB,IAInBkD,KAAM,CACJ5C,WAAY,qBACZE,SAAU,GACVD,MAAO,UACPE,UAAW,WAGrB,CDfmBC,GACjB,OACE5B,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CACjBC,MAAOrB,EAAOK,OACdP,QAASA,EAAQR,UAEjBC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO2D,KAAKrE,SAAEqE,KAGjC,CEwDA,SAjEuB,SAAH/D,GAAkB,IAAZmJ,EAAInJ,EAAJmJ,KAChB7B,EAA+C6B,EAA/C7B,SAAUe,EAAqCc,EAArCd,SAAUkI,EAA2BpH,EAA3BoH,QAASqC,EAAkBzJ,EAAlByJ,IAAKC,EAAa1J,EAAb0J,KAAM/I,EAAOX,EAAPW,GAC1C1J,ECNO,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBkC,UAAW,CACTqF,cAAe,MACflF,WAAY,YAEdiQ,OAAQ,CACN/R,UAAW,cAEbgS,WAAY,CACV9I,WAAY,GACZtH,KAAM,EACNjC,gBAAiB,UACjBsS,gBAAiB,EACjBC,gBAAiB,UACjBpS,gBAAiB,GACjBC,kBAAmB,GACnByH,aAAc,GACd2K,SAAU,MACVC,qBAAsB,GACtBC,wBAAyB,IAE3BC,cAAe,CACb3S,gBAAiB,0BACjBuS,gBAAiB,UACjBD,gBAAiB,EACjB/I,WAAY,GACZtH,KAAM,EACN9B,gBAAiB,GACjBC,kBAAmB,GACnByH,aAAc,GACd2K,SAAU,MACVC,qBAAsB,GACtBC,wBAAyB,IAE3B/K,SAAU,CACRhH,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPkH,WAAY,OACZC,aAAc,GAEhB+K,YAAa,CACXjS,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPkH,WAAY,OACZC,aAAc,GAEhBgI,QAAS,CACPlP,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPmS,SAAU,OACVhL,aAAc,IAEhBiL,WAAY,CACVnS,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPmS,SAAU,OACVhL,aAAc,KAGxB,CD3DiBhH,GACfI,GAAgDC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAAxD8R,EAAgB1R,EAAA,GAAE2R,EAAmB3R,EAAA,GACrCuD,GAAQE,EAAAA,EAAAA,YAAWN,GAAnBI,KAgCP,OACEnG,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOsC,UAAUhD,SAAA,CAC3BkT,EAAM,MACLjT,EAAAA,EAAAA,KAAC0H,EAAU,CAACC,SAAUA,EAAUG,SAAS,EAAOhG,MAAOrB,EAAO0S,UAEhE3T,EAAAA,EAAAA,MAACyP,EAAAA,QAAgB,CACfnN,MAAO,CACLrB,EAAO2S,WACPH,GAAOxS,EAAOiT,eAEhBnT,QAdwB,WAC5BwT,GAAqBD,EACvB,EAYqC/T,SAAA,CAE9B+T,IACC9T,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAE1O,QA1CD,WAExB,IAAMyT,EAAUrO,EAAKwE,GAGrBO,MAAM,uFAAuFsJ,EAAO,eAFjF7J,EAE8G,CAC/HQ,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,iBAGnCgB,MAAK,SAACC,GACDA,EAASC,GACX/I,OAAOiJ,SAASC,SAGhB/E,QAAQgF,IAAI,2BAEhB,IACCC,OAAM,SAAClF,GACNC,QAAQgF,IAAI,0BAA2BjF,EACzC,GACJ,EAmBsDrG,UAC5CC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CAAEN,WAAY,qBAAsBzB,SAAC,kDAGtDC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CAACrB,EAAOiI,SAAUuK,GAAOxS,EAAOkT,aAAa5T,SACvD2I,KAEH1I,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CAACrB,EAAOmQ,QAASqC,GAAOxS,EAAOoT,YAAY9T,SAAE6Q,KAC1DpR,EAAAA,EAAAA,MAACuC,EAAAA,QAAI,CAACD,MAAO,CAAEN,WAAY,qBAAsBzB,SAAA,CAAC,mBAC/BmT,UAK3B,E,eEnEae,IAAiBzP,EAAAA,EAAAA,iBAEjB0P,GAAkB,SAAH7T,GAAsB,IAAhBN,EAAQM,EAARN,SAChCiC,GAAkDC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAAvDmS,EAAiB/R,EAAA,GAAEgS,EAAoBhS,EAAA,IAE9CO,EAAAA,EAAAA,YAAU,WAER,IAAM0R,EAAiBxP,aAAaC,QAAQ,qBACxCuP,GACFD,EAAqBrP,KAAKC,MAAMqP,GAEpC,GAAG,KAEH1R,EAAAA,EAAAA,YAAU,WAERkC,aAAaQ,QAAQ,oBAAqBN,KAAKO,UAAU6O,GAC3D,GAAG,CAACA,IAUJ,OACEnU,EAAAA,EAAAA,KAACiU,GAAehP,SAAQ,CAACC,MAAO,CAAEiP,kBAAAA,EAAmBG,oBAT3B,SAAC1D,GAC3BwD,GAAqB,SAACG,GAAY,SAAAC,QAAAC,EAAAA,GAAAA,SAASF,GAAY,CAAE3D,GAAU,GACrE,EAO4E8D,uBAL7C,WAC7BN,EAAqB,GACvB,GAGqGrU,SAChGA,GAGP,ECzBC,SAAA4U,KAAA,OAAAA,IAAA3O,EAAAA,EAAAA,UANM,UAAkC0C,GACvC,UACQxC,EAAAA,QAAAA,QAAqB,mBAAoBwC,EACjD,CAAE,MAAOtC,GACPC,QAAQgF,IAAI,yBAA0BjF,EACxC,CACF,KAACE,MAAA,KAAAC,UAAA,CAEM,SAAeqO,KAAkB,OAAAC,GAAAvO,MAAC,KAADC,UAAA,CAQvC,SAAAsO,KAAA,OAAAA,IAAA7O,EAAAA,EAAAA,UARM,YACL,IAEE,aADuBE,EAAAA,QAAAA,QAAqB,mBAE9C,CAAE,MAAOE,GAEP,OADAC,QAAQgF,IAAI,6BAA8BjF,GACnC,IACT,CACF,KAACE,MAAA,KAAAC,UAAA,CAQA,SAAAuO,KAAA,OAAAA,IAAA9O,EAAAA,EAAAA,UANM,UAAwBiK,GAC7B,UACQ/J,EAAAA,QAAAA,QAAqB,gBAAiB+J,EAC9C,CAAE,MAAO7J,GACPC,QAAQgF,IAAI,sBAAuBjF,EACrC,CACF,KAACE,MAAA,KAAAC,UAAA,CAUA,SAAAwO,KAAA,OAAAA,IAAA/O,EAAAA,EAAAA,UARM,YACL,IAEE,aADoBE,EAAAA,QAAAA,QAAqB,gBAE3C,CAAE,MAAOE,GAEP,OADAC,QAAQgF,IAAI,0BAA2BjF,GAChC,IACT,CACF,KAACE,MAAA,KAAAC,UAAA,C,+kBChBc,SAASyO,GAAc3U,GAAkB,IAAD4U,EAAAC,EAAdrO,EAAUxG,EAAVwG,WACjCpG,EAASmB,KACfI,GAAkCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1CmT,EAAS/S,EAAA,GAAEgT,EAAYhT,EAAA,GAC9BG,GAAkCN,EAAAA,EAAAA,UAAS,CACzCyG,SAAU,KACVjG,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAFK2N,EAASzN,EAAA,GAAE0N,EAAY1N,EAAA,GAG9B4S,GAAqCxP,EAAAA,EAAAA,YAAWN,GAAxCI,EAAI0P,EAAJ1P,KAAMqB,EAAUqO,EAAVrO,WAAYL,EAAM0O,EAAN1O,OAC1BqG,GAAgC/K,EAAAA,EAAAA,UAAS,IAAGgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAArCsI,EAAQrI,EAAA,GAAEsI,EAAWtI,EAAA,GACtBlD,EAAW,QACXgD,EAAW,OACXyI,GAAqBC,EAAAA,EAAAA,cAAY,SAAAxO,GAAW,OAAID,EAAWC,EAAY,GAAE,CAACD,IACxEtC,GAAkBmB,EAAAA,EAAAA,YAAWtB,GAA7BG,eAIRgR,EAAAA,EAAAA,gBACEhM,EAAAA,aAAkB,WAChBiM,IACAC,GACF,GAAG,KAGL,IAAMD,EAAa,eAAA5P,GAAAC,EAAAA,EAAAA,UAAG,YACpB,IACE,IAAMgF,QAAiBN,MAAM,gEAAgE/E,EAAKwE,GAAM,CACtGQ,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAI/B,EAASC,GAAI,CACf,IAAM9E,QAAiB6E,EAAS2C,OAChCtH,QAAQgF,IAAIlF,GACZqP,EAAmBrP,EACrB,MACEE,QAAQgF,IAAI,4BAEhB,CAAE,MAAOjF,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,CACF,IAAC,kBApBkB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAqBbqP,EAAoB,eAAAnP,GAAAT,EAAAA,EAAAA,UAAG,YAC3B,IACE,IAAM0C,QAAiBkM,KACnBlM,GAAYA,IAAa4M,GAC3BC,EAAY7M,EAEhB,CAAE,MAAOtC,GACPC,QAAQgF,IAAI,qCAAsCjF,EACpD,CACF,IAAC,kBATyB,OAAAK,EAAAH,MAAA,KAAAC,UAAA,KAUpBsP,EAA4B,eAAAjP,GAAAZ,EAAAA,EAAAA,UAAG,YACnC,WACyB0E,MAAM,4FAA+F,MAAJ/E,OAAI,EAAJA,EAAMwE,IAAM,CAClIQ,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,OAIrC9B,IACX5E,QAAQgF,IAAI,iCACZnJ,OAAOiJ,SAASC,UAEhB/E,QAAQgF,IAAI,4BAGhB,CAAE,MAAOjF,GACPC,QAAQgF,IAAI,2BAA4BjF,EAC1C,CACF,IAAC,kBApBiC,OAAAQ,EAAAN,MAAA,KAAAC,UAAA,KAuB5B6J,EAAcF,EAAUxH,SACxBoN,EAAU,CACd,CACEvV,QAAS,SAAAwV,GAAA,OAAAC,EAAAA,GAAAA,SAAAD,GAASlP,EAAWC,SAAS,UAAU,EAChD1C,KAAM,iEAER,CACE7D,QAAS,kBAAMoG,GAAQ,EACvBvC,KAAM,mCAIJ6R,EAAmB,eAAAC,GAAAlQ,EAAAA,EAAAA,UAAG,YAC1B,IACE,IAAMgF,QAAiBN,MAAM,yEAA0E,CACrGC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,IAEhD0D,KAAM1L,KAAKO,UAAU,CACnByE,SAAUpE,EAAKmF,KACfd,YAAakG,EAAUxH,aAI3B,GAAIsC,EAASC,GAAI,OACeD,EAAS2C,OACvCyH,GAAa,GAEblK,MAAM,mBACNhJ,OAAOiJ,SAASC,QAClB,MAEEF,MAAM,2BAEV,CAAE,MAAO9E,GACP8E,MAAM,0BAA2B9E,EACnC,CACF,IAAC,kBA3BwB,OAAA8P,EAAA5P,MAAA,KAAAC,UAAA,KA+BLZ,EAAKP,MAIzB,OACE5F,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAChCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO0D,iBAAiBpE,UACnCP,EAAAA,EAAAA,MAAC4P,EAAAA,QAAU,CAACtN,MAAO,CAAEkB,KAAM,EAAGmT,eAAgB,EAAG/N,cAAe,UAAWrI,SAAA,CACxE4F,EAAKyQ,SAAS/G,KAAI,SAACtB,GAAO,OACzB/N,EAAAA,EAAAA,KAACuJ,EAAU,CAETC,KAAM,CACJO,SAAUgE,EAAQjD,KAClBvK,QAAS,kBAAMsG,EAAWC,SAAS,UAAW,CAAEoH,UAAWH,EAAQ5D,IAAK,IAHrE4D,EAAQ5D,GAKb,IAEHxE,EAAK0Q,MAAMhH,KAAI,SAACiH,GACf,OAAIA,EAAKC,WAAWzL,OAASnF,EAAKmF,MAE9B9K,EAAAA,EAAAA,KAACuJ,EAAU,CAETC,KAAM,CACJM,UAAWwM,EAAKE,UAAUpR,MAC1B2E,SAAUuM,EAAKE,UAAU1L,KACzBvK,QAAS,kBAAMsG,EAAWC,SAAS,OAAQ,CAAEwH,SAAUgI,EAAKE,WAAY,EACxEtM,MAAM,EACNC,GAAImM,EAAKnM,KANNmM,EAAKnM,KAYZnK,EAAAA,EAAAA,KAACuJ,EAAU,CAETC,KAAM,CACJM,UAAWwM,EAAKC,WAAWnR,MAC3B2E,SAAUuM,EAAKC,WAAWzL,KAC1BvK,QAAS,kBAAMsG,EAAWC,SAAS,OAAQ,CAAEwH,SAAUgI,EAAKC,YAAa,EACzErM,MAAM,EACNC,GAAImM,EAAKnM,KANNmM,EAAKnM,GAWlB,UAGJ3K,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiS,iBAAiB3S,SAAA,EACnCC,EAAAA,EAAAA,KAAC0H,EAAU,CAACC,SAAUjD,EAAeoD,SAAS,KAC9C9H,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CACXL,MAAO,UACPC,SAAU,GACVC,UAAW,SACXiH,aAAc,GACdpH,WAAY,sBACZzB,SAAEuV,GAAsB3P,EAAKmF,OAC9BgL,EAAQzG,KAAI,SAAC7F,EAAM8F,GAAK,OACvBtP,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAElC,MAAO,OAAQG,UAC5BC,EAAAA,EAAAA,KAAC+S,GAAY,CAACvJ,KAAMA,KADc8F,EAE7B,QAGX9P,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO+R,iBAAiBzS,SAAA,EAC9B,MAAJ4F,GAAmB,OAAfsP,EAAJtP,EAAM8Q,oBAAF,EAAJxB,EAAqB9G,QAAS,IAC7BnO,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEwK,MAAO,GAAI/I,SAAU,WAAY4I,OAAQ,GAAIpM,UAC1DC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAASsV,EAA6B9V,UACxDC,EAAAA,EAAAA,KAACuL,EAAS,SAIhBvL,EAAAA,EAAAA,KAACoP,EAAAA,QAAU,CAACtN,MAAO,CAAEkB,KAAM,EAAGmT,eAAgB,EAAG/N,cAAe,UAAWrI,SAEpE,MAAJ4F,GAAmB,OAAfuP,EAAJvP,EAAM8Q,oBAAF,EAAJvB,EAAqB7F,KAAI,SAACuB,GAAa,IAAD8F,EAAAC,EAAAC,EAAAC,EACrC,OACE7W,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAAC8W,GAAc,CAEbtN,KAAM,CACJ7B,SAAwB,OAAhB+O,EAAE9F,EAAQmG,aAAM,EAAdL,EAAgBtR,MAC1BsD,SAAwB,OAAhBiO,EAAE/F,EAAQmG,aAAM,EAAdJ,EAAgB7L,KAE1B8F,QAASA,EAAQpH,KAEjByJ,KAAmB,OAAd2D,EAAAhG,EAAQmG,aAAM,EAAdH,EAAgB9L,QAASnF,EAAKmF,KACnCoI,KAAMtC,EAAQ0F,MACE,OAAdO,EAAAjG,EAAQmG,aAAM,EAAdF,EAAgB/L,QAASnF,EAAKmF,KAC5B8F,EAAQ0F,KAAKC,WAAWzL,KACxB8F,EAAQ0F,KAAKE,UAAU1L,KACzB8F,EAAQ7C,QAAQjD,KACjBX,GAAIyG,EAAQzG,KAbVyG,EAAQzG,KAkBrB,UAGJnK,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO6C,WAAWvD,UAC7BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAM6U,GAAa,EAAK,EAACrV,UACpDC,EAAAA,EAAAA,KAACwP,EAAS,SAGdxP,EAAAA,EAAAA,KAACgX,GAAAA,QAAK,CAACC,QAAS9B,EAAW+B,aAAa,EAAKnX,UAC3CP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOqS,eAAe/S,SAAA,EACjCC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO2D,KAAKrE,SAAC,2FAC1BC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,GAAI1F,WAAY,UAAWnD,UACtDC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUxH,SACjB+C,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAExH,SAAUtE,IAAO,EAClEiM,YAAa,GACbV,KAAM,WACN3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,6CAAWC,QAAS0V,EAAqBzV,UAAW4P,aAMrF,C,+kBC7OA,SAtBkB,SAAC7Q,GAAK,OACtBC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETP,EAAAA,EAAAA,MAAC2X,EAAAA,EAAC,CAACC,SAAS,UAASrX,SAAA,EACnBC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAIzH,KAAK,UACpCE,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,OACLI,EAAE,k5BAGNF,EAAAA,EAAAA,KAACqX,EAAAA,KAAI,CAAAtX,UACHC,EAAAA,EAAAA,KAACsX,EAAAA,SAAQ,CAACnN,GAAG,IAAGpK,UACdC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACH,KAAK,OAAOI,EAAE,yBAGpB,E,0BCnBO,SAASqX,GAAWlX,GAAuD,IAApDmX,EAAsBnX,EAAtBmX,uBAAwB9S,EAAarE,EAAbqE,cAAe+S,EAAQpX,EAARoX,SACnEhX,ECFK,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrB6W,YAAa,CACT9X,MAAO,IACPC,OAAQ,IACRmB,aAAc,MAG1B,CDPmBY,GACT+V,EAAgC,OAAlBjT,EAChB,CAAEuE,IAAKvE,GACP8S,EAEJ,OAAOxX,EAAAA,EAAAA,KAAC+I,GAAAA,MAAK,CAACC,OAAQ2O,EAAa7V,MAAO2V,GAAYhX,EAAOiX,aACjE,C,+BEIe,SAASE,GAAYvX,GAAWA,EAARN,UAAiB4L,EAAAA,EAAAA,SAAAtL,EAAAuL,IAAK,IACnDzG,GAAwBU,EAAAA,EAAAA,YAAWtB,GAAnCY,oBACF1E,ECdO,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBkC,UAAW,CACPC,KAAM,EACNC,eAAgB,SAChBmF,cAAe,OAEnBC,MAAO,CACHnF,WAAY,SACZD,eAAgB,SAChBpD,OAAQ,IACRD,MAAO,IACP0I,YAAa,GACbtH,aAAc,IACduH,YAAa,WAEjBC,UAAW,CACP3I,OAAQ,IACRD,MAAO,IACPmB,gBAAiB,UACjBC,aAAc,IACdiC,eAAgB,SAChBC,WAAY,WAGxB,CDZiBtB,GACfI,GAA2CC,EAAAA,EAAAA,UAAS,MAAKG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAAtC6V,GAAFzV,EAAA,GAAsBA,EAAA,IACvCG,GAA0CN,EAAAA,EAAAA,UAAS,MAAKQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAAjDmC,EAAajC,EAAA,GAAEkC,EAAgBlC,EAAA,GACtCqV,GAA6BjS,EAAAA,EAAAA,YAAWN,GAAhCI,EAAImS,EAAJnS,KAAgBmS,EAAV9Q,YAIdrE,EAAAA,EAAAA,YAAU,YACRqD,EAAAA,EAAAA,UAAC,YACC,IAAM+R,QAAqBC,GAAYC,sCACvCJ,EAA6C,YAAxBE,EAAaG,OACpC,GAHAlS,EAIF,IAEA,IAAMmS,EAAc,eAAA1R,GAAAT,EAAAA,EAAAA,UAAG,YACrB,IAAIyI,QAAeuJ,GAAYI,wBAAwB,CACrDC,eAAe,EACfC,QAAS,IAGN7J,EAAO8J,UAGNC,EAAY/J,EAMpB,IAAC,kBAfmB,OAAAhI,EAAAH,MAAA,KAAAC,UAAA,KAiBdiS,EAAW,eAAA5R,GAAAZ,EAAAA,EAAAA,UAAG,UAAOyS,GACzB,IAAMC,EAAW,IAAIC,SAGf3N,QAAiBN,MAAM+N,EAAWxP,KAClC2P,QAAa5N,EAAS4N,OAE5BF,EAASG,OAAO,OAAQD,EAAM,YAE9B,IACME,EAAM,iEADO,MAAJnT,OAAI,EAAJA,EAAMwE,IACgE,gBAErF,IACE,IAAMa,QAAiB+N,GAAAA,QAAAA,IAAUD,EAAQJ,EAAU,CACjD9N,QAAS,CACP,eAAgB,sBAChB,cAAgB,SAAUC,KAAQd,iBAId,MAApBiB,EAASkN,QAAsC,MAApBlN,EAASkN,SACtC7R,QAAQgF,IAAI,+BACZ1G,EAAiB8T,EAAWxP,KAC5B9D,EAAoBsT,EAAWxP,KAEnC,CAAE,MAAO7C,GACHA,EAAM4E,UAAY5E,EAAM4E,SAASxB,MAAQpD,EAAM4E,SAASxB,KAAKoH,SAC/D1F,MAAM,UAAY9E,EAAM4E,SAASxB,KAAKoH,QAE1C,CACF,IAAC,gBA9BgBlK,GAAA,OAAAE,EAAAN,MAAA,KAAAC,UAAA,KAqCXyS,EAAU,eAAAjD,GAAA/P,EAAAA,EAAAA,UAAG,YAGjB,IAAiC,WAFFgS,GAAYiB,iCAEtBC,QAArB,CAKA,IAAMzK,QAAeuJ,GAAYmB,oBAE5B1K,EAAO8J,WACV5T,EAAiB8J,EAAO2K,OAAO,GAAGnQ,KAClCuP,EAAY/J,EAAO2K,OAAO,IAN5B,MAFElO,MAAM,0DAUV,IAAC,kBAde,OAAA6K,EAAAzP,MAAA,KAAAC,UAAA,KAgBhB,OACEvG,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOsC,UAAUhD,UAC5BP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4H,MAAMtI,SAAA,EACxBP,EAAAA,EAAAA,MAACyP,EAAAA,QAAgB,CAAC1O,QAAS4X,EAAepY,SAAA,EACtC2E,IAAiB1E,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO+H,UAAUzI,UAC/CC,EAAAA,EAAAA,KAACmJ,EAAO,MAETzE,IAAiB1E,EAAAA,EAAAA,KAACuX,GAAW,CAACE,UAAU,EAAM/S,cAAeA,QAEhE1E,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEyB,SAAU,WAAYC,OAAQ,EAAG8I,MAAO,GAAIvM,UACzDC,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAC1O,QAASyY,EAAWjZ,UACpCC,EAAAA,EAAAA,KAACqZ,GAAS,YAMtB,C,+kBE9FA,SApBgB,SAAC9Z,GAAK,OACpBC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,IACPC,OAAQ,IACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACmX,EAAAA,EAAC,CAAC3I,OAAO,UAASzO,UACjBC,EAAAA,EAAAA,KAACsZ,EAAAA,KAAI,CAAC1Z,MAAO,GAAIC,OAAQ,GAAI0Z,EAAG,EAAGC,EAAG,KAAO1Z,KAAK,OAAO2Z,GAAI,QAE/DzZ,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,OACPkS,cAAc,QACdjS,YAAa,EACbvH,EAAE,kGAEJF,EAAAA,EAAAA,KAACqX,EAAAA,KAAI,OACD,E,+kBCJR,SAfe,SAAC9X,GAAK,OACnBS,EAAAA,EAAAA,KAACP,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,UAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,OACPC,YAAa,IACbvH,EAAE,yGAEA,E,knBCZO,SAASyZ,GAAatZ,GAAsC,IAGnEqP,EAHgCxK,EAAK7E,EAAL6E,MAAOuG,EAAQpL,EAARoL,SAAUzI,EAAI3C,EAAJ2C,KAASwG,GAAImC,EAAAA,EAAAA,SAAAtL,EAAAuL,IAC5DnL,ECFK,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC5B,OADeD,EAALhI,MAAagI,EAAN/H,OACVgB,EAAAA,QAAAA,OAAkB,CACvBkC,UAAW,CAETE,eAAgB,SAChBC,WAAY,SACZnC,gBAAiB,WAEnB6L,MAAO,CACL5J,KAAM,EACNnD,OAAQ,GACR2B,WAAY,qBACZE,SAAU,GACVmL,YAAa,KACb9L,gBAAiB,UACjBU,MAAO,UACP7B,MAAO,QAGb,CDlBmBgC,GACfgG,GAA0BC,EAAAA,EAAAA,WAAlBjI,EAAKgI,EAALhI,MAAOC,EAAM+H,EAAN/H,OAIf6P,EAAY,CACRI,UAAW,IAGf,IAAME,EAAahN,EAAO,MAAgB,GAARpD,EAC5Bga,EAAc5W,EAAO,GAAc,IAATnD,EAEhC,OACIG,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAACrB,EAAOsC,UAAW,CAAEnD,MAAOoQ,EAAYnQ,OAAQ+Z,IAAe7Z,UACxEC,EAAAA,EAAAA,KAAC6O,EAAAA,QAASnP,GAAAA,GAAAA,GAAA,GACF8J,GACAkG,GAAS,IACbI,UAAW,GACXhB,qBAAqB,UACrB5J,MAAOA,EACPpD,MAAO,CAACrB,EAAOmM,MAAO,CAAEC,YAA2B,GAAd+M,IACrC5K,aAAc,SAAC5K,GAAI,OAAKqH,EAASrH,EAAK,MAItD,C,+kBEde,SAASyV,GAAaxZ,GAAkB,IAAfwG,EAAUxG,EAAVwG,WAChCpG,EAASmB,KACP8C,GAAkBmB,EAAAA,EAAAA,YAAWtB,GAA7BG,cACRoT,GAA6BjS,EAAAA,EAAAA,YAAWN,GAAhCI,EAAImS,EAAJnS,KAGR3D,GAHwB8V,EAAV9Q,YAGoB/E,EAAAA,EAAAA,UAAS,CACzC6I,MAAU,MAAJnF,OAAI,EAAJA,EAAMmF,OAAQ,MACpB1I,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAFKkO,EAAS9N,EAAA,GAAE+N,EAAY/N,EAAA,GAO9BG,GAJoB2N,EAAUpF,MAIE7I,EAAAA,EAAAA,UAAS,KAAGQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAArC+S,EAAQ7S,EAAA,GAAE8S,EAAW9S,EAAA,IAE5BiT,EAAAA,EAAAA,gBACEhM,EAAAA,aAAkB,WAChBoQ,GACF,GAAG,CAACnU,KAGN,IAAMmU,EAAU,eAAA/T,GAAAC,EAAAA,EAAAA,UAAG,YACjB,IACE,IAAMiK,QXVL,WAAuB,OAAA8E,GAAAzO,MAAC,KAADC,UAAA,CWUJwT,GAChB9J,GAASA,IAAUqF,EACrBC,EAAYtF,GACFA,GAAUqF,GACpBC,GAAgB,MAAJ5P,OAAI,EAAJA,EAAMsK,QAAS,GAE/B,CAAE,MAAO7J,GACPC,QAAQgF,IAAI,kCAAmCjF,EACjD,CACF,IAAC,kBAXe,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAYVyT,GAAoBC,EAAAA,EAAAA,QAAO,MACjCjN,GAA0C/K,EAAAA,EAAAA,UAAS,IAAGgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA/CkN,EAAajN,EAAA,GAAEkN,EAAgBlN,EAAA,GAGtCG,GAA4CnL,EAAAA,EAAAA,WAAS,GAAMoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAApDgN,EAAc/M,EAAA,GAAEgN,EAAiBhN,EAAA,GACxCiN,GAAsCrY,EAAAA,EAAAA,UAAS,GAAEsY,GAAAlY,EAAAA,EAAAA,SAAAiY,EAAA,GAA7BE,GAAFD,EAAA,GAAgBA,EAAA,KAElC5X,EAAAA,EAAAA,YAAU,WACR8X,IACAC,GACF,GAAG,IAEH,IAAMD,EAAoB,WACxB,IAAME,EAAsBX,EAAkBY,QAAQC,YAGhDX,EAAgBY,KAAKC,IADA,GADH,IAE8CJ,EAD3C,IAE3BR,EAAiBD,EACnB,EAEMQ,EAAkB,eAAAjU,GAAAT,EAAAA,EAAAA,UAAG,YACzB,IACE,IAAMgV,QAAsB9U,EAAAA,QAAAA,QAAqB,oBAC7C8U,GACF7K,EAAa,CAAErF,KAAMkQ,GAEzB,CAAE,MAAO5U,GACPC,QAAQgF,IAAI,iCAAkCjF,EAChD,CACF,IAAC,kBATuB,OAAAK,EAAAH,MAAA,KAAAC,UAAA,KAWlB0U,EAAiB,eAAArU,GAAAZ,EAAAA,EAAAA,UAAG,YACxB,GAAIoU,EAAgB,CAElBC,GAAkB,GAClBG,EAAe,GACf,UXlFC,SAAiC9T,GAAA,OAAAiO,GAAArO,MAAC,KAADC,UAAA,CWmF1B2U,CAAmBhL,EAAUpF,MAE/BoF,EAAUpF,OAASnF,EAAKmF,aACpBqQ,EAAWjL,EAAUpF,MAE/B,CAAE,MAAO1E,GACPC,QAAQgF,IAAI,yBAA0BjF,EACxC,CACF,MAEEiU,GAAkB,GAClBG,EAAe,IAIjB,IACE,IAAMY,QAAwBxG,KAC9BvO,QAAQgF,IAAI,oBAAqB+P,EACnC,CAAE,MAAOhV,GACPC,QAAQgF,IAAI,qCAAsCjF,EACpD,CACF,IAAC,kBA3BsB,OAAAQ,EAAAN,MAAA,KAAAC,UAAA,KA+BjB8U,EAAc,CAClBjS,UAAU,WAAWgR,EAAiB,GAAK,GAAC,OAC5CkB,WAAY,uBAGRH,EAAU,eAAApF,GAAA/P,EAAAA,EAAAA,UAAG,UAAOuV,GACxB,IACE,IAAMpR,EAAS,MAAJxE,OAAI,EAAJA,EAAMwE,GACjB,GAAIA,SACqBO,MAAM,gEAAgEP,EAAE,qBAAqByH,mBAAmB2J,GAAY,CACjJ5Q,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,kBAIzBkB,IAIX5E,QAAQD,MAAM,wBAGpB,CAAE,MAAOA,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,IAAC,gBAtBeM,GAAA,OAAAqP,EAAAzP,MAAA,KAAAC,UAAA,KA2BhB,OACE/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOmS,yBAAyB7S,SAAA,EAC3CC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAAC4X,GAAY,CAAE7X,SAAU2E,OAE3BlF,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOwR,kBAAkBlS,SAAA,CACnCqa,GACCpa,EAAAA,EAAAA,KAAC2Z,GAAa,CACZzU,MAAOgL,EAAUpF,KACjBW,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEpF,KAAM1G,IAAO,EAC9DpB,MAAM,KAGRhD,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CAAEJ,SAAU,GAAIF,WAAY,qBAAsBL,kBAAmB,IAAKpB,SACpFmQ,EAAUpF,QAGf9K,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAC1O,QAAS0a,EAAkBlb,UAC3CC,EAAAA,EAAAA,KAACwb,GAAM,CAAC1Z,MAAOuZ,UAGnBrb,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CACHpF,MAAO,CACLkR,eAAgB,EAChB1C,kBAAmB,EACnB/H,YAAa,UACbpH,kBAAmB,GACnBD,gBAAiB,GACjBtB,MAAO,MACPmS,SAAU,SACV0J,aAAc,WACdC,WAAY,SACZ9S,aAAc,IACd7I,UAEFC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACyU,IAAK3B,EAAmB4B,SAAUnB,EAAkB1a,UACxDC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CACHD,MAAO,CACLL,MAAO,UACPC,SAAUwY,EACVvY,UAAW,SACXH,WAAY,qBACZoH,aAAc,IACd7I,SAEDuV,GAAsB3P,EAAKsK,aAIlCjQ,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,kFAAkBC,QAAS,kBAAMsG,EAAWC,SAAS,cAAc,OAE1F9G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,wFAAmBC,QAAS,kBAAMsG,EAAWC,SAAS,iBAAiB,UAGhG9G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiD,QAAQ3D,UAC1BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAAC6b,GAAO,UAKlB,C,+kBCrEA,SAhIA,SAA0Bxb,GAAkB,IAAfwG,EAAUxG,EAAVwG,WACrBpG,EAASmB,IACfI,GAAkCC,EAAAA,EAAAA,UAAS,CACzCgO,MAAO,GACPe,KAAM,KACN5O,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAHKkO,EAAS9N,EAAA,GAAE+N,EAAY/N,EAAA,GAI9BG,GAAwCN,EAAAA,EAAAA,UAAS,IAAGQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA7C0O,EAAYxO,EAAA,GAAEyO,EAAezO,EAAA,GAEpC4S,GAA6BxP,EAAAA,EAAAA,YAAWN,GAAhCI,EAAI0P,EAAJ1P,KACFoE,GADkBsL,EAAVrO,WACG,SACX+F,EAAW,OAqCX+O,EAAW,eAAA/V,GAAAC,EAAAA,EAAAA,UAAG,YAElB,GADmB,mDACH6K,KAAKX,EAAUD,OAIjC,IACE,IAEM6I,EAAM,iEAFO,MAAJnT,OAAI,EAAJA,EAAMwE,IAEgE,uBADvEyH,mBAAmB1B,EAAUD,cAGpBvF,MAAMoO,EAAQ,CACnCnO,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBiH,cAAc,SAAUhH,KAAQd,EAAQ,IAAIgD,OAInC9B,IACXC,MAAM,8BZxDL,SAAuBwG,GAAAoD,GAAAxO,MAAC,KAADC,UAAA,CY0DxBwV,CAAS7L,EAAUD,QAEnB/E,MAAM,yBAEV,CAAE,MAAO9E,GACPC,QAAQD,MAAM,wBAAyBA,GACvC8E,MAAM,yBACR,MA1BIA,MAAM,uBA2BZ,IAAC,kBA9BkB,OAAAnF,EAAAO,MAAA,KAAAC,UAAA,KAiCjB,OACE/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOmD,cAAc7D,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4D,eAAetE,SAAA,EACjCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUD,MACjBxE,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAED,MAAO7L,IAAO,EAC/DiM,YAAa,iCACbV,KAAM,QACN3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUc,KACjBvF,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEc,KAAM5M,IAAO,EAC9DiM,YAAa,qBACbV,KAAM,OACN3M,MAAM,UAKZhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAO,kFACPC,QAASub,EACTtb,UA/FA0P,EAAUD,QAAUC,EAAUc,MAAQd,EAAUc,MAAQC,OAkG5DjR,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAO,sEACPC,QA9FM,WACd,IAAM0P,EAAQ2B,mBAAmB1B,EAAUD,OAG3CvF,MAFY,2EAA8EuF,EAE5E,CACZtF,OAAQ,MACRC,QAAS,CACPiH,cAAc,SAAUhH,KAAQd,EAAQ,IAAIgD,MAG7ChC,MAAK,SAACC,GAAQ,OAAKA,EAAS2C,MAAM,IAClC5C,MAAK,SAACvB,GACL0H,EAAgB1H,GACZA,EACF0B,MAAM,oCAGNA,MAAM,qBAGV,IACCI,OAAM,SAAClF,GACNC,QAAQD,MAAM,sBAAuBA,GACrC8E,MAAM,qBACR,GACJ,EAsEU1K,UAlGA0P,EAAUD,cAsGhBjQ,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiD,QAAQ3D,UAC1BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,UAAU,EAAC/G,UAChEC,EAAAA,EAAAA,KAAC6b,GAAO,UAKlB,E,+kBCnBA,SA3GA,SAA6Bxb,GAAkB,IAAfwG,EAAUxG,EAAVwG,WACxBpG,EAASmB,IACfI,GAAkCC,EAAAA,EAAAA,UAAS,CACzC6O,YAAa,GACb/D,SAAU,GACVgE,gBAAiB,KACjB3O,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAJKkO,EAAS9N,EAAA,GAAE+N,EAAY/N,EAAA,GAOtBuD,GAASE,EAAAA,EAAAA,YAAWN,GAApBI,KAWFqW,GAVS,MAAJrW,GAAAA,EAAMwE,GAUS,eAAApE,GAAAC,EAAAA,EAAAA,UAAG,YAC3B,GAAIkK,EAAUY,cAAgBZ,EAAUa,gBACtC,OAAO7F,MAAM,oDAEf,IAAM+Q,EAAgB,wCACtB,GAAKA,EAAcpL,KAAKX,EAAUnD,WAAakP,EAAcpL,KAAKX,EAAUY,aAA5E,CAIA,IAAM3G,EAAS,MAAJxE,OAAI,EAAJA,EAAMwE,GACXmH,EAAc,IAAIC,gBAAgB,CACtC2K,cAAehM,EAAUnD,SACzByE,aAActB,EAAUY,cAG1B,WACyBpG,MAAM,gEAAgEP,EAAE,oBAAoBmH,EAAYG,WAAc,CAC3I9G,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBiH,cAAc,SAAUhH,KAAQd,kBAIvBkB,GAEXC,MAAM,oBAGN7E,QAAQD,MAAM,4BAElB,CAAE,MAAOA,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CAzBA,MAFE8E,MAAM,+KA4BV,IAAC,kBAlCyB,OAAAnF,EAAAO,MAAA,KAAAC,UAAA,MAqC1B,OACE/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOmD,cAAc7D,SAAA,EAChCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4D,eAAetE,SAAA,EACjCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUnD,SACjBtB,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEnD,SAAU3I,IAAO,EAClEiM,YAAY,uCACZV,KAAK,WACL3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUY,YACjBrF,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEY,YAAa1M,IAAO,EACrEiM,YAAY,sEACZV,KAAK,WACL3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,IAAK7I,UAChCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUa,gBACjBtF,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEa,gBAAiB3M,IAAO,EACzEiM,YAAY,0GACZV,KAAK,WACL3M,MAAM,UAKZhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CACXE,MAAM,wFACNC,QAASyb,EACTxb,UAhFL0P,EAAUY,cACVZ,EAAUnD,WACVmD,EAAUa,wBAkFX/Q,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiD,QAAQ3D,UAC1BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,UAAU,EAAC/G,UAChEC,EAAAA,EAAAA,KAAC6b,GAAO,UAKlB,E,+kBCrGA,SAXmB,SAACtc,GAAK,OACvBS,EAAAA,EAAAA,KAACP,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,UAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACuH,OAAO,OAAOtH,EAAE,mCAClB,E,+kBCKR,SAdwB,SAACX,GAAK,OAC5BC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACH,KAAK,UAAUI,EAAE,kCACvBF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACH,KAAK,OAAOK,YAAa,GAAKD,EAAE,kCACtCF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACuH,OAAO,UAAUtH,EAAE,kCACzBF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACuH,OAAO,OAAO2U,cAAe,GAAKjc,EAAE,oCACtC,ECuER,SA5EoB,SAAHG,GAA+B,IAAzBmJ,EAAInJ,EAAJmJ,KACb7B,GAD8BtH,EAAX+b,YACuD5S,EAA1E7B,UAAUe,EAAgEc,EAAhEd,SAAU2T,EAAsD7S,EAAtD6S,KAAMzL,EAAgDpH,EAAhDoH,QAASqC,EAAuCzJ,EAAvCyJ,IAAKlF,EAAkCvE,EAAlCuE,QAASuO,EAAyB9S,EAAzB8S,KAAM5Q,EAAmBlC,EAAnBkC,OAAQ6Q,EAAW/S,EAAX+S,MACvEva,GAAkCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1C6J,EAASzJ,EAAA,GAAE0J,EAAY1J,EAAA,GAExBoa,EADQ,IAAIC,KAAKH,GACJI,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAG9DjX,GAAQE,EAAAA,EAAAA,YAAWN,GAAnBI,KACDlF,ECfO,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBkC,UAAW,CACTqF,cAAe,MACflF,WAAY,WACZ0F,aAAc,GACd2K,SAAU,QAEZsJ,aAAc,CACZzU,cAAe,cACflF,WAAY,WACZ0F,aAAc,GACd2K,SAAU,QAEZJ,OAAQ,CACN/R,UAAW,cAEbgS,WAAY,CACVrS,gBAAiB,UACjBG,gBAAiB,GACjBC,kBAAmB,GACnBoS,SAAU,OAEZuJ,IAAK,CACHtJ,qBAAsB,GACtBC,wBAAyB,GACzBsJ,oBAAqB,IAEvBrJ,cAAe,CACb3S,gBAAiB,0BACjBG,gBAAiB,GACjBC,kBAAmB,GACnBoS,SAAU,MACVC,qBAAsB,GACtBC,wBAAyB,GACzBsJ,oBAAqB,IAEvBC,QAAS,CACP5b,UAAW,WACXwH,aAAc,GAEhBqU,WAAY,CACV7b,UAAW,aACXwH,aAAc,GAEhBF,SAAU,CACRhH,SAAU,GACVF,WAAY,kBACZmH,WAAY,OACZlH,MAAO,QACPmH,aAAc,GAEhByT,KAAM,CACJ3a,SAAU,GACVF,WAAY,qBACZC,MAAO,UACPmH,aAAc,GAEhBgI,QAAS,CACPlP,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPmS,SAAU,OACVhL,aAAc,GAEhB4T,KAAM,CACJ9a,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPL,UAAW,YAEb8b,QAAS,CACPxb,SAAU,GACVF,WAAY,qBACZC,MAAO,QACPL,UAAW,eAGrB,CDhEiBQ,GAGTub,IAF0BtX,EAAAA,EAAAA,YAAWoO,IAAnCK,oBAEgB,eAAAvO,GAAAC,EAAAA,EAAAA,UAAG,YACzB8F,GAAa,SAAAsR,GAAS,OAAKA,CAAS,IACpC,IAAM3M,EAAO,CACX1G,SAAUpE,EAAKmF,KACfuS,UAAWd,GAGb,WACyB7R,MAAM,4EAA6E,CACxGC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,eAEpC0G,KAAM1L,KAAKO,UAAUmL,MAGVxF,GAEX5E,QAAQgF,IAAI,kCAGZhF,QAAQgF,IAAI,4BAEhB,CAAE,MAAOjF,GACPC,QAAQgF,IAAI,4BAA6BjF,EAC3C,CACF,IAAC,kBA3BuB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,MA6BlB+W,EAAczR,GAAY7L,EAAAA,EAAAA,KAACud,GAAe,KAAMvd,EAAAA,EAAAA,KAACwd,GAAU,IAE3DC,EAAmB,CACvBhd,EAAO2S,WACPH,EAAMxS,EAAOiT,cAAgBjT,EAAOqc,IACpC,CACEtJ,qBAA4B,GAC5BC,wBAAyBR,EAAM,EAAI,GACnCyK,uBAAwBzK,EAAM,GAAK,IAIvC,OACEzT,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOmR,EAAMxS,EAAOoc,aAAepc,EAAOsC,UAAUhD,SAAA,EACtDkT,GAAOtL,IACP3H,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO0S,OAAOpT,UACzBC,EAAAA,EAAAA,KAAC0H,EAAU,CAACC,SAAUA,EAAUG,SAAS,OAG7CtI,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO2b,EAAiB1d,SAAA,EAC1B2L,IACA1L,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAC1O,QAAS4c,EAAmBpd,UAC5CC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOmR,EAAMxS,EAAOwc,WAAaxc,EAAOuc,QAAQjd,SAAEud,OAG5Dtd,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAOiI,SAAS3I,SAAE2I,IAC9BqF,IAAW/N,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO4b,KAAKtc,SAAEsc,KACvCrc,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAOmQ,QAAQ7Q,SAAE6Q,KAC9B5Q,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOmR,EAAMxS,EAAOyc,QAAUzc,EAAO+b,KAAKzc,SAAEyc,SAI1D,E,+kBEpDA,SA1BgB,SAACjd,GAAK,OACpBC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACmX,EAAAA,EAAC,CAAC3I,OAAO,UAASzO,UACjBC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,GAAIC,GAAI,OAAQC,EAAG,OAAQzH,KAAK,YAE9CE,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,UACPC,YAAa,EACbvH,EAAE,oFAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,OACP2U,cAAe,GACf1U,YAAa,EACbvH,EAAE,oFAEJF,EAAAA,EAAAA,KAACqX,EAAAA,KAAI,OACD,EC2DR,SA/EqB,SAAHhX,GAAsD,IAAhDsd,EAAOtd,EAAPsd,QAASC,EAAOvd,EAAPud,QAAS7P,EAAO1N,EAAP0N,QAAS8P,EAAaxd,EAAbwd,cACjD7b,GAA8BC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAAnC4O,EAAOxO,EAAA,GAAE0b,EAAU1b,EAAA,GAC1BwF,GAA0BC,EAAAA,EAAAA,WACpBpH,GADOmH,EAALhI,MAAagI,EAAN/H,OCNF,WACX,IAAA+H,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBkC,UAAW,CACTqF,cAAe,MACflF,WAAY,YAEd0J,MAAO,CACL5J,KAAM,EACNnD,OAAQ,GACR6B,SAAU,GACVmL,YAAa,GACb7L,aAAc,GACdD,gBAAiB,UACjBU,MAAO,UACPkL,UAAW,+BACXnL,WAAY,qBACZJ,UAAW,aACXE,YAAa,IAEfyc,WAAY,CACV3c,UAAW,WACXkJ,WAAY,GACZ1K,MAAO,GACPC,OAAQ,GACRqD,WAAY,SACZD,eAAgB,WAG1B,CDtBiBrB,IACTmI,EAAW,QACXgD,EAAW,OACXiR,EAAU,eAAAjY,GAAAC,EAAAA,EAAAA,UAAG,YACjB,GAAI4K,EACF,IACE,GAAI7C,EAAS,CAEX,IAAMyC,EAAc,CAClByN,gBAAiBN,EACjB/M,QAASA,EACT5G,YAAa4T,EAAQ9S,aAGAJ,MAAM,8EAA+E,CAC1GC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,IAEhD0D,KAAM1L,KAAKO,UAAUkL,MAGVvF,IACX5E,QAAQgF,IAAI,6BACZyS,EAAW,IACXD,KAEAxX,QAAQgF,IAAI,yBAEhB,KAAO,CAEL,IAAMmF,EAAc,CAClByN,gBAAiBN,EACjBO,cAAeN,EACfhN,QAASA,UAGYlG,MAAM,2EAA4E,CACvGC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,IAEhD0D,KAAM1L,KAAKO,UAAUkL,MAGVvF,IACX5E,QAAQgF,IAAI,6BACZyS,EAAW,IACXD,KAEAxX,QAAQgF,IAAI,yBAEhB,CACF,CAAE,MAAOjF,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CAEJ,IAAC,kBAxDe,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KA0DhB,OACE/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOsC,UAAUhD,SAAA,EAC5BC,EAAAA,EAAAA,KAAC6O,EAAAA,QAAS,CACR/M,MAAOrB,EAAOmM,MACdyD,YAAY,4BACZnL,MAAO0L,EACP5B,aAAc8O,KAEhB9d,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAACnN,MAAOrB,EAAOsd,WAAYxd,QAASyd,EAAWje,UAC9DC,EAAAA,EAAAA,KAACme,GAAO,QAIhB,E,+kBEhEe,SAASC,GAAU/d,GAAyB,IAAtBwG,EAAUxG,EAAVwG,WAC3ByH,EAD4CjO,EAALge,MACpBC,OAAnBhQ,SACF7N,EAASmB,KACfI,GAAkCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1CmT,EAAS/S,EAAA,GAAEgT,EAAYhT,EAAA,GAC9BG,GAAkCN,EAAAA,EAAAA,UAAS,CACzCyG,SAAU,KACVjG,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAFK2N,EAASzN,EAAA,GAAE0N,EAAY1N,EAAA,GAG9B4S,GAA6BxP,EAAAA,EAAAA,YAAWN,GAAhCI,EAAI0P,EAAJ1P,KACAgB,GADgB0O,EAAVrO,YACKnB,EAAAA,EAAAA,YAAWN,GAAtBoB,QACAjC,GAAkBmB,EAAAA,EAAAA,YAAWtB,GAA7BG,cACRsI,GAAgC/K,EAAAA,EAAAA,UAAS,IAAGgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAArCuR,EAAQtR,EAAA,GAAEuR,EAAWvR,EAAA,GAC5BG,GAAgCnL,EAAAA,EAAAA,UAAS,IAAGoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAArCqR,EAAQpR,EAAA,GAAEqR,EAAWrR,EAAA,GACtBtD,EAAW,QACXgD,EAAW,OACjBuN,GAAgCrY,EAAAA,EAAAA,UAAS,IAAGsY,GAAAlY,EAAAA,EAAAA,SAAAiY,EAAA,GAArChF,EAAQiF,EAAA,GAAEhF,EAAWgF,EAAA,GACtBtE,EAAmB,eAAAlQ,GAAAC,EAAAA,EAAAA,UAAG,YAC1B,IACE,IAAMgF,QAAiBN,MAAM,yEAA0E,CACrGC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,IAEhD0D,KAAM1L,KAAKO,UAAU,CACnByE,SAAUpE,EAAKmF,KACfd,YAAakG,EAAUxH,aAI3B,GAAIsC,EAASC,GAAI,OACeD,EAAS2C,OACvCyH,GAAa,GAEblK,MAAM,mBACNhJ,OAAOiJ,SAASC,QAClB,MAEEF,MAAM,2BAEV,CAAE,MAAO9E,GACP8E,MAAM,0BAA2B9E,EACnC,CACF,IAAC,kBA3BwB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KA4BzBoY,GAAsD1c,EAAAA,EAAAA,WAAS,GAAK2c,GAAAvc,EAAAA,EAAAA,SAAAsc,EAAA,GAA7DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,IAElDlJ,EAAAA,EAAAA,gBACEhM,EAAAA,aAAkB,WAChBkM,IACAkJ,GAAuB,EACzB,GAAG,MAGLnc,EAAAA,EAAAA,YAAU,WACJkc,GACFE,IACGhU,MAAK,kBAAM+T,GAAuB,EAAM,IACxCxT,OAAM,SAAClF,GAAK,OAAKC,QAAQgF,IAAI,4BAA6BjF,EAAM,GAEvE,GAAG,CAACyY,KAEJlc,EAAAA,EAAAA,YAAU,WACR,IAAMqc,EAAaC,aAAY,WAC7BH,GAAuB,EACzB,GAAG,KAEH,OAAO,kBAAMI,cAAcF,EAAY,CACzC,GAAG,IAEH,IAAMD,EAAa,eAAAtY,GAAAT,EAAAA,EAAAA,UAAG,YACpB,IAEMmZ,EAAG,qFAFSxZ,EAAKmF,KAEmF,gBADvFwD,EAASxD,KAG5B,IACE,IAAME,QAAiBN,MAAMyU,EAAK,CAChCxU,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,IAAI/B,EAASC,GAIX,MAAM,IAAImU,MAAM,6BAHhB,IAAMX,QAAiBzT,EAAS2C,OAChC+Q,EAAYD,EAIhB,CAAE,MAAOrY,GACP,MAAM,IAAIgZ,MAAM,4BAA6BhZ,EAC/C,CACF,IAAC,kBAvBkB,OAAAK,EAAAH,MAAA,KAAAC,UAAA,KAgCbqP,EAAoB,eAAAhP,GAAAZ,EAAAA,EAAAA,UAAG,YAC3B,IACE,IAAM0C,QAAiBkM,KACnBlM,GAAYA,IAAa4M,GAC3BC,EAAY7M,EAEhB,CAAE,MAAOtC,GACPC,QAAQgF,IAAI,qCAAsCjF,EACpD,CACF,IAAC,kBATyB,OAAAQ,EAAAN,MAAA,KAAAC,UAAA,MAW1B5D,EAAAA,EAAAA,YAAU,WACR0c,IACF,GAAG,KAEH1c,EAAAA,EAAAA,YAAU,WACR2c,IACF,GAAG,CAACf,IAGJ,IAAM5G,EAAcjT,GAAkBiB,GAAQA,EAAKP,MAC7CgL,GAAcF,EAAUxH,SACxBoN,GAAU,CACd,CACEvV,QAAS,SAAAwV,GAAA,OAAAC,EAAAA,GAAAA,SAAAD,GAASlP,EAAWC,SAAS,UAAU,EAChD1C,KAAM,iEAER,CACE7D,QAAS,kBAAMoG,GAAQ,EACvBvC,KAAM,mCAMJkb,GAAgB,eAAApJ,GAAAlQ,EAAAA,EAAAA,UAAG,YACvB,UACQE,EAAAA,QAAAA,QAAqB,eAAgBnB,KAAKO,UAAUiZ,GAC5D,CAAE,MAAOnY,GACPC,QAAQD,MAAM,oCAAqCA,EACrD,CACF,IAAC,kBANqB,OAAA8P,EAAA5P,MAAA,KAAAC,UAAA,KAQhB8Y,GAAgB,eAAAE,GAAAvZ,EAAAA,EAAAA,UAAG,YACvB,IACE,IAAMyQ,QAAsBvQ,EAAAA,QAAAA,QAAqB,gBAC7CuQ,GACF+H,EAAYzZ,KAAKC,MAAMyR,GAE3B,CAAE,MAAOrQ,GACPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,kBATqB,OAAAmZ,EAAAjZ,MAAA,KAAAC,UAAA,KAWtB,OACE/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAChCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO0R,aAAapS,UAC/BC,EAAAA,EAAAA,KAACuJ,EAAU,CACTC,KAAM,CACJM,UAAWwE,EAASlJ,MACpB2E,SAAUuE,EAASxD,KACnBvK,QAASwe,QAIfvf,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiS,iBAAiB3S,SAAA,EACnCC,EAAAA,EAAAA,KAAC0H,EAAU,CAACC,SAAUgQ,EAAa7P,SAAS,KAC5C9H,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CAAEL,MAAO,UAAWC,SAAU,GAAIC,UAAW,SAAUiH,aAAc,GAAIpH,WAAY,sBAAwBzB,SAAEuV,GAAsB3P,EAAKmF,OACtJgL,GAAQzG,KAAI,SAAC7F,EAAM8F,GAAK,OACvBtP,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAElC,MAAO,OAAQG,UAC5BC,EAAAA,EAAAA,KAAC+S,GAAY,CAACvJ,KAAMA,KADc8F,EAE7B,QAGXtP,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOgS,iBAAiB1S,UACnCC,EAAAA,EAAAA,KAACoP,EAAAA,QAAU,CAACtN,MAAO,CAAEkB,KAAM,EAAGmT,eAAgB,EAAG/N,cAAe,UAAWrI,SAChE,MAAR0e,OAAQ,EAARA,EAAUpP,KAAI,SAACuB,GAAa,IAAD4O,EAAAC,EAAAC,EAC1B,OACE1f,EAAAA,EAAAA,KAAC2f,GAAW,CAEVnW,KAAM,CACJ7B,SAAwB,OAAhB6X,EAAE5O,EAAQgP,aAAM,EAAdJ,EAAgBpa,MAC1BsD,SAAwB,OAAhB+W,EAAE7O,EAAQgP,aAAM,EAAdH,EAAgB3U,KAC1B8F,QAASA,EAAQpH,KACjB8S,KAAM1L,EAAQ0L,KACdrJ,KAAmB,OAAdyM,EAAA9O,EAAQgP,aAAM,EAAdF,EAAgB5U,QAASnF,EAAKmF,KACnCiD,SAAS,EACTrC,QAAQ,EACR6Q,MAAO3L,EAAQzG,IAEjBiS,YAAazW,GAXRiL,EAAQzG,GAcnB,SAGJnK,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO8R,cAAcxS,UAChCC,EAAAA,EAAAA,KAAC6f,GAAY,CAAC9R,SAAS,EAAO4P,QAASrI,GAAsB3P,EAAKmF,KAAM8S,QAAStP,EAASxD,KAAM+S,cAxG5E,WACxBiB,GAAuB,EACzB,OAwGI9e,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO6C,WAAWvD,UAC7BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAM6U,GAAa,EAAK,EAACrV,UACpDC,EAAAA,EAAAA,KAACwP,EAAS,SAGdxP,EAAAA,EAAAA,KAACgX,GAAAA,QAAK,CAACC,QAAS9B,EAAW+B,aAAa,EAAKnX,UAC3CP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOqS,eAAe/S,SAAA,EACjCC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO2D,KAAKrE,SAAC,2FAC1BC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,GAAI1F,WAAY,UAAWnD,UACtDC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUxH,SACjB+C,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAExH,SAAUtE,IAAO,EAClEiM,YAAa,GACbV,KAAM,WACN3M,MAAM,OAGVhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACHC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,6CAAWC,QAAS0V,EAAqBzV,UAAW4P,cAMrF,C,+kBCnOA,SAboB,SAAC7Q,GAAK,OACxBC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAGzH,KAAK,aACjCE,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,EAAGC,GAAI,GAAIC,EAAG,EAAGzH,KAAK,aAClCE,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,EAAGC,GAAI,GAAIC,EAAG,EAAGzH,KAAK,eAC9B,E,+kBCKO,SAASggB,GAAazf,GAAyB,IAAD0f,EAArBlZ,EAAUxG,EAAVwG,WAAYwX,EAAKhe,EAALge,MAC1C5d,EAASmB,KACPsM,EAAcmQ,EAAMC,OAApBpQ,UACRlM,GAAkCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1CmT,EAAS/S,EAAA,GAAEgT,EAAYhT,EAAA,GAC9BG,GAAwBN,EAAAA,EAAAA,UAAS,SAAQQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GACzCyK,GADWvK,EAAA,GAASA,EAAA,IACcR,EAAAA,EAAAA,UAAS,CACvCyG,SAAU,MACZuE,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAFKkD,EAASjD,EAAA,GAAEkD,EAAYlD,EAAA,GAGtBtG,GAAWd,EAAAA,EAAAA,YAAWN,GAAtBoB,OACRmR,GAA6BjS,EAAAA,EAAAA,YAAWN,GAAhCI,EAAImS,EAAJnS,KACRyH,GADwB0K,EAAV9Q,YACkB/E,EAAAA,EAAAA,UAAS,KAAGoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAArCmR,EAAQlR,EAAA,GAAEmR,EAAWnR,EAAA,GACpB3I,GAAkBmB,EAAAA,EAAAA,YAAWtB,GAA7BG,cACR4V,GAAgCrY,EAAAA,EAAAA,WAAS,GAAMsY,GAAAlY,EAAAA,EAAAA,SAAAiY,EAAA,GAAxC0F,EAAQzF,EAAA,GAAE0F,EAAW1F,EAAA,GAC5BoE,GAAkC1c,EAAAA,EAAAA,WAAS,GAAM2c,GAAAvc,EAAAA,EAAAA,SAAAsc,EAAA,GAA1CuB,EAAStB,EAAA,GAAEuB,EAAYvB,EAAA,GAC9BwB,GAA8Bne,EAAAA,EAAAA,WAAS,GAAMoe,GAAAhe,EAAAA,EAAAA,SAAA+d,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwCve,EAAAA,EAAAA,WAAS,GAAKwe,GAAApe,EAAAA,EAAAA,SAAAme,EAAA,GAA/CE,EAAYD,EAAA,GACnBE,IADoCF,EAAA,IACJxe,EAAAA,EAAAA,UAAS,KAAG2e,IAAAve,EAAAA,EAAAA,SAAAse,GAAA,GAArCrL,GAAQsL,GAAA,GAAErL,GAAWqL,GAAA,GACtB7W,GAAW,QACXgD,GAAW,OACjB8T,IAAsC5e,EAAAA,EAAAA,UAAS,IAAG6e,IAAAze,EAAAA,EAAAA,SAAAwe,GAAA,GAA3CnT,GAAWoT,GAAA,GAAEC,GAAcD,GAAA,GAGlCE,IAA4D/e,EAAAA,EAAAA,WAAS,GAAKgf,IAAA5e,EAAAA,EAAAA,SAAA2e,GAAA,GAAnEE,GAAsBD,GAAA,GAAEE,GAAyBF,GAAA,GAElDG,GAAgB,eAAArb,GAAAC,EAAAA,EAAAA,UAAG,YACrB,IACI,IAAMgF,QAAiBN,MAAM,mEAAmEwD,EAAa,CACzGvD,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,GAAQ,IAAIgD,OAItD,IAAI/B,EAASC,GA+BT,MAAM,IAAImU,MAAM,gCA/BF,IAADiC,EAAAC,EACP5T,QAAoB1C,EAAS2C,OAK7B4T,GAAgB,MAAJ5b,OAAI,EAAJA,EAAMwE,OAA0B,OAAxBkX,EAAK3T,EAAY8T,cAAO,EAAnBH,EAAqBlX,IAC9CsX,EAAsB,OAAhBH,EAAG3b,EAAKyQ,eAAQ,EAAbkL,EAAeI,MAAK,SAAC3T,GAAO,OAAKA,EAAQ5D,KAAOuD,EAAYvD,EAAE,IACvEiS,EAAc1O,EAAYiU,QAAQC,MAAK,SAAAH,GAAM,OAAIA,EAAO9b,KAAKwE,KAAOxE,EAAKwE,EAAE,IAEjF,GAAIiS,EAAa,CAEb,IAAQC,EAASD,EAATC,KAEJA,QAIqBwF,IAAjBxF,EAAKiE,SAGLC,EAAWlE,EAAKiE,QAG5B,CAEAL,EAAYwB,GAEZtB,EAAaoB,GACbR,GAAerT,EAIvB,CAAE,MAAOtH,GACL,MAAM,IAAIgZ,MAAM,+BAAgChZ,EACpD,CACJ,IAAC,kBA9CqB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,MAgDtBmP,EAAAA,EAAAA,gBACIhM,EAAAA,aAAkB,WAChBkM,KACAuL,IAA0B,EAC5B,GAAG,MAGLxe,EAAAA,EAAAA,YAAU,WACJue,IACFE,KACGrW,MAAK,kBAAMoW,IAA0B,EAAM,IAC3C7V,OAAM,SAAClF,GAAK,OAAKC,QAAQgF,IAAI,4BAA6BjF,EAAM,GAEvE,GAAG,CAAC8a,MAEJve,EAAAA,EAAAA,YAAU,WACR,IAAMqc,EAAaC,aAAY,WAC7BkC,IAA0B,EAC5B,GAAG,KAEH,OAAO,kBAAMjC,cAAcF,EAAY,CACzC,GAAG,IAEH,IAIIpJ,GAAoB,eAAAnP,GAAAT,EAAAA,EAAAA,UAAG,YACzB,IACI,IAAM0C,QAAiBkM,KACnBlM,GAAYA,IAAa4M,IACzBC,GAAY7M,EAEpB,CAAE,MAAOtC,GACLC,QAAQgF,IAAI,qCAAsCjF,EACtD,CACJ,IAAC,kBATyB,OAAAK,EAAAH,MAAA,KAAAC,UAAA,MAY1B5D,EAAAA,EAAAA,YAAU,WACN0c,KACAhZ,QAAQgF,IAAI6C,EAChB,GAAG,KAEHvL,EAAAA,EAAAA,YAAU,WACN2c,IACJ,GAAG,CAACf,KAEJ5b,EAAAA,EAAAA,YAAU,WACNmf,IACJ,GAAG,CAAC9B,EAAUU,IAId,IAAMtQ,GAAcF,EAAUxH,SACxBoN,GAAU,CACZ,CACIvV,QAAS,SAAAqG,GAAA,OAAAoP,EAAAA,GAAAA,SAAApP,GAASC,EAAWC,SAAS,UAAU,EAChD1C,KAAM,iEAEV,CACI7D,QAAS,kBAAMoG,GAAQ,EACvBvC,KAAM,mCAMR2d,GAAe,eAAAhM,GAAA/P,EAAAA,EAAAA,UAAG,YACpB,IACI,IAAM8E,EAAOwK,IAAY3P,EAAKmF,KACxBd,EAAc0D,GAAY5C,KAC1BgO,EAASkH,EAAQ,mEACkD9R,EAAS,mBAAmBpD,EAAI,iFAClBA,EAAI,iBAAiBd,SAErFU,MAAMoO,EAAQ,CACjCnO,OAAQqV,EAAW,SAAW,OAC9BpV,QAAS,CACL,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,GAAQ,IAAIgD,QAIzC9B,IACTgV,GAAY,SAAC+B,GAAY,OAAMA,CAAY,IAC3C9W,MAAM8U,EAAW,uBAAyB,0BAC1C9d,OAAOiJ,SAASC,UAGhBF,MAAM8U,EAAW,8BAAgC,6BAEzD,CAAE,MAAO5Z,GACL8E,MAAM,qCAAsC9E,EAChD,CACJ,IAAC,kBA3BoB,OAAA2P,EAAAzP,MAAA,KAAAC,UAAA,KA+Bfub,GAAgB,eAAA5L,GAAAlQ,EAAAA,EAAAA,UAAG,YACrB,IACI,IAAMic,EAAe,CACjBjC,SAAAA,EACAU,aAAAA,SAEExa,EAAAA,QAAAA,QAAqB,eAAgBnB,KAAKO,UAAU2c,GAC9D,CAAE,MAAO7b,GACLC,QAAQD,MAAM,oCAAqCA,EACvD,CACJ,IAAC,kBAVqB,OAAA8P,EAAA5P,MAAA,KAAAC,UAAA,KAahB+Y,GAAgB,eAAAC,GAAAvZ,EAAAA,EAAAA,UAAG,YACrB,UACUE,EAAAA,QAAAA,QAAqB,eAAgBnB,KAAKO,UAAUiZ,GAC9D,CAAE,MAAOnY,GACLC,QAAQD,MAAM,oCAAqCA,EACvD,CACJ,IAAC,kBANqB,OAAAmZ,EAAAjZ,MAAA,KAAAC,UAAA,KAOhBoR,GAAcjT,GAAkBiB,GAAQA,EAAKP,MAC7Cia,GAAgB,eAAA6C,GAAAlc,EAAAA,EAAAA,UAAG,YACrB,IACI,IAAMyQ,QAAsBvQ,EAAAA,QAAAA,QAAqB,gBAC7CuQ,GACA+H,EAAYzZ,KAAKC,MAAMyR,GAE/B,CAAE,MAAOrQ,GACLC,QAAQD,MAAM,qCAAsCA,EACxD,CACJ,IAAC,kBATqB,OAAA8b,EAAA5b,MAAA,KAAAC,UAAA,KAUhB0P,GAAmB,eAAAkM,GAAAnc,EAAAA,EAAAA,UAAG,YACxB,IACI,IAAMgF,QAAiBN,MAAM,yEAA0E,CACnGC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,GAAQ,IAAIgD,KAElD0D,KAAM1L,KAAKO,UAAU,CACjByE,SAAUpE,EAAKmF,KACfd,YAAakG,EAAUxH,aAI/B,GAAIsC,EAASC,GAAI,OACiBD,EAAS2C,OACvCyH,GAAa,GAEblK,MAAM,mBACNhJ,OAAOiJ,SAASC,QACpB,MAEIF,MAAM,2BAEd,CAAE,MAAO9E,GACL8E,MAAM,0BAA2B9E,EACrC,CACJ,IAAC,kBA3BwB,OAAA+b,EAAA7b,MAAA,KAAAC,UAAA,KAgCzB,OACI/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAC9BP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO2R,iBAAiBrS,SAAA,EACjCC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO4R,QAAQtS,SAAE2N,GAAY5C,QAC1C9K,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACDC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO0f,EAAW,mDAAa,uFAAkBzf,QAASwhB,GAAiBvhB,SAAU0f,MAEtGF,GAAYM,IACTtgB,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAER,YAAa,IAAKvB,UAC7BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,SAAA6hB,GAAA,OAAApM,EAAAA,GAAAA,SAAAoM,GAASvb,EAAWC,SAAS,WAAY,CAAEoH,UAAWR,GAAYvD,IAAK,EAACpK,UACjGC,EAAAA,EAAAA,KAACqiB,GAAW,YAK5B7iB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiS,iBAAiB3S,SAAA,EACjCC,EAAAA,EAAAA,KAAC0H,EAAU,CAACC,SAAUgQ,GAAa7P,SAAS,KAC5C9H,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAO,CAAEL,MAAO,UAAWC,SAAU,GAAIC,UAAW,SAAUiH,aAAc,GAAIpH,WAAY,sBAAwBzB,SAAEuV,IAAsB3P,EAAKmF,OACtJgL,GAAQzG,KAAI,SAAC7F,EAAM8F,GAAK,OACrBtP,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAElC,MAAO,OAAQG,UAC1BC,EAAAA,EAAAA,KAAC+S,GAAY,CAAavJ,KAAMA,GAAb8F,IADaA,EAE7B,QAGftP,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOgS,iBAAiB1S,UACjCC,EAAAA,EAAAA,KAACoP,EAAAA,QAAU,CACPtN,MAAO,CAAEkB,KAAM,EAAGmT,eAAgB,EAAG/N,cAAe,UAAWrI,SACnD,MAAX2N,IAAqB,OAAVqS,EAAXrS,GAAa6Q,eAAF,EAAXwB,EAAuB1Q,KAAI,SAACuB,GAAa,IAAD8F,EAAA4L,EAAA3L,EAAAC,EAAAC,EAC/B0L,EAAyB,OAAjB7L,EAAG9F,EAAQmG,aAAM,EAAdL,EAAgBvM,GAC3BqY,EAAiB9U,GAAYiU,QAAQC,MAAK,SAACH,GAAM,OAAKA,EAAO9b,KAAKwE,KAAOoY,CAAQ,IAEjFlG,EAAqB,MAAdmG,GAAoB,OAANF,EAAdE,EAAgBnG,WAAF,EAAdiG,EAAsBxX,KAEnC,OACI9K,EAAAA,EAAAA,KAAC2f,GAAW,CAERnW,KAAM,CACF7B,SAAwB,OAAhBgP,EAAE/F,EAAQmG,aAAM,EAAdJ,EAAgBvR,MAC1BsD,SAAwB,OAAhBkO,EAAEhG,EAAQmG,aAAM,EAAdH,EAAgB9L,KAC1BuR,KAAMA,EACNzL,QAASA,EAAQpH,KACjB8S,KAAM1L,EAAQ0L,KACdrJ,KAAmB,OAAd4D,EAAAjG,EAAQmG,aAAM,EAAdF,EAAgB/L,QAASnF,EAAKmF,KACnCiD,SAAS,EACTrC,QAAQ,EACR6Q,MAAO3L,EAAQzG,IAEnBiS,YAAazW,GAZRiL,EAAQzG,GAezB,QAIP6V,IACGhgB,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO8R,cAAcxS,UAC9BC,EAAAA,EAAAA,KAAC6f,GAAY,CAAC9R,SAAS,EAAM4P,QAASrI,IAAsB3P,EAAKmF,KAAM8S,QAASlQ,GAAamQ,cAnMjF,WACxBsD,IAA0B,EAC5B,OAoMMnhB,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO6C,WAAWvD,UAC3BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAM6U,GAAa,EAAK,EAACrV,UAClDC,EAAAA,EAAAA,KAACwP,EAAS,SAGlBxP,EAAAA,EAAAA,KAACgX,GAAAA,QAAK,CAACC,QAAS9B,EAAW+B,aAAa,EAAKnX,UACzCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOqS,eAAe/S,SAAA,EAC/BC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO2D,KAAKrE,SAAC,2FAC1BC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAE8G,aAAc,GAAI1F,WAAY,UAAWnD,UACpDC,EAAAA,EAAAA,KAACyP,GAAS,CACNvK,MAAOgL,EAAUxH,SACjB+C,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAExH,SAAUtE,IAAO,EAClEiM,YAAa,GACbV,KAAM,WACN3M,MAAM,OAGdhD,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACDC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,6CAAWC,QAAS0V,GAAqBzV,UAAW4P,cAMjG,C,+kBC1TA,SAnBkB,SAAC7Q,GAAK,OACtBC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHH,KAAK,UACLI,EAAE,qHAEJF,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACHuH,OAAO,UACPC,YAAa,IACbvH,EAAE,uHAEA,E,+kBCNR,SAXiB,SAACX,GAAK,OACrBS,EAAAA,EAAAA,KAACP,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,UAETC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,KAAMC,GAAI,KAAMC,EAAG,GAAIC,OAAO,WACtC,E,+kBCIR,SAbsB,SAACjI,GAAK,OAC1BC,EAAAA,EAAAA,MAACC,IAAGC,GAAAA,GAAA,CACFC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDP,GAAK,IAAAQ,SAAA,EAETC,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,KAAMC,GAAI,KAAMC,EAAG,GAAIzH,KAAK,aACxCE,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,KAAMC,GAAI,KAAMC,EAAG,GAAIzH,KAAK,OAAOK,YAAa,MAC5DH,EAAAA,EAAAA,KAACoH,EAAAA,OAAM,CAACC,GAAI,KAAMC,GAAI,KAAMC,EAAG,GAAIC,OAAO,YACtC,E,+kBCOO,SAASib,GAAYpiB,GAAY,IAATmJ,EAAInJ,EAAJmJ,KAC3B6S,EAA4D7S,EAA5D6S,KAAMvR,EAAsDtB,EAAtDsB,KAAeb,GAAuCT,EAAhDjJ,QAAgDiJ,EAAvCS,gBAAgBuX,EAAuBhY,EAAvBgY,QAAStT,EAAc1E,EAAd0E,UACtDlM,GAAkCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1C4H,EAASxH,EAAA,GAAEyH,EAAYzH,EAAA,GAC9BG,GAAkCN,EAAAA,EAAAA,WAAS,GAAMQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA1C4S,EAAS1S,EAAA,GAAE2S,EAAY3S,EAAA,GACtBkD,GAASE,EAAAA,EAAAA,YAAWN,GAApBI,KACRqH,GAAkC/K,EAAAA,EAAAA,UAAS,CACvCyG,SAAU,GACV2T,KAAMA,IACRpP,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAHKkD,EAASjD,EAAA,GAAEkD,EAAYlD,EAAA,GAIxBxM,EC3BK,WACX,IAAAmH,GAA0BC,EAAAA,EAAAA,WAC1B,OADaD,EAALhI,MAAagI,EAAN/H,OACRgB,EAAAA,QAAAA,OAAkB,CACrBkC,UAAW,CACPhC,gBAAiB,UACjBC,aAAc,GACdE,gBAAiB,GACjBC,kBAAmB,IAGvBiD,KAAM,CACF5C,WAAY,qBACZC,MAAO,UACPC,SAAU,GACVC,UAAW,SACXiH,aAAc,IAElB8Z,QAAS,CACLta,cAAe,MACflF,WAAY,SACZD,eAAgB,gBAChBD,KAAM,GAEV+G,SAAU,CACNvI,WAAY,qBACZE,SAAU,GACVD,MAAO,UACP6I,WAAY,IAEhB+R,KAAM,CACF7a,WAAY,qBACZE,SAAU,GACVD,MAAO,UACP6I,WAAY,GACZhJ,YAAa,IAEjB+C,eAAgB,CACZ+D,cAAe,MACflF,WAAY,UAEhB4P,eAAgB,CACZ/R,gBAAiB,UACjBC,aAAc,GACd6C,QAAS,GACTC,YAAa,OACbC,aAAc,CAAEnE,MAAO,EAAGC,OAAQ,GAClCmE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXX,SAAU,WACVI,IAAK,MACLF,KAAM,MACN2F,UAAW,CAAC,CAAEyJ,WAAY,QAAU,CAAEtG,WAAY,SAClD3M,MAAO,MACPC,OAAQ,MACRoD,eAAgB,SAChBC,WAAY,SACZkF,cAAe,WAG3B,CDjCmBxG,GACfwL,GAA8BnL,EAAAA,EAAAA,WAAS,GAAMoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAAtCkT,EAAOjT,EAAA,GAAEkT,EAAUlT,EAAA,GACpBtD,EAAW,QACXgD,EAAW,OACX4V,EAAY,eAAA5c,GAAAC,EAAAA,EAAAA,UAAG,YACjB,IACE,IAAMmZ,EAAG,mEAAsEjR,EAAU/D,GAAE,mBAAmBW,EACxGE,QAAiB+N,GAAAA,QAAAA,OAAaoG,EAAK,CACvCyD,KAAM,CACJ7Y,SAAUA,EACVgD,SAAUA,KAGd1G,QAAQgF,IAAI,oCACZhF,QAAQgF,IAAIL,EAASxB,KACvB,CAAE,MAAOpD,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,CACF,IAAC,kBAde,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAiBZ6J,EAAcF,EAAUmM,KAWxBwG,GADc3U,EAAUyT,QAAQC,MAAK,SAAAH,GAAM,OAAIA,EAAO9b,KAAKwE,KAAOxE,EAAKwE,EAAE,IACxD,eAAA1D,GAAAT,EAAAA,EAAAA,UAAG,YACtB,IAEMwK,EAAc,CAClB1F,KAAMoF,EAAUmM,KAChBiE,QAASA,EACTvW,SAAUe,EACVd,YAAakE,EAAUpD,MAGzB,WAEyBJ,MAXb,sEAWwB,CAChCC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBiH,cAAc,SAAUhH,KAAQd,EAAQ,IAAIgD,IAE9C0D,KAAM1L,KAAKO,UAAUkL,MAIVvF,GACX5E,QAAQgF,IAAI,8BAEZhF,QAAQgF,IAAI,yBACZhF,QAAQgF,IAAI6C,EAAUpD,MAE1B,CAAE,MAAO1E,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CAEAgP,GAAa,EACf,IAAC,kBAjCoB,OAAA3O,EAAAH,MAAA,KAAAC,UAAA,MAoCvB,OACI/G,EAAAA,EAAAA,MAACyP,EAAAA,QAAgB,CACbnN,MAAO,CACHrB,EAAOsC,UACPkH,EACAL,GAAa,CAAE7I,gBAAiB,YAEpCyJ,aAAc,kBAAMX,GAAa,EAAK,EACtCY,aAAc,kBAAMZ,GAAa,EAAM,EAAC9J,SAAA,EAExCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiiB,QAAQ3iB,SAAA,EACtByhB,IACExhB,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAC1O,QAASoiB,EAAa5iB,UACpCC,EAAAA,EAAAA,KAACuL,EAAS,OAIlBvL,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAOsJ,SAAShK,SAAE+K,KAC/B9K,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO4b,KAAKtc,SAAEmQ,EAAUmM,QAEnCmF,IACExhB,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAC1O,QAAS,kBAAM6U,GAAa,EAAK,EAACrV,UAChDC,EAAAA,EAAAA,KAAC8iB,GAAS,UAMtB9iB,EAAAA,EAAAA,KAACgX,GAAAA,QAAK,CAACC,QAAS9B,EAAW+B,aAAa,EAAKnX,UACzCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOqS,eAAe/S,SAAA,EAC/BC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO2D,KAAKrE,SAAC,+EAC1BP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4D,eAAetE,SAAA,EAC/BC,EAAAA,EAAAA,KAACyP,GAAS,CACNvK,MAAOgL,EAAUmM,KACjB5Q,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAEmM,KAAMjY,IAAO,EAC9DiM,YAAa,GACbV,KAAM,WACN3M,MAAM,KAEVhD,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAACnN,MAAOrB,EAAOsiB,YAAaxiB,QAnFxC,WACrBggB,GAAYD,EAChB,EAiF2FvgB,SAClEugB,GAAUtgB,EAAAA,EAAAA,KAACgjB,GAAa,KAAMhjB,EAAAA,EAAAA,KAACijB,GAAQ,UAGhDjjB,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACDC,EAAAA,EAAAA,KAACiP,EAAAA,QAAgB,CAAC1O,QAAS,kBAAM6U,GAAa,EAAM,EAACrV,UACjDC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,yDAAaC,QAASsiB,EAAmBriB,UAAW4P,eAOrG,C,+kBErIe,SAAS8S,GAAc7iB,GAAyB,IAAD8iB,EAArBtc,EAAUxG,EAAVwG,WAC/BqH,EADgD7N,EAALge,MACvBC,OAApBpQ,UACAvI,GAASE,EAAAA,EAAAA,YAAWN,GAApBI,KACFlF,EAASmB,KACfI,GAA8BC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAAtCse,EAAOle,EAAA,GAAEme,EAAUne,EAAA,GAC1BG,GAAwBN,EAAAA,EAAAA,UAAS,IAAGQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAAvB6gB,GAAF3gB,EAAA,GAASA,EAAA,IAEpBuK,GAAkD/K,EAAAA,EAAAA,WAAS,GAAMgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA1DqW,EAAiBpW,EAAA,GAAEqW,EAAoBrW,EAAA,GAC9CG,GAAsCnL,EAAAA,EAAAA,UAAS,IAAGoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAA3CM,EAAWL,EAAA,GAAE0T,EAAc1T,EAAA,GAC5BtD,EAAW,QACXgD,EAAW,QAEjB2I,EAAAA,EAAAA,gBACEhM,EAAAA,aAAkB,WAChB0X,GACF,GAAG,CAAC1T,EAAYiU,WAElB,IAAArH,GAAkCrY,EAAAA,EAAAA,UAAS,CACzCyG,SAAUgF,EAAY5C,MAAQ,MAC9ByP,GAAAlY,EAAAA,EAAAA,SAAAiY,EAAA,GAFKpK,EAASqK,EAAA,GAAEpK,EAAYoK,EAAA,GAGxB6G,EAAgB,eAAArb,GAAAC,EAAAA,EAAAA,UAAG,YACvB,IACE,IAAMgF,QAAiBN,MAAM,mEAAmEwD,EAAa,CAC3GvD,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAI/B,EAASC,GAAI,CAAC,IAADoW,EACT3T,QAAoB1C,EAAS2C,OAEnCoT,EAAerT,GACfyC,GAAa,SAACoT,GAAa,OAAA7jB,GAAAA,GAAA,GACtB6jB,GAAa,IAChB7a,SAAUgF,EAAY5C,MAAQ,KAAG,IAEnC,IAAMyW,GAAgB,MAAJ5b,OAAI,EAAJA,EAAMwE,OAA0B,OAAxBkX,EAAK3T,EAAY8T,cAAO,EAAnBH,EAAqBlX,IACpDoW,EAAWgB,EACb,MACElb,QAAQgF,IAAI,+BAEhB,CAAE,MAAOjF,GACPC,QAAQgF,IAAI,+BAAgCjF,EAC9C,CACF,IAAC,kBA1BqB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KA8BhBid,EAAmB,eAAA/c,GAAAT,EAAAA,EAAAA,UAAG,YAC1B,WACyB0E,MAAM,0EAA0EwD,EAAa,CAClHvD,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,OAIrC9B,IAEXC,MAAM,mBACNrE,EAAWC,SAAS,aAGpBoE,MAAM,2BAEV,CAAE,MAAO9E,GACP8E,MAAM,0BAA2B9E,EACnC,CACF,IAAC,kBArBwB,OAAAK,EAAAH,MAAA,KAAAC,UAAA,KAwBnBkd,EAAgB,eAAA7c,GAAAZ,EAAAA,EAAAA,UAAG,UAAO0d,GAC9BN,EAAQM,GACR,UACQxd,EAAAA,QAAAA,QAAqB,OAAQwd,EACrC,CAAE,MAAOtd,GACPC,QAAQgF,IAAI,qBAAsBjF,EACpC,CACF,IAAC,gBAPqBM,GAAA,OAAAE,EAAAN,MAAA,KAAAC,UAAA,KAShBod,EAAoB,eAAA5N,GAAA/P,EAAAA,EAAAA,UAAG,YAC3B,GAAIqd,EAAmB,CAErBC,GAAqB,GACrB,IAEE,IAAMtY,QAAiBN,MAAM,mEAAmEwD,EAAS,gBAAgB0D,mBAAmB1B,EAAUxH,UAAa,CACjKiC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAI/B,EAASC,GAAI,CACf,IAAMwC,QAAwBzC,EAAS2C,OAGnCiW,EAAkBje,EAAKyQ,SAAS/G,KAAI,SAACtB,GACzC,OAAIA,EAAQ5D,KAAOsD,EAAgBtD,GAEjCzK,GAAAA,GAAA,GAAYqO,GAAO,IAAEjD,KAAM2C,EAAgB3C,OAEtCiD,CACT,IAEM9G,EAAWvH,GAAAA,GAAA,GACZiG,GAAI,IACPyQ,SAAUwN,IAIZ/e,aAAaQ,QAAQ,OAAQN,KAAKO,UAAU2B,GAE5C,MACEZ,QAAQgF,IAAI,gCAEhB,CAAE,MAAOjF,GACPC,QAAQgF,IAAI,+BAAgCjF,EAC9C,CACF,MAEEkd,GAAqB,EAEzB,IAAC,kBA5CyB,OAAAvN,EAAAzP,MAAA,KAAAC,UAAA,KAuD1B,OACE/G,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOyR,kBAAkBnS,SAAA,EACpCP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAOqR,mBAAmB/R,SAAA,EACrCC,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOuR,mBAAmBjS,UACrCC,EAAAA,EAAAA,KAACyP,GAAS,CACRvK,MAAOgL,EAAUxH,SACjB+C,SAAU,SAACrH,GAAI,OAAK+L,EAAYzQ,GAAAA,GAAC,CAAC,EAAIwQ,GAAS,IAAExH,SAAUtE,IAAO,EAClEiM,YAAa,GACbV,KAAM,WACN3M,MAAM,EACN6gB,SAAUR,OAGdrjB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAASojB,EAAqB5jB,UAChDC,EAAAA,EAAAA,KAACwb,GAAM,UAGXxb,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO6R,kBAAkBvS,UACpCC,EAAAA,EAAAA,KAACoP,EAAAA,QAAU,CAACtN,MAAO,CAAEkB,KAAM,EAAGmT,eAAgB,EAAG/N,cAAe,UAAWrI,SACvD,OADuDojB,EAC1EzV,EAAYiU,cAAO,EAAnBwB,EAAqB9T,KAAI,SAACtB,GAAO,OAC9B/N,EAAAA,EAAAA,KAACyiB,GAAY,CAEXjZ,KAAM,CACJsa,IAAK/V,EAAQ5D,GACbW,KAAMiD,EAAQpI,KAAKmF,KACnBuR,KAAMtO,EAAQsO,KAAKvR,KACnBiZ,aAAcN,EACdjC,QAASzT,EAAQsO,KAAKkF,UACtBrT,UAAWR,IAGb,SAKR1N,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOiD,QAAQ3D,UAC1BC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,UAAW,CAAEoH,UAAWR,EAAYvD,IAAK,EAACpK,UAC/FC,EAAAA,EAAAA,KAAC6b,GAAO,SAGZ7b,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAO6C,WAAWvD,UAC7BC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,4EAAiBC,QAASijB,EAAqBhjB,UAAW8f,QAIvF,CC7Le,SAAS0D,GAAmB3jB,GAAyB,IAAD4jB,EAArBpd,EAAUxG,EAAVwG,WAAYwX,EAAKhe,EAALge,MAChD5d,EAASmB,KACPsM,EAAcmQ,EAAMC,OAApBpQ,UACRlM,GAAwDC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA1CkiB,GAAF9hB,EAAA,GAAyBA,EAAA,KAEpDO,EAAAA,EAAAA,YAAU,WACNuhB,GAAwB,EAC5B,GAAG,CAAChW,KACJwH,EAAAA,EAAAA,gBACIhM,EAAAA,aAAkB,WACd0X,GACJ,GAAG,CAAClT,KAER,IAEA3L,GAAsCN,EAAAA,EAAAA,UAAS,IAAGQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAA3CmL,EAAWjL,EAAA,GAAEse,EAActe,EAAA,GAE5B0hB,GAAgBlK,EAAAA,EAAAA,QAAO,MAC7BjN,GAAoC/K,EAAAA,EAAAA,WAAS,GAAKgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA3CoX,EAAUnX,EAAA,GAAEoX,EAAapX,EAAA,IAEhCtK,EAAAA,EAAAA,YAAU,WAAO,IAADod,GACG,MAAXrS,GAAqB,OAAVqS,EAAXrS,EAAa6Q,eAAF,EAAXwB,EAAuB5R,QAAS,GAAKiW,GACrCD,EAAcvJ,QAAQ0J,YAAY,CAAEC,UAAU,GAEtD,GAAG,CAAY,MAAX7W,OAAW,EAAXA,EAAa6Q,SAAU6F,IAE3B,IAUMhD,EAAgB,eAAArb,GAAAC,EAAAA,EAAAA,UAAG,YACrB,IACI,IAAMgF,QAAiBN,MAAM,mEAAmEwD,EAAa,CACzGvD,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,iBAI1C,GAAIiB,EAASC,GAAI,CACb,IAAMyC,QAAoB1C,EAAS2C,OAEnCoT,EAAerT,EACnB,MAEIrH,QAAQgF,IAAI,+BAEpB,CAAE,MAAOjF,GACLC,QAAQgF,IAAI,+BAAgCjF,EAChD,CACJ,IAAC,kBArBqB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAuBtB,OAAKmH,GAIDlO,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO4C,cAActD,SAAA,EAC9BP,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAOrB,EAAO2R,iBAAiBrS,SAAA,EACjCC,EAAAA,EAAAA,KAAC+B,EAAAA,QAAI,CAACD,MAAOrB,EAAO4R,QAAQtS,SAAE2N,EAAY5C,QAC1C9K,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAAAnH,UACDC,EAAAA,EAAAA,KAACI,EAAY,CAACE,MAAO,uFAAkBC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,UAGzF9G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAOrB,EAAOgS,iBAAiB1S,UACjCC,EAAAA,EAAAA,KAACoP,EAAAA,QAAU,CAACuM,IAAKwI,EAAeK,oBA7CZ,WAC5B,IAAMC,EACFN,EAAcvJ,SACduJ,EAAcvJ,QAAQ8J,eACtBP,EAAcvJ,QAAQ8J,cAAclL,EAAI2K,EAAcvJ,QAAQ+J,kBAAkB9kB,QAChFskB,EAAcvJ,QAAQgK,YAAY/kB,OAEtCwkB,EAAcI,EAClB,EAqC0F3iB,MAAO,CAAEkB,KAAM,EAAGmT,eAAgB,EAAG/N,cAAe,UAAWrI,SACjI,MAAX2N,GAAqB,OAAVuW,EAAXvW,EAAa6Q,eAAF,EAAX0F,EAAuB5U,KAAI,SAACuB,GAAa,IAAD8F,EAAA4L,EAAA3L,EAAAC,EAC3B2L,EAAyB,OAAjB7L,EAAG9F,EAAQmG,aAAM,EAAdL,EAAgBvM,GAC3BqY,EAAiB9U,EAAYiU,QAAQC,MAAK,SAACH,GAAM,OAAKA,EAAO9b,KAAKwE,KAAOoY,CAAQ,IAEjFlG,EAAqB,MAAdmG,GAAoB,OAANF,EAAdE,EAAgBnG,WAAF,EAAdiG,EAAsBxX,KAEnC,OACI9K,EAAAA,EAAAA,KAAC2f,GAAW,CAERnW,KAAM,CACF7B,SAAwB,OAAhBgP,EAAE/F,EAAQmG,aAAM,EAAdJ,EAAgBvR,MAC1BsD,SAAwB,OAAhBkO,EAAEhG,EAAQmG,aAAM,EAAdH,EAAgB9L,KAC1BuR,KAAMA,EACNzL,QAASA,EAAQpH,KACjB8S,KAAM1L,EAAQ0L,KACdrJ,KAAK,EACLlF,SAAS,EACTrC,QAAQ,IATPkF,EAAQzG,GAczB,SAIRnK,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAASrB,EAAO6C,WAAWvD,UAChCC,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,EAAC/G,UAClEC,EAAAA,EAAAA,KAACwP,EAAS,WAxCL,IA6Cf,C,6OCzEe,SAASqV,KACxB,IAAMC,GAAQC,EAAAA,EAAAA,WACd/iB,GAAsCC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,SAAAL,EAAA,GAA3CgjB,EAAW5iB,EAAA,GAAE6iB,EAAc7iB,EAAA,GAClCG,GAA0CN,EAAAA,EAAAA,UAAS,IAAGQ,GAAAJ,EAAAA,EAAAA,SAAAE,EAAA,GAChDwH,GADctH,EAAA,GAAkBA,EAAA,GACrB,SACXsK,EAAW,OACjBC,GAA0C/K,EAAAA,EAAAA,UAAS,IAAGgL,GAAA5K,EAAAA,EAAAA,SAAA2K,EAAA,GAA/CM,EAAaL,EAAA,GAAEM,EAAgBN,EAAA,GACtCG,GAA8BnL,EAAAA,EAAAA,UAAS,IAAGoL,GAAAhL,EAAAA,EAAAA,SAAA+K,EAAA,GAAnCF,EAAOG,EAAA,GAAEF,EAAUE,EAAA,IAI1B1K,EAAAA,EAAAA,YAAU,WACR,IAAM6K,EAAS,eAAAzH,GAAAC,EAAAA,EAAAA,UAAG,YAChB,IAEE,IAAMyH,QAAwB/C,MAAM,qCAAsC,CACxEC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAIU,EAAgBxC,GAAI,CAKtB,IAJA,IAAMyC,QAAoBD,EAAgBE,OACpCC,EAAmB,GACnBC,EAAgB,GAAGC,EAAA,YAGvB,IAAMC,EAAUL,EAAYM,GAG5BJ,EAAiBK,KAAK,CACpBnD,KAAMiD,EAAQjD,KACdvK,QAAS,SAAAqG,GAAa,OAAAA,EAAVC,WACDC,SAAS,UAAW,CAAEoH,UAAWH,EAAQ5D,IAAK,EACzDL,UAAW,OAIb+D,EAAcI,KAAK,CACjBnD,KAAMiD,EAAQjD,KACdvK,QAAS,SAAAwV,GAAa,OAAAA,EAAVlP,WACDC,SAAS,gBAAiB,CAAEoH,UAAWH,EAAQ5D,IAAK,EAC/DL,UAAW,MAEf,EAlBSkE,EAAI,EAAGA,EAAIN,EAAYS,OAAQH,UAAGF,IAqB3C,IAAMM,QAAqB1D,MAAM,kCAAmC,CAClEC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAUC,KAAQd,EAAQ,IAAIgD,MAIlD,GAAIqB,EAAanD,GAIf,IAHA,IAAM9E,QAAiBiI,EAAaT,OAAOU,EAAA,YAIzC,IAAM1I,EAAOQ,EAAS6H,GACtBJ,EAAiBK,KAAK,CACpBnD,KAAMnF,EAAKmF,KACXvK,QAAS,SAAAkG,GAAa,OAAAA,EAAVI,WACDC,SAAS,OAAQ,CAAEwH,SAAU3I,GAAO,EAC/CmE,UAAWnE,EAAKP,OAEpB,EARS4I,EAAI,EAAGA,EAAI7H,EAASgI,OAAQH,UAAGK,SAUxChI,QAAQgF,IAAI,6BAGd8B,EAAWS,GACXL,EAAiBM,EACnB,MACExH,QAAQgF,IAAI,+BAEhB,CAAE,MAAOjF,GACPC,QAAQgF,IAAI,uBAAwBjF,EACtC,CACF,IAAC,kBAtEc,OAAAL,EAAAO,MAAA,KAAAC,UAAA,KAwEfiH,GACF,GAAG,IAMH,IAAM0X,EAAU,CACd,CACEpa,KAAM,YACNqa,UAAWC,EACXC,QAAS,SAAAnP,GAAA,IAAGrP,EAAUqP,EAAVrP,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,EAAC/G,UACnEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBACXxlB,EAAAA,EAAAA,KAACI,EAAY,CACX0B,MAAO,CAAER,YAAa,IACtBhB,MAAO,iCACPC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,GAC1C,EAEJ2e,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,aACNqa,UAAW5V,GACX8V,QAAS,SAAA9F,GAAA,IAAG1Y,EAAU0Y,EAAV1Y,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,EAAC/G,UACnEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASI,EACTzG,WAAYA,EACZ6E,QAAQ,KAEV1L,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QAClCnB,EAAAA,EAAAA,KAACI,EAAY,CACX0B,MAAO,CAAEwI,WAAY,IACrBhK,MAAO,iCACPC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,MAEvC,EAGT2e,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,gBACNqa,UAAWnB,GACXqB,QAAS,SAAAnD,GAAA,IAAGrb,EAAUqb,EAAVrb,WAAiBqb,EAAL7D,MAAK,MAAQ,CACnC/d,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,EAAC/G,UACnEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAE1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASI,EACT5B,QAAQ,EACR7E,WAAYA,KAEZ7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACpCnB,EAAAA,EAAAA,KAACI,EAAY,CACX0B,MAAO,CAAEwI,WAAY,IACrBhK,MAAO,iCACPC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,MAEvC,EAGT2e,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,WACNqa,UAAWjC,GACXmC,QAAS,SAAAlD,GAAA,IAAGtb,EAAUsb,EAAVtb,WAAiBsb,EAAL9D,MAAK,MAAQ,CACnC/d,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEV7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACjC,EAITskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAGH,CACE2J,KAAM,WACNqa,UAAWnQ,GACXqQ,QAAS,SAAAjD,GAAA,IAAGvb,EAAUub,EAAVvb,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEV7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACjC,EAGTskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,OACNqa,UAAW/G,GACXiH,QAAS,SAAAM,GAAA,IAAG9e,EAAU8e,EAAV9e,WAAiB8e,EAALtH,MAAK,MAAQ,CACnC/d,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEV7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACjC,EAGTskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,UACNqa,UAAWrF,GACXuF,QAAS,SAAAO,GAAA,IAAG/e,EAAU+e,EAAV/e,WAAiB+e,EAALvH,MAAK,MAAQ,CACnC/d,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEV7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACjC,EAGTskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAGH,CACE2J,KAAM,UACNqa,UAAWtL,GACXwL,QAAS,SAAAQ,GAAA,IAAGhf,EAAUgf,EAAVhf,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEd7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QAC7B,EAGTskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,iBACNqa,UAAWW,GACXT,QAAS,SAAAU,GAAA,IAAGlf,EAAUkf,EAAVlf,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEV7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACjC,EAGTskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,cACNqa,UAAWa,GACXX,QAAS,SAAAY,GAAA,IAAGpf,EAAUof,EAAVpf,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,WAAW,EAAC/G,UACjEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBAEXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,KAEV7G,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QACjC,EAGTskB,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,OACNqa,UAAWe,GACXb,QAAS,SAAAc,GAAA,IAAGtf,EAAUsf,EAAVtf,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,EAAC/G,UACnEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBACXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,EACZ6E,QAAQ,KAEV1L,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QAClCnB,EAAAA,EAAAA,KAACI,EAAY,CACX0B,MAAO,CAAEwI,WAAY,IACrBhK,MAAO,iCACPC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,MAEvC,EAET2e,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,MACNqa,UAAWiB,GACXf,QAAS,SAAAgB,GAAA,IAAGxf,EAAUwf,EAAVxf,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,EAAC/G,UACnEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBACXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,EACZ6E,QAAQ,KAEV1L,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QAClCnB,EAAAA,EAAAA,KAACI,EAAY,CACX0B,MAAO,CAAEwI,WAAY,IACrBhK,MAAO,iCACPC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,MAEvC,EAET2e,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,GAEH,CACE2J,KAAM,SACNqa,UAAWmB,GACXjB,QAAS,SAAAkB,GAAA,IAAG1f,EAAU0f,EAAV1f,WAAU,MAAQ,CAC5BvG,MAAO,GACPglB,WAAY,kBACVtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAkB,CAACtB,QAAS,kBAAMsG,EAAWC,SAAS,aAAa,EAAC/G,UACnEC,EAAAA,EAAAA,KAACulB,GAAa,CAACzjB,MAAO,CAAEwI,WAAY,OACjB,EAEvBkb,YAAa,kBACXhmB,EAAAA,EAAAA,MAAC0H,EAAAA,QAAI,CAACpF,MAAO,CAAEsG,cAAe,MAAOlF,WAAY,UAAWnD,SAAA,EAC1DC,EAAAA,EAAAA,KAACwL,GAAW,CAAC1J,MAAO,CAAER,YAAa,IAAM4D,MAAO8f,EAC9CvZ,SAAUwZ,EACV/X,QAASA,EACTrG,WAAYA,EACZ6E,QAAQ,KAEV1L,EAAAA,EAAAA,KAACkH,EAAAA,QAAI,CAACpF,MAAO,CAAEX,kBAAmB,QAClCnB,EAAAA,EAAAA,KAACI,EAAY,CACX0B,MAAO,CAAEwI,WAAY,IACrBhK,MAAO,iCACPC,QAAS,kBAAMsG,EAAWC,SAAS,OAAO,MAEvC,EAET2e,qBAAqB,EACrBC,YAAa,CACX7lB,OAAQ,IACRyQ,kBAAmB,EACnBC,kBAAmB,OACnBxP,gBAAiB,OACjBmD,UAAW,EACXjB,eAAgB,gBAChBmF,cAAe,MACflF,WAAY,SACZ/B,kBAAmB,IAEtB,IAKH,OACEnB,EAAAA,EAAAA,KAACyE,EAAa,CAAA1E,UACdC,EAAAA,EAAAA,KAACwF,EAAY,CAAAzF,UACXC,EAAAA,EAAAA,KAACkU,GAAe,CAAAnU,UAChBC,EAAAA,EAAAA,KAACwmB,EAAAA,QAAmB,CAAAzmB,UAEhBC,EAAAA,EAAAA,KAAC8kB,EAAM2B,UAAS,CAAA1mB,SACbmlB,EAAQ7V,KAAI,SAACqX,GAAM,OAClB1mB,EAAAA,EAAAA,KAAC8kB,EAAM6B,O,6WAAMjnB,CAAA,GAAuBgnB,GAAjBA,EAAO5b,KAAoB,aAU5D,EA7mBe,eAAAzK,GAAA2F,EAAAA,EAAAA,UAAG,kBACV4gB,GAAKC,UAAU,CACnB,qBAAsBC,EAAQ,MAC9B,oBAAqBA,EAAQ,KAC7B,kBAAmBA,EAAQ,OAE/B,IAAC,kBANc,OAAAzmB,EAAAiG,MAAA,KAAAC,UAAA,KASfwgB,GACGhc,MAAK,WAEJic,WACF,IACC1b,OAAM,SAAClF,GACNC,QAAQD,MAAM,uBAAwBA,EACxC,G,yQCzCE6gB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBtF,IAAjBuF,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,MCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,CAAClZ,EAAQmZ,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASha,EAAI,EAAGA,EAAI0Z,EAASvZ,OAAQH,IAAK,CAGzC,IAFA,IAAK4Z,EAAUC,EAAIC,GAAYJ,EAAS1Z,GACpCia,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASzZ,OAAQ+Z,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaK,OAAOC,KAAKlB,EAAoBS,GAAGU,OAAOvE,GAASoD,EAAoBS,EAAE7D,GAAK8D,EAASM,MAC9IN,EAASU,OAAOJ,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASY,OAAOta,IAAK,GACrB,IAAIzG,EAAIsgB,SACEhG,IAANta,IAAiBkH,EAASlH,EAC/B,CACD,CACA,OAAOkH,CAnBP,CAJCqZ,EAAWA,GAAY,EACvB,IAAI,IAAI9Z,EAAI0Z,EAASvZ,OAAQH,EAAI,GAAK0Z,EAAS1Z,EAAI,GAAG,GAAK8Z,EAAU9Z,IAAK0Z,EAAS1Z,GAAK0Z,EAAS1Z,EAAI,GACrG0Z,EAAS1Z,GAAK,CAAC4Z,EAAUC,EAAIC,EAqBjB,C,KCzBdZ,EAAoBqB,EAAKjB,IACxB,IAAIkB,EAASlB,GAAUA,EAAOmB,WAC7B,IAAOnB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBhnB,EAAEsoB,EAAQ,CAAEE,EAAGF,IAC5BA,CAAM,E,MCNd,IACIG,EADAC,EAAWT,OAAOU,eAAkBC,GAASX,OAAOU,eAAeC,GAASA,GAASA,EAAa,UAQtG5B,EAAoB6B,EAAI,SAAS7jB,EAAO8jB,GAEvC,GADU,EAAPA,IAAU9jB,EAAQ+jB,KAAK/jB,IAChB,EAAP8jB,EAAU,OAAO9jB,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP8jB,GAAa9jB,EAAMujB,WAAY,OAAOvjB,EAC1C,GAAW,GAAP8jB,GAAoC,oBAAf9jB,EAAM6F,KAAqB,OAAO7F,CAC5D,CACA,IAAIgkB,EAAKf,OAAOgB,OAAO,MACvBjC,EAAoB3f,EAAE2hB,GACtB,IAAIE,EAAM,CAAC,EACXT,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIhO,EAAiB,EAAPoO,GAAY9jB,EAAyB,iBAAX0V,KAAyB+N,EAAeU,QAAQzO,GAAUA,EAAUgO,EAAShO,GACxHuN,OAAOmB,oBAAoB1O,GAAS2O,SAASzF,GAASsF,EAAItF,GAAO,IAAO5e,EAAM4e,KAI/E,OAFAsF,EAAa,QAAI,IAAM,EACvBlC,EAAoBhnB,EAAEgpB,EAAIE,GACnBF,CACR,C,KCxBAhC,EAAoBhnB,EAAI,CAACmnB,EAASmC,KACjC,IAAI,IAAI1F,KAAO0F,EACXtC,EAAoBuC,EAAED,EAAY1F,KAASoD,EAAoBuC,EAAEpC,EAASvD,IAC5EqE,OAAOuB,eAAerC,EAASvD,EAAK,CAAE6F,YAAY,EAAMC,IAAKJ,EAAW1F,IAE1E,ECNDoD,EAAoB2C,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOb,MAAQ,IAAIc,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAX9nB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBglB,EAAoBuC,EAAI,CAACX,EAAKmB,IAAU9B,OAAO+B,UAAUC,eAAe3C,KAAKsB,EAAKmB,GCClF/C,EAAoB3f,EAAK8f,IACH,qBAAX+C,QAA0BA,OAAOC,aAC1ClC,OAAOuB,eAAerC,EAAS+C,OAAOC,YAAa,CAAEnlB,MAAO,WAE7DijB,OAAOuB,eAAerC,EAAS,aAAc,CAAEniB,OAAO,GAAO,ECL9DgiB,EAAoBoD,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNrD,EAAoBS,EAAEO,EAAKsC,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BlhB,KACvD,IAGI2d,EAAUqD,GAHT5C,EAAU+C,EAAaC,GAAWphB,EAGhBwE,EAAI,EAC3B,GAAG4Z,EAASlG,MAAMvX,GAAgC,IAAxBogB,EAAgBpgB,KAAa,CACtD,IAAIgd,KAAYwD,EACZzD,EAAoBuC,EAAEkB,EAAaxD,KACrCD,EAAoBO,EAAEN,GAAYwD,EAAYxD,IAGhD,GAAGyD,EAAS,IAAInc,EAASmc,EAAQ1D,EAClC,CAEA,IADGwD,GAA4BA,EAA2BlhB,GACrDwE,EAAI4Z,EAASzZ,OAAQH,IACzBwc,EAAU5C,EAAS5Z,GAChBkZ,EAAoBuC,EAAEc,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOtD,EAAoBS,EAAElZ,EAAO,EAGjCoc,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBtB,QAAQkB,EAAqBM,KAAK,KAAM,IAC3DF,EAAmB5c,KAAOwc,EAAqBM,KAAK,KAAMF,EAAmB5c,KAAK8c,KAAKF,G,KC7CvF,IAAIG,EAAsB9D,EAAoBS,OAAE9F,EAAW,CAAC,MAAM,IAAOqF,EAAoB,QAC7F8D,EAAsB9D,EAAoBS,EAAEqD,E","sources":["assets/icons/logoSvg.js","components/buttons/headerButton.js","components/buttons/headerButton.module.js","screens/styles/greetingsScreen.module.js","context/ImageContext.js","context/AuthContext.js","screens/GreetingsScreen.js","assets/icons/createSvg.js","assets/icons/searchSvg.js","assets/icons/crossSvg.js","assets/icons/plusSvg.js","components/Avatar/ShowAvatar/showAvatar.js","components/Avatar/ShowAvatar/showAvatar.module.js","assets/icons/deleteSvg.js","components/searchBodies/searchBody.js","components/searchBodies/searchBodies.module.js","components/inputs/searchInput/searchInput.js","components/inputs/searchInput/searchInput.modules.js","screens/MainUnauthScreen.js","components/inputs/textInput/textInput.js","components/inputs/textInput/textInput.module.js","screens/AuthScreen.js","screens/RegScreen.js","screens/ForgotScreen.js","assets/icons/headerLogoSvg.js","screens/styles/mainAuthScreen.module.js","components/buttons/borderButton.js","components/buttons/borderButton.module.js","components/forwardMessage/forwardMessage.js","components/forwardMessage/forwardMessage.module.js","context/MessageContext.js","context/AsyncStorageUtil.js","screens/MainAuthScreen.js","assets/icons/cameraSvg.js","components/ImageViewer/ImageViewer.js","components/ImageViewer/ImageViewer.module.js","components/Avatar/ChangeAvatar/changeAvatar.js","components/Avatar/ChangeAvatar/changeAvatar.module.js","assets/icons/backSvg.js","assets/icons/addSvg.js","components/inputs/nicknameInput/nicknameInput.js","components/inputs/nicknameInput/nicknameInput.module.js","screens/ProfileScreen.js","screens/ChangeEmailScreen.js","screens/ChangePasswordScreen.js","assets/icons/forwardSvg.js","assets/icons/forwardFocusSvg.js","components/messageBody/messageBody.js","components/messageBody/messageBody.module.js","assets/icons/sendSvg.js","components/inputs/messageInput/messageInput.js","components/inputs/messageInput/messageInput.module.js","screens/ChatScreen.js","assets/icons/settingsSvg.js","screens/ChannelScreen.js","assets/icons/changeSvg.js","assets/icons/adminSvg.js","assets/icons/adminFocusSvg.js","components/settingsBody/settingsBody.js","components/settingsBody/settingsBody.module.js","screens/SettingsScreen.js","screens/ChannelUnauthScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst LogoSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={588}\r\n    height={285}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#000\"\r\n      d=\"M92.94 177V87.4h12.8v78.464h48.512V177H92.94Zm74.208 0v-67.84h12.288V177h-12.288Zm6.144-80.896c-2.389 0-4.395-.768-6.016-2.304-1.536-1.536-2.304-3.413-2.304-5.632 0-2.304.768-4.224 2.304-5.76 1.621-1.536 3.627-2.304 6.016-2.304 2.389 0 4.352.768 5.888 2.304 1.621 1.45 2.432 3.285 2.432 5.504 0 2.304-.768 4.267-2.304 5.888-1.536 1.536-3.541 2.304-6.016 2.304Zm65.83 12.416c5.547 0 10.411 1.067 14.592 3.2 4.267 2.133 7.595 5.376 9.984 9.728 2.389 4.352 3.584 9.856 3.584 16.512V177h-12.288v-37.632c0-6.571-1.621-11.52-4.864-14.848-3.157-3.328-7.637-4.992-13.44-4.992-4.352 0-8.149.853-11.392 2.56-3.243 1.707-5.76 4.224-7.552 7.552-1.707 3.328-2.56 7.467-2.56 12.416V177h-12.288v-67.84h11.776v18.304l-1.92-4.864c2.219-4.437 5.632-7.893 10.24-10.368 4.608-2.475 9.984-3.712 16.128-3.712Zm60.885 52.096.256-15.744 39.04-35.712h14.848l-29.952 29.44-6.656 5.632-17.536 16.384ZM290.023 177V82.024h12.288V177h-12.288Zm51.84 0-26.624-33.024 7.936-9.856L356.967 177h-15.104Zm27.035 0v-67.84h12.288V177h-12.288Zm6.144-80.896c-2.389 0-4.395-.768-6.016-2.304-1.536-1.536-2.304-3.413-2.304-5.632 0-2.304.768-4.224 2.304-5.76 1.621-1.536 3.627-2.304 6.016-2.304 2.389 0 4.352.768 5.888 2.304 1.621 1.45 2.432 3.285 2.432 5.504 0 2.304-.768 4.267-2.304 5.888-1.536 1.536-3.541 2.304-6.016 2.304Zm65.83 12.416c5.547 0 10.411 1.067 14.592 3.2 4.267 2.133 7.595 5.376 9.984 9.728 2.389 4.352 3.584 9.856 3.584 16.512V177h-12.288v-37.632c0-6.571-1.621-11.52-4.864-14.848-3.157-3.328-7.637-4.992-13.44-4.992-4.352 0-8.149.853-11.392 2.56-3.243 1.707-5.76 4.224-7.552 7.552-1.707 3.328-2.56 7.467-2.56 12.416V177h-12.288v-67.84h11.776v18.304l-1.92-4.864c2.219-4.437 5.632-7.893 10.24-10.368 4.608-2.475 9.984-3.712 16.128-3.712Zm80.597 94.08a62.083 62.083 0 0 1-18.176-2.688c-5.803-1.707-10.539-4.181-14.208-7.424l5.888-9.472c3.157 2.731 7.04 4.864 11.648 6.4 4.608 1.621 9.429 2.432 14.464 2.432 8.021 0 13.909-1.877 17.664-5.632 3.755-3.755 5.632-9.472 5.632-17.152v-14.336l1.28-13.44-.64-13.568v-18.56h11.648v58.624c0 11.947-2.987 20.736-8.96 26.368-5.973 5.632-14.72 8.448-26.24 8.448Zm-1.536-28.416c-6.571 0-12.459-1.365-17.664-4.096-5.12-2.816-9.216-6.699-12.288-11.648-2.987-4.949-4.48-10.667-4.48-17.152 0-6.571 1.493-12.288 4.48-17.152 3.072-4.949 7.168-8.789 12.288-11.52 5.205-2.731 11.093-4.096 17.664-4.096 5.803 0 11.093 1.195 15.872 3.584 4.779 2.304 8.576 5.888 11.392 10.752 2.901 4.864 4.352 11.008 4.352 18.432 0 7.339-1.451 13.44-4.352 18.304-2.816 4.864-6.613 8.533-11.392 11.008-4.779 2.389-10.069 3.584-15.872 3.584Zm1.408-10.752c4.523 0 8.533-.939 12.032-2.816 3.499-1.877 6.229-4.48 8.192-7.808 2.048-3.328 3.072-7.168 3.072-11.52 0-4.352-1.024-8.192-3.072-11.52-1.963-3.328-4.693-5.888-8.192-7.68-3.499-1.877-7.509-2.816-12.032-2.816s-8.576.939-12.16 2.816c-3.499 1.792-6.272 4.352-8.32 7.68-1.963 3.328-2.944 7.168-2.944 11.52 0 4.352.981 8.192 2.944 11.52 2.048 3.328 4.821 5.931 8.32 7.808 3.584 1.877 7.637 2.816 12.16 2.816Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M228.523 201.561a5 5 0 0 1 1.447-7.4l11.54-6.661a5 5 0 0 1 6.83 1.83l50.17 86.906a4.732 4.732 0 0 1-7.834 5.27l-62.153-79.945Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M228.523 201.561a5 5 0 0 1 1.447-7.4l11.54-6.661a5 5 0 0 1 6.83 1.83l50.17 86.906a4.732 4.732 0 0 1-7.834 5.27l-62.153-79.945Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M256.664 213.001A139 139 0 0 1 .512 150.914 138.998 138.998 0 0 1 168.54 3.175a139.003 139.003 0 0 1 73.756 42.814l-24.723 22.262A105.735 105.735 0 0 0 96.909 42.008 105.731 105.731 0 1 0 228.502 195.29l28.162 17.711Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M256.664 213.001A139 139 0 0 1 .512 150.914 138.998 138.998 0 0 1 168.54 3.175a139.003 139.003 0 0 1 73.756 42.814l-24.723 22.262A105.735 105.735 0 0 0 96.909 42.008 105.731 105.731 0 1 0 228.502 195.29l28.162 17.711Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default LogoSvg\r\n","import { View } from \"react-native-web\";\r\nimport useStyles from \"./headerButton.module\";\r\n\r\nimport { Text, TouchableHighlight} from 'react-native-web';\r\n\r\n\r\nexport default function HeaderButton({title, onPress, disabled}) {\r\n  const styles = useStyles(disabled);\r\n \r\n  return (\r\n    <TouchableHighlight style={styles.button} onPress={onPress} disabled={disabled}>\r\n      \r\n        <Text style={styles.buttonText}>{title}</Text>\r\n      \r\n    </TouchableHighlight>\r\n  );\r\n} ","import { StyleSheet, Dimensions } from 'react-native';\r\n\r\nexport default function useStyles(disabled) {\r\n  const { width } = Dimensions.get('window');\r\n  const buttonWidth = width * 0.1;\r\n\r\n  const buttonColor = disabled ? 'rgba(0, 0, 0, 0.35)' : 'rgba(0, 118, 185, 0.35)';\r\n\r\n  return StyleSheet.create({\r\n    button: {\r\n      backgroundColor: buttonColor,\r\n      borderRadius: 14,\r\n      minWidth: buttonWidth,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      alignSelf: 'right',\r\n      marginVertical: 10,\r\n      marginRight: 20,\r\n    },\r\n    buttonText: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: 24,\r\n      textAlign: 'center',\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native-web';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function useStyles() {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n      setWindowHeight(window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFFFFF',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    headerButton: {\r\n      marginTop: 30,\r\n    },\r\n    containerMain: {\r\n      flex: 1,\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    bottomLeft: {\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n    },\r\n    topLeft: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 20,\r\n    },\r\n    textContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 30,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      alignSelf: 'auto',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    messageContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      width: '40%',\r\n      height: '40%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    text: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: 24,\r\n      textAlign: 'center',\r\n    },\r\n    inputContainer: {\r\n      width: '80%',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      paddingTop: 20,\r\n    },\r\n    // You can add more styles as needed\r\n  });\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ImageContext = createContext();\r\n\r\nexport const ImageProvider = ({ children }) => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedImage = localStorage.getItem('selectedImage');\r\n    if (storedImage) {\r\n      setSelectedImage(JSON.parse(storedImage));\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const updateSelectedImage = (image) => {\r\n    setSelectedImage(image);\r\n    localStorage.setItem('selectedImage', JSON.stringify(image));\r\n  };\r\n\r\n  return (\r\n    <ImageContext.Provider value={{ selectedImage, updateSelectedImage }}>\r\n      {children}\r\n    </ImageContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useEffect, useState, useContext } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from './ImageContext';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const { updateSelectedImage } = useContext(ImageContext);\r\n\r\n  useEffect(() => {\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      const isLoggedInValue = await AsyncStorage.getItem('isLoggedIn');\r\n      const userData = await AsyncStorage.getItem('user');\r\n      if (isLoggedInValue === 'true' && userData) {\r\n        setIsLoggedIn(true);\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during checkLoginStatus:', error);\r\n    }\r\n  };\r\n\r\n  const login = async (userData) => {\r\n    setIsLoggedIn(true);\r\n    setUser(userData);\r\n    try {\r\n      await AsyncStorage.clear(); // Clear existing data before setting new data\r\n      await AsyncStorage.setItem('isLoggedIn', 'true');\r\n      await AsyncStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    updateSelectedImage(null); // Clear the selected image\r\n    try {\r\n      await AsyncStorage.removeItem('isLoggedIn');\r\n      await AsyncStorage.removeItem('user');\r\n      navigation.navigate(\"Auth\"); // Assuming you have a navigation object available\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n  };\r\n\r\n  const authContextValue = {\r\n    isLoggedIn,\r\n    user,\r\n    login,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { View} from 'react-native-web';\r\nimport LogoSvg from '../assets/icons/logoSvg';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport React, { useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction GreetingsScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  if (isLoggedIn) {\r\n    navigation.navigate('MainAuth');\r\n    return null;\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <LogoSvg />\r\n      <View style={styles.headerButton}>\r\n        <HeaderButton\r\n          title={\"Начать\"}\r\n          onPress={() => navigation.navigate('MainUnauth')}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GreetingsScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Circle, Path } from \"react-native-svg\"\r\nconst CreateSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={72}\r\n    height={72}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={36} cy={36} r={36} fill=\"#0076B9\" />\r\n    <Circle cx={36} cy={36} r={36} fill=\"#000\" fillOpacity={0.2} />\r\n    <Path\r\n      fill=\"#fff\"\r\n      d=\"M15 55.444v-8.5l24.5-23 8.5 8-24.5 23.5H15ZM52 27.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n    <Path\r\n      stroke=\"#fff\"\r\n      strokeWidth={1.9}\r\n      d=\"M15 55.444v-8.5l24.5-23 8.5 8-24.5 23.5H15ZM52 27.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default CreateSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst SearchSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={32}\r\n    height={32}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#7C858E\"\r\n      d=\"M25.253 23.026 32 29.77 29.771 32l-6.745-6.747a14.114 14.114 0 0 1-8.849 3.102C6.351 28.355 0 22.003 0 14.177 0 6.351 6.351 0 14.177 0s14.178 6.351 14.178 14.177a14.114 14.114 0 0 1-3.102 8.849Zm-3.16-1.17a10.99 10.99 0 0 0 3.111-7.679c0-6.093-4.935-11.026-11.027-11.026-6.093 0-11.026 4.933-11.026 11.026 0 6.092 4.933 11.027 11.026 11.027a10.99 10.99 0 0 0 7.68-3.11l.236-.237Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default SearchSvg \r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst CrossSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={33}\r\n    height={33}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={1.9}\r\n      d=\"m1 1 31 31M1 1v31M1 1h31m0 31H1m31 0V1M1 32 32 1\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default CrossSvg\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst PlusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={37}\r\n    height={37}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#fff\"\r\n      d=\"M35.303 14.924v6.032H.704v-6.032h34.599ZM21.228.19v36.748h-6.414V.19h6.413Z\"\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default PlusSvg;\r\n","import { useEffect, useState } from 'react';\r\nimport React, { useContext } from 'react';\r\nimport { View, Image } from 'react-native-web';\r\nimport useStyles from './showAvatar.module';\r\nimport { Text } from 'react-native';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\n\r\nexport default function ShowAvatar({ imageUrl, profile, }) {\r\n  const styles = useStyles({ profile });\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user } = useContext(AuthContext); // Use `useContext` instead of `useState`\r\n\r\n  const renderAvatar = () => {\r\n    if (imageUrl && imageUrl.startsWith('data:image')) {\r\n      return <Image style={styles.image} source={{ uri: imageUrl }} />;\r\n    } else if (imageUrl) {\r\n      return <Image style={styles.image} source={{ uri: `data:image/jpeg;base64,${imageUrl}` }} />;\r\n    } else if (user.image) {\r\n      const base64Image = `data:image/jpeg;base64,${user.image}`;\r\n      return <Image style={styles.image} source={{ uri: base64Image }} />;\r\n    } else {\r\n      return (\r\n        <View style={styles.nonePhoto}>\r\n          <PlusSvg style={{ transform: [{ scale: 0.5 }] }} />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n      {renderAvatar()}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles(props) {\r\n    const { width, height } = useWindowDimensions();\r\n    const { profile } = props;\r\n    \r\n    const containerWidth = profile ? 90 : 40;\r\n    const imageWidth = profile ? containerWidth : 40;\r\n    const imageHeight = profile ? containerWidth : 40;\r\n    const nonePhotoWidth = profile ? containerWidth : 90;\r\n    const nonePhotoHeight = profile ? containerWidth : 90;\r\n  \r\n    return StyleSheet.create({\r\n      container: {\r\n        flexDirection: \"row\",\r\n      },\r\n      image: {\r\n        width: imageWidth,\r\n        height: imageHeight,\r\n        borderRadius: 100,\r\n      },\r\n      round: {\r\n        padding: 5,\r\n        borderRadius: 100,\r\n        marginRight: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#0076B9',\r\n      },\r\n      nonePhoto: {\r\n        height: nonePhotoHeight,\r\n        width: nonePhotoWidth,\r\n        backgroundColor: \"#D9D9D9\",\r\n        borderRadius: 100, \r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      info: {\r\n        marginTop: 10,\r\n        flexDirection: \"column\",\r\n      },\r\n      nickname: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 5,\r\n        marginTop: 4\r\n      },\r\n      dateOfBirth: {\r\n        fontSize: 14,\r\n        color: \"#999999\",\r\n      },\r\n    });\r\n  }\r\n  ","import * as React from \"react\"\r\nimport Svg, { Circle, Path } from \"react-native-svg\"\r\nconst DeleteSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={62}\r\n    height={63}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={31} cy={31.445} r={30} stroke=\"#000\" strokeWidth={2} />\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={2}\r\n      d=\"m16.5 16.944 28.5 28.5m-28.5 0 28.5-28.5\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default DeleteSvg\r\n","import React from \"react\";\r\nimport { View, StyleSheet, Text, TouchableHighlight, Image } from \"react-native-web\";\r\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport useStyles from \"./searchBodies.module\";\r\n\r\nexport default function SearchBody({ data }) {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const { avatarUrl, username, channelName, onPress, containerStyle, main, id} = data;\r\n  const name = 'admin';\r\n  const password = 'root';\r\n  const styles = useStyles();\r\n  const deleteChat = () => {\r\n    \r\n    fetch(`https://messengerproject-production.up.railway.app/api/chats/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${name}:${password}`)}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        // Handle the response\r\n        if (response.ok) {\r\n          // Chat deleted successfully\r\n          alert(\"Chat deleted successfully\");\r\n          window.location.reload();\r\n        } else {\r\n          // Error deleting chat\r\n          console.log(\"Failed to delete chat\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error deleting chat:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TouchableHighlight\r\n      style={[styles.container, containerStyle, isHovered && { backgroundColor: \"#E7DEDE\" }]}\r\n      onPress={onPress}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <View style={styles.rowContainer}>\r\n        {avatarUrl && (\r\n          <View style={styles.avatarContainer}>\r\n            <ShowAvatar imageUrl={avatarUrl} />\r\n            <Text style={styles.username}>{username}</Text>\r\n          </View>\r\n        )}\r\n        {!avatarUrl && <Text style={styles.channelName}>{username}</Text>}\r\n        {main && (\r\n          <View style={[styles.deleteContainer, { transform: [{ scale: 0.5 }] }]}>\r\n            <TouchableHighlight onPress={deleteChat}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          backgroundColor: \"#FFFFFF\",\r\n          borderRadius: 26,\r\n          paddingVertical: 12,\r\n          paddingHorizontal: 16,\r\n        },\r\n        rowContainer: {\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        },\r\n        avatarContainer: {\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n        },\r\n        username: {\r\n          fontFamily: \"Montserrat-Regular\",\r\n          fontSize: 24,\r\n          fontWeight: \"bold\",\r\n          marginLeft: 8,\r\n        },\r\n        channelName: {\r\n          fontFamily: \"Montserrat-Regular\",\r\n          fontSize: 24,\r\n          fontWeight: \"bold\",\r\n        },\r\n        deleteContainer: {\r\n          marginLeft: \"auto\",\r\n        },\r\n      });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, TouchableOpacity, ScrollView } from \"react-native-web\";\r\nimport useStyles from \"./searchInput.modules\";\r\nimport SearchSvg from \"../../../assets/icons/searchSvg\";\r\nimport CrossSvg from \"../../../assets/icons/crossSvg\";\r\nimport SearchBody from \"../../searchBodies/searchBody\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function SearchInput({ value, setValue, navigation, unauth, ...data }) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n\r\n  const navigationt = useNavigation();\r\n\r\n  const handlePress = (channelId) => {\r\n    navigationt.navigate('Channel', { channelId });\r\n  };\r\n\r\n  const handlePressChat = (chatUser) => {\r\n    navigationt.navigate('Chat', { chatUser});\r\n  };\r\n\r\n  const handlePressUnauth = (channelId) => {\r\n    navigationt.navigate('ChannelUnauth', { channelId });\r\n  };\r\n\r\n  const styles = useStyles();\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    setIsDropdownVisible(true);\r\n  };\r\n\r\n  \r\n  const handleCrossSvgPress = () => {\r\n    setValue(\"\");\r\n    setIsFocused(false);\r\n    setIsDropdownVisible(false);\r\n  };\r\n\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [results, setResults] = useState([]);\r\n  const [resultsUnauth, setResultsUnauth] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch channel data\r\n        const channelResponse = await fetch('https://messengerproject-production.up.railway.app/api/channels', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n  \r\n        if (channelResponse.ok) {\r\n          const channelData = await channelResponse.json();\r\n          const formattedResults = [];\r\n          const unauthResults = [];\r\n  \r\n          for (let i = 0; i < channelData.length; i++) {\r\n            const channel = channelData[i];\r\n  \r\n            // Add channel object to the formattedResults array\r\n            formattedResults.push({\r\n              name: channel.name,\r\n              onPress: () => handlePress(channel.id),\r\n              avatarUrl: null\r\n            });\r\n  \r\n            // Add channel object to the unauthResults array\r\n            unauthResults.push({\r\n              name: channel.name,\r\n              onPress: () => handlePressUnauth(channel.id),\r\n              avatarUrl: null\r\n            });\r\n          }\r\n  \r\n          // Fetch user data\r\n          const userResponse = await fetch('https://messengerproject-production.up.railway.app/api/users', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n          });\r\n  \r\n          if (userResponse.ok) {\r\n            const userData = await userResponse.json();\r\n  \r\n            // Merge user data into formattedResults array\r\n            for (let i = 0; i < userData.length; i++) {\r\n              const user = userData[i];\r\n  \r\n              formattedResults.push({\r\n                name: user.name,\r\n                onPress: () => handlePressChat(user),\r\n                avatarUrl: user.image,\r\n              });\r\n            }\r\n          } else {\r\n            console.log('Failed to fetch user data');\r\n          }\r\n  \r\n          setResults(formattedResults);\r\n          setResultsUnauth(unauthResults);\r\n        } else {\r\n          console.log('Failed to fetch channel data');\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching data:', error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n  \r\n  const filteredResults = value\r\n    ? (unauth ? resultsUnauth : results).filter((result) =>\r\n        result.name.toLowerCase().includes(value.toLowerCase())\r\n      )\r\n    : (unauth ? resultsUnauth : results);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.icon}>\r\n        <SearchSvg />\r\n      </View>\r\n      <TextInput\r\n        {...data}\r\n        placeholderTextColor=\"#7C858E\"\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 36 }]}\r\n        onFocus={handleFocus}\r\n       \r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n      {isFocused && (\r\n        <TouchableOpacity onPressIn={handleCrossSvgPress}>\r\n          <CrossSvg style={styles.dismissIcon}  />\r\n        </TouchableOpacity>\r\n      )}\r\n      {isDropdownVisible && (\r\n        <ScrollView style={styles.dropdown}>\r\n          {filteredResults.map((result, index) => (\r\n            <SearchBody\r\n              key={index}\r\n              data={{\r\n                avatarUrl: result.avatarUrl,\r\n                username: result.name,\r\n                onPress: result.onPress,\r\n              }}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n}","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      zIndex: 0\r\n    },\r\n    icon: {\r\n      position: \"absolute\",\r\n      left: 10,\r\n      zIndex: 1,\r\n      \r\n    },\r\n    dismissIcon: {\r\n      position: \"absolute\",\r\n      right: 10,\r\n      top: \"50%\",\r\n      transform: [{ translateY: -17 }],\r\n      zIndex: 2,\r\n    },\r\n    dropdown: {\r\n      position: \"absolute\",\r\n      top: 50,\r\n      left: 0,\r\n      right: 0,\r\n      flex: 1,\r\n      maxHeight: 300, // Set the maximum height of the dropdown\r\n      overflowY: \"auto\", // Enable vertical scrolling when content exceeds the height\r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      zIndex: 1,\r\n      padding: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      fontFamily: 'Montserrat-Regular',\r\n      height: 44,\r\n      width: 600,\r\n      fontSize: 20,                 // Increase the font size\r\n      paddingLeft: 10,\r\n      paddingRight: 10,             // Add paddingRight to move the text more to the right\r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\"\r\n    },\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { View, Text, TouchableHighlight } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\n\r\nexport default function MainUnauthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n   \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <Text style={styles.text}>Зарегистрируйтесь, чтобы начать общаться</Text>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}","import { View, TextInput } from \"react-native-web\";\r\nimport useStyles from \"./textInput.module\";\r\n\r\nexport default function DataInput({ value, setValue, type, flex, ...data }) {\r\n  const styles = useStyles();\r\n\r\n  let inputMask;\r\n  switch (type) {\r\n    case \"password\":\r\n      inputMask = {\r\n        secureTextEntry: true,\r\n        autoCompleteType: \"password\",\r\n        maxLength: 26,\r\n      };\r\n      break;\r\n    case \"nickname\":\r\n      inputMask = {\r\n        maxLength: 10,\r\n      };\r\n      break;\r\n    case \"email\":\r\n      inputMask = {\r\n        autoCompleteType: \"email\",\r\n        keyboardType: \"email-address\",\r\n        maxLength: 55,\r\n      };\r\n      break;\r\n    case \"code\":\r\n      inputMask = {\r\n        keyboardType: \"number-pad\",\r\n        maxLength: 4,\r\n      };\r\n      break;\r\n    default:\r\n      inputMask = {};\r\n  }\r\n\r\n  const inputWidth = flex ? \"90%\" : 600;\r\n  const inputHeight = flex ? 44 : 44;\r\n\r\n  return (\r\n    <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n      <TextInput\r\n        {...data}\r\n        {...inputMask}\r\n        placeholderTextColor={\"#7C858E\"}\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 21 }]}\r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      fontFamily: 'Montserrat-Regular',\r\n      height: 44,\r\n      fontSize: 16,\r\n      paddingLeft: 40,\r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      width: \"80%\", // Add this line to set input width to 80%\r\n    },\r\n  });\r\n}\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport { View, Text, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction AuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    password: '',\r\n    email: ''\r\n  });\r\n  const isFormValid = inputText.email && inputText.password;\r\n\r\n  const { login } = useContext(AuthContext);\r\n\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const handleLogin = () => {\r\n    // Validate the email format\r\n\r\n    // Create the request body\r\n    const requestBody = {\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n\r\n    // Send the API request\r\n    fetch('https://messengerproject-production.up.railway.app/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        // Handle the response\r\n        if (response.ok) {\r\n          // Login successful\r\n          // Assuming the response contains user data or token, you can pass it to the login function\r\n          response.json().then(data => {\r\n            login(data); // Pass the user data or token to the login function from AuthContext\r\n          });\r\n        } else {\r\n          // Login failed\r\n          response.json().then(errorData => {\r\n            const errorMessage = errorData.message || 'Login failed';\r\n            alert(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={{ marginTop: 13, marginRight: 13 }}>\r\n          <TouchableHighlight onPress={() => navigation.navigate('Forgot')}>\r\n            <Text style = {{fontFamily: 'Montserrat-Regular'}}>Забыли пароль?</Text>\r\n          </TouchableHighlight>\r\n          <View style={{\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: 'black',\r\n              width: '100%',\r\n            }} />\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Войти\"\r\n            onPress={handleLogin}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={() => navigation.navigate('Reg')}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AuthScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction RegScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const isFormValid = inputText.name && inputText.password && inputText.email;\r\n\r\n  const handleRegistration = () => {\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Invalid email format');\r\n      return;\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)) {\r\n      alert('Invalid password: at least 8 characters long, should contain at least one uppercase letter, at least one lowercase letter,at least one digit, may contain special characters');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      name: inputText.name,\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n\r\n    fetch('https://messengerproject-production.up.railway.app/api/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          navigation.navigate('Auth');\r\n        } else {\r\n          console.error('Registration failed');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.name}\r\n              setValue={text => setInputText({ ...inputText, name: text })}\r\n              placeholder=\"Никнейм\"\r\n              type=\"nickname\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={handleRegistration}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default RegScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction ForgotScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    email: '',\r\n    confirmPassword: '',\r\n    code: ''\r\n  });\r\n\r\n  \r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n \r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.email ||\r\n      !inputText.confirmPassword ||\r\n      !inputText.code ||\r\n      inputText.newPassword !== inputText.confirmPassword || inputText.code != receivedCode\r\n    );\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Invalid email format');\r\n      return;\r\n    }\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://messengerproject-production.up.railway.app/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Code has been sent to your email');\r\n        } else {\r\n          alert('Failed to get code');\r\n         \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error getting code:', error);\r\n        alert('Failed to get code');\r\n      });\r\n  };\r\n  \r\n  const getUserById = async (email) => {\r\n    try {\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/users/email?email=${email}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n      return userData;\r\n      } else {\r\n        alert('User not found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting user by email:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  const updatePassword = async (userId) => {\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        new_password: inputText.newPassword,\r\n      });\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/users/${userId}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          new_password: inputText.newPassword,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        alert('Password updated successfully');\r\n      } else {\r\n        response.json().then(errorData => {\r\n          const errorMessage = errorData.message ;\r\n         alert(errorMessage);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n    }\r\n  };\r\n  \r\n  const handleResetPassword = async () => {\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.newPassword)) {\r\n      alert('Invalid password: at least 8 characters long, should contain at least one uppercase letter, at least one lowercase letter,at least one digit, may contain special characters');\r\n      return;\r\n    }\r\n    try {\r\n    \r\n      // Step 2: Get user by email\r\n      const userId = await getUserById(inputText.email);\r\n\r\n    // Step 3: Update password\r\n    if (userId) {\r\n      await updatePassword(userId);\r\n      alert('Password updated successfully');\r\n    } else {\r\n      alert('User not found');\r\n    }\r\n  \r\n      // Step 4: Navigate to the Auth screen or show a success message\r\n      navigation.navigate('Auth');\r\n    } catch (error) {\r\n      // Handle any errors here, e.g., show an error message to the user\r\n      alert('Error resetting password:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={'Почта'}\r\n              type={'email'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder={'Новый пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder={'Подтвердить пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={'Код'}\r\n              type={'code'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton title={'Изменить пароль'} onPress={handleResetPassword} disabled={isButtonDisabled()} />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton title={'Получить код'} onPress={getCode} disabled={isDisabled()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ForgotScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst HeaderLogoSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={70}\r\n    height={70}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M54.06 50.77a2.655 2.655 0 1 1 4.468-2.846l10.958 20.058a1.117 1.117 0 0 1-1.88 1.198L54.06 50.77Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M54.06 50.77a2.655 2.655 0 1 1 4.468-2.846l10.958 20.058a1.117 1.117 0 0 1-1.88 1.198L54.06 50.77Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M59.711 52.364c-3.608 6.062-8.927 10.773-15.205 13.468a30.717 30.717 0 0 1-19.786 1.55c-6.586-1.687-12.504-5.518-16.918-10.952C3.387 50.997.7 44.235.119 37.1c-.58-7.134.974-14.282 4.445-20.432 3.472-6.15 8.683-10.993 14.9-13.844C25.681-.026 32.588-.74 39.21.781c6.622 1.521 12.624 5.203 17.158 10.525l-5.751 5.473c-3.45-4.048-8.015-6.849-13.052-8.007a23.38 23.38 0 0 0-15.02 1.555c-4.729 2.169-8.693 5.852-11.334 10.53-2.64 4.679-3.823 10.115-3.38 15.543.441 5.427 2.485 10.57 5.843 14.703 3.358 4.133 7.86 7.047 12.87 8.33a23.364 23.364 0 0 0 15.05-1.18c4.775-2.049 8.821-5.632 11.565-10.243l6.552 4.354Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M59.711 52.364c-3.608 6.062-8.927 10.773-15.205 13.468a30.717 30.717 0 0 1-19.786 1.55c-6.586-1.687-12.504-5.518-16.918-10.952C3.387 50.997.7 44.235.119 37.1c-.58-7.134.974-14.282 4.445-20.432 3.472-6.15 8.683-10.993 14.9-13.844C25.681-.026 32.588-.74 39.21.781c6.622 1.521 12.624 5.203 17.158 10.525l-5.751 5.473c-3.45-4.048-8.015-6.849-13.052-8.007a23.38 23.38 0 0 0-15.02 1.555c-4.729 2.169-8.693 5.852-11.334 10.53-2.64 4.679-3.823 10.115-3.38 15.543.441 5.427 2.485 10.57 5.843 14.703 3.358 4.133 7.86 7.047 12.87 8.33a23.364 23.364 0 0 0 15.05-1.18c4.775-2.049 8.821-5.632 11.565-10.243l6.552 4.354Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default HeaderLogoSvg ","import { StyleSheet } from 'react-native-web';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function useStyles() {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n      setWindowHeight(window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFFFFF',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    headerButton: {\r\n      marginTop: 30, // задаем отступ сверху для кнопки\r\n    },\r\n    channNameContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      top: 80,\r\n      paddingLeft: 10,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n    },\r\n    dataInputContainer: {\r\n      marginRight: 10,\r\n    },\r\n    nicknameContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginBottom: 13,\r\n    },\r\n    containerMain: {\r\n      flex: 1,\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    containerSettings: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      flexDirection: \"row\",\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n    },\r\n    bottomLeft: {\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n    },\r\n    topLeft: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 20,\r\n    },\r\n    textContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 30,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      alignSelf: 'auto',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    messageContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '30%',\r\n      height: '40%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, // set top to 20px\r\n      right: 80, // set right to 20px\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    barContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '50%',\r\n      height: '10%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, // set top to 20px\r\n      right: 80, // set right to 20px\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    barChanContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '50%',\r\n      height: '10%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40,\r\n      right: 80,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center', // align items vertically to the center\r\n    },\r\n    barText: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      fontSize: 24,\r\n      paddingLeft: 20,\r\n    },\r\n    settingsContainer: {\r\n      alignItems: 'center',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '30%',\r\n      height: '40%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      \r\n    },\r\n    sendContainer: {\r\n      width: '40%',\r\n      height: '10%',\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: 200,\r\n      marginTop: 50\r\n    },\r\n    forwardContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 25,\r\n      width: '35%',\r\n      height: '45%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      bottom: 40, // set top to 20px\r\n      right: 80, // set right to 20px\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    historyContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 15,\r\n      marginTop: 30,\r\n      width: '35%',\r\n      height: '70%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: '50%', // center vertically\r\n      right: 225, // move more to the right\r\n      transform: [{ translateY: '-50%' }], // center vertically\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    profileContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '20%',\r\n      height: '50%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, // set top to 20px\r\n      left: 80, // set right to 20px\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: 60,\r\n      paddingBottom: 60\r\n    },\r\n    profileSettingsContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '24%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 30,\r\n      alignSelf: 'stretch',\r\n      marginTop: 'auto',\r\n      marginBottom: 'auto',\r\n      left: '50%',\r\n      top: '50%',\r\n      transform: [{ translateX: '-50%' }, { translateY: '-50%' }],\r\n    },\r\n\r\n\r\n    popupContainer: {\r\n      backgroundColor: '#E7DEDE',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '50%', // set top to 50%\r\n      left: '50%', // set left to 50%\r\n      transform: [{ translateX: '-50%' }, { translateY: '-50%' }], // adjust position based on element size\r\n      width: '20%',\r\n      height: '20%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column', // add this line to make items centered in a column\r\n    },\r\n    text: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: 24,\r\n      textAlign: 'center',\r\n      marginBottom: 13\r\n    },\r\n    inputContainer: {\r\n      width: '80%',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      paddingTop: 20\r\n    },\r\n  });\r\n}","import React from 'react';\r\nimport { StyleSheet, TouchableHighlight, Text } from 'react-native-web';\r\nimport useStyles from './borderButton.module';\r\n\r\nexport default function BorderButton({ data }) {\r\n    const {onPress, text} = data;\r\n    const styles = useStyles();\r\n  return (\r\n    <TouchableHighlight\r\n      style={styles.button}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={styles.text}>{text}</Text>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        button: {\r\n          borderTopWidth: 1,\r\n          borderBottomWidth: 1,\r\n          borderColor: '#000000',\r\n          paddingHorizontal: 10,\r\n          paddingVertical: 15,\r\n          \r\n          \r\n        },\r\n        text: {\r\n          fontFamily: 'Montserrat-Regular',\r\n          fontSize: 36,\r\n          color: '#000000',\r\n          textAlign: 'center',\r\n        },\r\n      });\r\n}","import React, { useContext, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native-web';\r\nimport ShowAvatar from '../Avatar/ShowAvatar/showAvatar';\r\nimport useStyles from './forwardMessage.module';\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\nconst ForwardMessage = ({ data }) => {\r\n  const { imageUrl, nickname, message, own, from, id } = data;\r\n  const styles = useStyles();\r\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\r\n  const {user} = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const handleDeletePress = () => {\r\n   \r\n    const user_id = user.id; \r\n    const message_id = id; \r\n\r\n    fetch(`https://messengerproject-production.up.railway.app/api/saved_message/delete?user_id=${user_id}&message_id=${message_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          window.location.reload();\r\n        } else {\r\n          // Delete request failed, handle accordingly\r\n          console.log('Failed to delete message');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error deleting message:', error);\r\n      });\r\n  };\r\n\r\n  const handleMessageBoxPress = () => {\r\n    setShowDeleteButton(!showDeleteButton);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {own ? null : (\r\n        <ShowAvatar imageUrl={imageUrl} profile={false} style={styles.avatar} />\r\n      )}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.messageBox,\r\n          own && styles.ownMessageBox,\r\n        ]}\r\n        onPress={handleMessageBoxPress}\r\n      >\r\n        {showDeleteButton && (\r\n          <TouchableOpacity  onPress={handleDeletePress}>\r\n            <Text style={{ fontFamily: 'Montserrat-Italic' }}>Удалить</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        <Text style={[styles.nickname, own && styles.ownNickname]}>\r\n          {nickname}\r\n        </Text>\r\n        <Text style={[styles.message, own && styles.ownMessage]}>{message}</Text>\r\n        <Text style={{ fontFamily: 'Montserrat-Italic' }}>\r\n          Forwarded from: {from}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForwardMessage;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          flexDirection: 'row',\r\n          alignItems: 'flex-end',\r\n        },\r\n        avatar: {\r\n          alignSelf: 'flex-start',\r\n        },\r\n        messageBox: {\r\n          marginLeft: 15,\r\n          flex: 1,\r\n          backgroundColor: '#E7DEDE',\r\n          borderLeftWidth: 5,\r\n          borderLeftColor: '#0076B9',\r\n          paddingVertical: 10,\r\n          paddingHorizontal: 15,\r\n          marginBottom: 10,\r\n          maxWidth: '40%',\r\n          borderTopRightRadius: 10,\r\n          borderBottomRightRadius: 10,\r\n        },\r\n        ownMessageBox: {\r\n          backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n          borderLeftColor: '#0076B9',\r\n          borderLeftWidth: 5,\r\n          marginLeft: 15,\r\n          flex: 1,\r\n          paddingVertical: 10,\r\n          paddingHorizontal: 15,\r\n          marginBottom: 10,\r\n          maxWidth: '40%',\r\n          borderTopRightRadius: 10,\r\n          borderBottomRightRadius: 10,\r\n        },\r\n        nickname: {\r\n          fontSize: 24,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          fontWeight: 'bold',\r\n          marginBottom: 5,\r\n        },\r\n        ownNickname: {\r\n          fontSize: 24,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          fontWeight: 'bold',\r\n          marginBottom: 5,\r\n        },\r\n        message: {\r\n          fontSize: 19,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          flexWrap: 'wrap',\r\n          marginBottom: 10\r\n        },\r\n        ownMessage: {\r\n          fontSize: 19,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          flexWrap: 'wrap',\r\n          marginBottom: 10\r\n        },\r\n      });\r\n}","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const MessageContext = createContext();\r\n\r\nexport const MessageProvider = ({ children }) => {\r\n  const [forwardedMessages, setForwardedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load forwarded messages from localStorage on component mount\r\n    const storedMessages = localStorage.getItem('forwardedMessages');\r\n    if (storedMessages) {\r\n      setForwardedMessages(JSON.parse(storedMessages));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Save forwarded messages to localStorage whenever it changes\r\n    localStorage.setItem('forwardedMessages', JSON.stringify(forwardedMessages));\r\n  }, [forwardedMessages]);\r\n\r\n  const addForwardedMessage = (message) => {\r\n    setForwardedMessages((prevMessages) => [...prevMessages, message]);\r\n  };\r\n\r\n  const clearForwardedMessages = () => {\r\n    setForwardedMessages([]);\r\n  };\r\n\r\n  return (\r\n    <MessageContext.Provider value={{ forwardedMessages, addForwardedMessage, clearForwardedMessages }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport async function setProfileNickname(nickname) {\r\n  try {\r\n    await AsyncStorage.setItem('profile_nickname', nickname);\r\n  } catch (error) {\r\n    console.log('Error saving nickname:', error);\r\n  }\r\n}\r\n\r\nexport async function getProfileNickname() {\r\n  try {\r\n    const nickname = await AsyncStorage.getItem('profile_nickname');\r\n    return nickname;\r\n  } catch (error) {\r\n    console.log('Error retrieving nickname:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function setEmail(email) {\r\n  try {\r\n    await AsyncStorage.setItem('profile_email', email);\r\n  } catch (error) {\r\n    console.log('Error saving email:', error);\r\n  }\r\n}\r\n\r\nexport async function getEmail() {\r\n  try {\r\n    const email = await AsyncStorage.getItem('profile_email');\r\n    return email;\r\n  } catch (error) {\r\n    console.log('Error retrieving email:', error);\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, Image, Platform } from 'react-native-web';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { MessageContext } from '../context/MessageContext';\r\nimport DeleteSvg from '../assets/icons/deleteSvg';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\n\r\nexport default function MainAuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, updateUser, logout } = useContext(AuthContext);\r\n  const [userText, setUserText] = useState('');\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const updateUserCallback = useCallback(updatedUser => updateUser(updatedUser), [updateUser]);\r\n  const { selectedImage } = useContext(ImageContext);\r\n\r\n\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchUserData();\r\n      fetchProfileNickname();\r\n    }, [])\r\n  );\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/users/${user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        console.log(userData);\r\n        updateUserCallback(userData);\r\n      } else {\r\n        console.log('Failed to fetch user data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error retrieving profile nickname:', error);\r\n    }\r\n  };\r\n  const handleClearForwardedMessages = async () => {\r\n    try {\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/saved_message/delete_all?user_id=${user?.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(`Messages deleted successfully`);\r\n        window.location.reload();\r\n      } else {\r\n        console.log(`Failed to delete messages`);\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log('Error deleting messages:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт'\r\n    },\r\n    {\r\n      onPress: () => logout(),\r\n      text: 'Выйти'\r\n    }\r\n  ];\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://messengerproject-production.up.railway.app/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const channelResponse = await response.json();\r\n        setShowPopup(false);\r\n        // Channel creation successful\r\n        alert('Channel created');\r\n        window.location.reload();\r\n      } else {\r\n        // Handle error response\r\n        alert('Failed to create channel');\r\n      }\r\n    } catch (error) {\r\n      alert('Error creating channel:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const imageSource = user.image;\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {user.channels.map((channel) => (\r\n            <SearchBody\r\n              key={channel.id}\r\n              data={{\r\n                username: channel.name,\r\n                onPress: () => navigation.navigate('Channel', { channelId: channel.id }),\r\n              }}\r\n            />\r\n          ))}\r\n          {user.chats.map((chat) => {\r\n            if (chat.userSecond.name === user.name) {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.userFirst.image,\r\n                    username: chat.userFirst.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.userFirst }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.userSecond.image,\r\n                    username: chat.userSecond.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.userSecond }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={selectedImage} profile={true} />\r\n        <Text style={{\r\n          color: '#000000',\r\n          fontSize: 48,\r\n          textAlign: 'center',\r\n          marginBottom: 13,\r\n          fontFamily: 'Montserrat-Regular',\r\n        }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.forwardContainer}>\r\n        {user?.savedMessages?.length > 0 && (\r\n          <View style={{ right: 50, position: 'absolute', zIndex: 1 }}>\r\n            <TouchableHighlight onPress={handleClearForwardedMessages}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n\r\n          {user?.savedMessages?.map((message) => {\r\n            return (\r\n              <View style={{ marginBottom: 13 }}>\r\n                <ForwardMessage\r\n                  key={message.id}\r\n                  data={{\r\n                    imageUrl: message.sender?.image,\r\n                    nickname: message.sender?.name,\r\n\r\n                    message: message.data,\r\n\r\n                    own: message.sender?.name === user.name,\r\n                    from: message.chat\r\n                    ? message.sender?.name === user.name\r\n                      ? message.chat.userSecond.name\r\n                      : message.chat.userFirst.name\r\n                    : message.channel.name,\r\n                     id: message.id\r\n                  }}\r\n                />\r\n              </View>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={\"\"}\r\n              type={\"nickname\"}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <View>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { G, Circle, Path, Defs, ClipPath } from \"react-native-svg\"\r\nconst CameraSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={50}\r\n    height={50}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G clipPath=\"url(#a)\">\r\n      <Circle cx={25} cy={25} r={25} fill=\"#00F\" />\r\n      <Path\r\n        fill=\"#fff\"\r\n        d=\"M24.846 22.692A4.161 4.161 0 0 1 29 26.846v.004a4.154 4.154 0 1 1-7.09-2.939 3.986 3.986 0 0 1 2.876-1.22h.063-.003v.001Zm10.154-6h.055c1.002 0 1.908.414 2.554 1.081l.001.001a3.547 3.547 0 0 1 1.082 2.555v.058-.003 12.924A3.693 3.693 0 0 1 35 37H14.692A3.693 3.693 0 0 1 11 33.308V20.33c0-1.002.414-1.908 1.081-2.554l.001-.001a3.547 3.547 0 0 1 2.555-1.082h.058-.003 3.23l.735-1.962c.212-.507.557-.922.993-1.213l.01-.006A2.55 2.55 0 0 1 21.15 13h7.387c.542.01 1.067.19 1.499.517l-.006-.005c.445.297.791.712.996 1.201l.007.018.735 1.962L35 16.692ZM24.846 33.308l.091.001a6.206 6.206 0 0 0 4.472-1.896l.002-.002a6.205 6.205 0 0 0 1.897-4.474l-.001-.096v.005l.001-.092a6.206 6.206 0 0 0-1.896-4.472l-.002-.002a6.421 6.421 0 0 0-4.565-1.897 6.424 6.424 0 0 0-4.565 1.896 6.206 6.206 0 0 0-1.896 4.57v-.005l-.001.094c0 1.755.726 3.34 1.894 4.471l.002.002a6.205 6.205 0 0 0 4.474 1.897l.097-.001h-.005l.001.001Z\"\r\n      />\r\n    </G>\r\n    <Defs>\r\n      <ClipPath id=\"a\">\r\n        <Path fill=\"#fff\" d=\"M0 0h50v50H0z\" />\r\n      </ClipPath>\r\n    </Defs>\r\n  </Svg>\r\n)\r\nexport default CameraSvg;","import { Image } from 'expo-image';\r\nimport useStyles from './ImageViewer.module';\r\n\r\nexport default function ImageViewer({ placeholderImageSource, selectedImage, isAvatar }) {\r\n    const styles = useStyles();\r\n    const imageSource = selectedImage !== null\r\n      ? { uri: selectedImage }\r\n      : placeholderImageSource;\r\n  \r\n    return <Image source={imageSource} style={isAvatar && styles.Avatarimage} />;\r\n}","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        Avatarimage: { \r\n            width: 139,\r\n            height: 139,\r\n            borderRadius: 100,\r\n        },\r\n    });\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport React, { useContext } from 'react';\r\nimport { View } from \"react-native-web\";\r\nimport useStyles from \"./changeAvatar.module\";\r\nimport { TouchableOpacity, Text } from 'react-native-web';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport CameraSvg from '../../../assets/icons/cameraSvg';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport ImageViewer from '../../ImageViewer/ImageViewer';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ChangeAvatar({ children, ...data }) {\r\n  const { updateSelectedImage } = useContext(ImageContext);\r\n  const styles = useStyles();\r\n  const [permission, setRequestPermission] = useState(null);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const cameraStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      setRequestPermission(cameraStatus.status === 'granted');\r\n    })();\r\n  });\r\n\r\n  const pickImageAsync = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      quality: 1,\r\n    });\r\n  \r\n    if (!result.canceled) {\r\n      \r\n           // Update the selected image in the context\r\n          uploadImage(result);\r\n        \r\n      \r\n    } else {\r\n      // Keep the current image\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (imageAsset) => {\r\n    const formData = new FormData();\r\n  \r\n    // Convert image URI to Blob\r\n    const response = await fetch(imageAsset.uri);\r\n    const blob = await response.blob();\r\n  \r\n    formData.append('file', blob, 'file.jpg');\r\n  \r\n    const userId = user?.id;\r\n    const apiUrl = `https://messengerproject-production.up.railway.app/api/users/${userId}/update/image`;\r\n  \r\n    try {\r\n      const response = await axios.put(apiUrl, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.status === 200 || response.status === 201) {\r\n        console.log('Image uploaded successfully');\r\n        setSelectedImage(imageAsset.uri);\r\n        updateSelectedImage(imageAsset.uri);\r\n      } \r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        alert('Error: ' + error.response.data.message);\r\n      } \r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const openCamera = async () => {\r\n    const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"You've refused to allow this app to access your camera!\");\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchCameraAsync();\r\n\r\n    if (!result.canceled) {\r\n      setSelectedImage(result.assets[0].uri);\r\n      uploadImage(result.assets[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n        <TouchableOpacity onPress={pickImageAsync}>\r\n          {!selectedImage && <View style={styles.nonePhoto}>\r\n            <PlusSvg />\r\n          </View>}\r\n          {selectedImage && <ImageViewer isAvatar={true} selectedImage={selectedImage} />}\r\n        </TouchableOpacity>\r\n        <View style={{ position: 'absolute', bottom: 0, right: 0 }}>\r\n          <TouchableOpacity onPress={openCamera}>\r\n            <CameraSvg />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: { \r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n        },\r\n        round: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: 155,\r\n            width: 155,\r\n            borderWidth: 0.7,\r\n            borderRadius: 100,\r\n            borderColor: '#0000FF',\r\n        },\r\n        nonePhoto: {\r\n            height: 139, \r\n            width: 139, \r\n            backgroundColor: '#D9D9D9', \r\n            borderRadius: 100, \r\n            justifyContent: 'center', \r\n            alignItems: 'center',\r\n        }\r\n    });\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { G, Rect, Path, Defs } from \"react-native-svg\"\r\n/* SVGR has dropped some elements not supported by react-native-svg: filter */\r\nconst BackSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={104}\r\n    height={105}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G filter=\"url(#a)\">\r\n      <Rect width={96} height={96} x={4} y={0.444} fill=\"#fff\" rx={12} />\r\n    </G>\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeLinecap=\"round\"\r\n      strokeWidth={3}\r\n      d=\"M39.5 15.444 18 36.944m0 0 21.5 21.5M18 36.944h52.5c18 0 14.5 21.5 14.5 21.5s2 22-14.5 22H18\"\r\n    />\r\n    <Defs></Defs>\r\n  </Svg>\r\n)\r\nexport default BackSvg","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst AddSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={48}\r\n    height={48}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={1.9}\r\n      d=\"M2 24h43.84M2 24l21.92 21.92M2 24 23.92 2.08M45.84 24 23.92 45.92M45.84 24 23.92 2.08m0 43.84V2.08\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default AddSvg\r\n","import { View, TextInput, useWindowDimensions } from \"react-native-web\";\r\nimport useStyles from \"./nicknameInput.module\";\r\n\r\nexport default function NicknameInput({ value, setValue, flex, ...data }) {\r\n    const styles = useStyles();\r\n    const { width, height } = useWindowDimensions();\r\n    let inputMask;\r\n\r\n\r\n    inputMask = {\r\n        maxLength: 10,\r\n    };\r\n\r\n    const inputWidth = flex ? \"20%\" : width * 0.2;\r\n    const inputHeight = flex ? 44 : height * 0.06;\r\n\r\n    return (\r\n        <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n            <TextInput\r\n                {...data}\r\n                {...inputMask}\r\n                maxLength={10}\r\n                placeholderTextColor=\"#7C858E\"\r\n                value={value}\r\n                style={[styles.input, { paddingLeft: inputHeight * 0.5 }]}\r\n                onChangeText={(text) => setValue(text)}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      \r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      height: 60,\r\n      fontFamily: 'Montserrat-Regular',\r\n      fontSize: 48,\r\n      paddingLeft: \"5%\", // Adjust the padding to your liking\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      width: \"70%\", // Adjust the width to your liking\r\n    },\r\n  });\r\n}","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, TouchableOpacity } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport NicknameInput from '../components/inputs/nicknameInput/nicknameInput';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setProfileNickname, getProfileNickname, getEmail } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user, updateUser } = useContext(AuthContext);\r\n\r\n  // Access the user object from the AuthContext\r\n  const [inputText, setInputText] = useState({\r\n    name: user?.name || '', // Use the user's current name as the initial value if available\r\n  });\r\n  const isFormValid = inputText.name;\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchEmail();\r\n    }, [user])\r\n  );\r\n\r\n  const fetchEmail = async () => {\r\n    try {\r\n      const email = await getEmail();\r\n      if (email && email !== userText) {\r\n        setUserText(email);\r\n      } else if (!email && !userText) {\r\n        setUserText(user?.email || '');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error retrieving profile email:', error);\r\n    }\r\n  };\r\n  const emailContainerRef = useRef(null);\r\n  const [emailFontSize, setEmailFontSize] = useState(36);\r\n\r\n\r\n  const [showInputField, setShowInputField] = useState(false); // Track the visibility of the input field\r\n  const [rotationDeg, setRotationDeg] = useState(0);\r\n\r\n  useEffect(() => {\r\n    handleEmailLayout();\r\n    fetchSavedNickname();\r\n  }, []);\r\n\r\n  const handleEmailLayout = () => {\r\n    const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n    const desiredMaxWidth = 300; // You can adjust this as needed\r\n    const desiredMaxFontSize = 36; // You can adjust this as needed\r\n    const emailFontSize = Math.min(desiredMaxFontSize, (desiredMaxWidth / emailContainerWidth) * desiredMaxFontSize);\r\n    setEmailFontSize(emailFontSize);\r\n  };\r\n\r\n  const fetchSavedNickname = async () => {\r\n    try {\r\n      const savedNickname = await AsyncStorage.getItem('profile_nickname');\r\n      if (savedNickname) {\r\n        setInputText({ name: savedNickname });\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching saved nickname:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSvgPress = async () => {\r\n    if (showInputField) {\r\n      // Save changes and hide the input field\r\n      setShowInputField(false);\r\n      setRotationDeg(0); // Reset the rotation to 0 degrees\r\n      try {\r\n        await setProfileNickname(inputText.name);\r\n        // Call the updateName function only if the name is different from the current value\r\n        if (inputText.name !== user.name) {\r\n          await updateName(inputText.name); // Call the updateName function to send the PUT request\r\n        }\r\n      } catch (error) {\r\n        console.log('Error saving nickname:', error);\r\n      }\r\n    } else {\r\n      // Show the input field and rotate the AddSvg icon\r\n      setShowInputField(true);\r\n      setRotationDeg(90); // Rotate by 90 degrees\r\n    }\r\n\r\n    // Access the profile nickname from AsyncStorage after saving it\r\n    try {\r\n      const profileNickname = await getProfileNickname();\r\n      console.log('Profile nickname:', profileNickname);\r\n    } catch (error) {\r\n      console.log('Error retrieving profile nickname:', error);\r\n    }\r\n  };\r\n\r\n\r\n  // CSS style to apply the rotation transformation to the AddSvg icon\r\n  const addSvgStyle = {\r\n    transform: `rotate(${showInputField ? 45 : 0}deg)`,\r\n    transition: 'transform 0.5s ease', // Smooth transition for rotation animation\r\n  };\r\n\r\n  const updateName = async (newName) => {\r\n    try {\r\n      const id = user?.id; // Assuming the user object has an 'id' property\r\n      if (id) {\r\n        const response = await fetch(`https://messengerproject-production.up.railway.app/api/users/${id}/update/name?name=${encodeURIComponent(newName)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          // Update the user object in the AuthContext if the update is successful\r\n\r\n        } else {\r\n          console.error('Failed to update name');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating name:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.profileSettingsContainer}>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <ChangeAvatar  children={selectedImage}/>\r\n        </View>\r\n        <View style={styles.nicknameContainer}>\r\n          {showInputField ? (\r\n            <NicknameInput\r\n              value={inputText.name}\r\n              setValue={(text) => setInputText({ ...inputText, name: text })}\r\n              flex={false}\r\n            />\r\n          ) : (\r\n            <Text style={{ fontSize: 48, fontFamily: 'Montserrat-Regular', paddingHorizontal: 30 }}>\r\n              {inputText.name}\r\n            </Text>\r\n          )}\r\n          <TouchableOpacity onPress={handleAddSvgPress}>\r\n            <AddSvg style={addSvgStyle} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            borderTopWidth: 1,\r\n            borderBottomWidth: 1,\r\n            borderColor: '#000000',\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 15,\r\n            width: '80%',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            marginBottom: 13,\r\n          }}\r\n        >\r\n          <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n            <Text\r\n              style={{\r\n                color: '#000000',\r\n                fontSize: emailFontSize,\r\n                textAlign: 'center',\r\n                fontFamily: 'Montserrat-Regular',\r\n                marginBottom: 13,\r\n              }}\r\n            >\r\n              {userText ? userText : user.email}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <HeaderButton title={'Изменить почту'} onPress={() => navigation.navigate('ChangeEmail')} />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton title={'Изменить пароль'} onPress={() => navigation.navigate('ChangePassword')} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Button, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setEmail } from '../context/AsyncStorageUtil';\r\n\r\nfunction ChangeEmailScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const isButtonDisabled = () => {\r\n    return !inputText.email || !inputText.code || inputText.code != receivedCode;\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://messengerproject-production.up.railway.app/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Code has been sent to your email');\r\n         \r\n        } else {\r\n          alert('Failed to get code');\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error getting code:', error);\r\n        alert('Failed to get code');\r\n      });\r\n  };\r\n\r\n  const changeEmail = async () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Invalid email format');\r\n      return;\r\n    }\r\n  try {\r\n    const userId = user?.id;\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://messengerproject-production.up.railway.app/api/users/${userId}/update/email?email=${email}`;\r\n\r\n    const response = await fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert('Email updated successfully');\r\n      // Use setEmail to update the email value\r\n      setEmail(inputText.email);\r\n    } else {\r\n      alert('Failed to update email');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating email:', error);\r\n    alert('Failed to update email');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={\"Почта\"}\r\n              type={\"email\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={\"Код\"}\r\n              type={\"code\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title={\"Изменить почту\"}\r\n            onPress={changeEmail}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title={\"Получить код\"}\r\n            onPress={getCode}\r\n            disabled={isDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangeEmailScreen;\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight } from 'react-native';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { user } = useContext(AuthContext);\r\n  const id = user?.id; // Assuming the user object has an 'id' property\r\n\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      return alert('New password does not match the confirmation one');\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)&& !passwordRegex.test(inputText.newPassword)) {\r\n      alert('Invalid password: at least 8 characters long, should contain at least one uppercase letter, at least one lowercase letter,at least one digit, may contain special characters');\r\n      return;\r\n    }\r\n    const id = user?.id;\r\n    const queryParams = new URLSearchParams({\r\n      last_password: inputText.password,\r\n      new_password: inputText.newPassword,\r\n    });\r\n  \r\n    try {\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/users/${id}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Password update successful\r\n        alert('Password updated');\r\n      } else {\r\n        // Handle error response\r\n        console.error('Failed to update password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder=\"Подтвердить пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Изменить пароль\"\r\n            onPress={handleUpdatePassword}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ForwardSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={15}\r\n    height={21}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path stroke=\"#000\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n  </Svg>\r\n)\r\nexport default ForwardSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ForwardFocusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={15}\r\n    height={21}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path fill=\"#0076B9\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path fill=\"#000\" fillOpacity={0.2} d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path stroke=\"#0076B9\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path stroke=\"#000\" strokeOpacity={0.2} d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n  </Svg>\r\n)\r\nexport default ForwardFocusSvg\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native-web';\r\nimport ShowAvatar from '../Avatar/ShowAvatar/showAvatar';\r\nimport ForwardSvg from '../../assets/icons/forwardSvg';\r\nimport ForwardFocusSvg from '../../assets/icons/forwardFocusSvg';\r\nimport { MessageContext } from '../../context/MessageContext';\r\nimport AuthContext from '../../context/AuthContext';\r\nimport useStyles from './messageBody.module';\r\n\r\nconst MessageBody = ({ data, currentUser }) => {\r\n  const { imageUrl, nickname, role, message, own, channel, date, unauth, ident  } = data;\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const dated = new Date(date);\r\n  const time = dated.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const {user} = useContext(AuthContext);\r\n  const styles = useStyles();\r\n  const { addForwardedMessage } = useContext(MessageContext);\r\n\r\n  const handleForwardPress = async () => {\r\n    setIsFocused(prevState => !prevState);\r\n    const body = {\r\n      username: user.name,\r\n      messageId: ident\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://messengerproject-production.up.railway.app/api/saved_message/save', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Forwarding successful\r\n        console.log('Message forwarded successfully');\r\n      } else {\r\n        // Forwarding failed\r\n        console.log('Failed to forward message');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error forwarding message:', error);\r\n    }\r\n  };\r\n\r\n  const forwardIcon = isFocused ? <ForwardFocusSvg /> : <ForwardSvg />;\r\n\r\n  const messageBoxStyles = [\r\n    styles.messageBox,\r\n    own ? styles.ownMessageBox : styles.box,\r\n    {\r\n      borderTopRightRadius: own ? 10 : 10,\r\n      borderBottomRightRadius: own ? 0 : 10,\r\n      borderBottomLeftRadius: own ? 10 : 0,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={own ? styles.ownContainer : styles.container}>\r\n      {!own && imageUrl && (\r\n        <View style={styles.avatar}>\r\n          <ShowAvatar imageUrl={imageUrl} profile={false} />\r\n        </View>\r\n      )}\r\n      <View style={messageBoxStyles}>\r\n        {!unauth && (\r\n          <TouchableOpacity onPress={handleForwardPress}>\r\n            <View style={own ? styles.ownForward : styles.forward}>{forwardIcon}</View>\r\n          </TouchableOpacity>\r\n        )}\r\n        <Text style={styles.nickname}>{nickname}</Text>\r\n        {channel && <Text style={styles.role}>{role}</Text>}\r\n        <Text style={styles.message}>{message}</Text>\r\n        <Text style={own ? styles.ownTime : styles.time}>{time}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default MessageBody;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          flexDirection: 'row',\r\n          alignItems: 'flex-end',\r\n          marginBottom: 10,\r\n          maxWidth: '100%',\r\n        },\r\n        ownContainer: {\r\n          flexDirection: 'row-reverse',\r\n          alignItems: 'flex-end',\r\n          marginBottom: 10,\r\n          maxWidth: '100%',\r\n        },\r\n        avatar: {\r\n          alignSelf: 'flex-start',\r\n        },\r\n        messageBox: {\r\n          backgroundColor: '#E7DEDE',\r\n          paddingVertical: 10,\r\n          paddingHorizontal: 15,\r\n          maxWidth: '60%',\r\n        },\r\n        box: {\r\n          borderTopRightRadius: 10,\r\n          borderBottomRightRadius: 10,\r\n          borderTopLeftRadius: 10,\r\n        },\r\n        ownMessageBox: {\r\n          backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n          paddingVertical: 10,\r\n          paddingHorizontal: 15,\r\n          maxWidth: '60%',\r\n          borderTopRightRadius: 10,\r\n          borderBottomRightRadius: 10,\r\n          borderTopLeftRadius: 10,\r\n        },\r\n        forward: {\r\n          alignSelf: 'flex-end',\r\n          marginBottom: 5,\r\n        },\r\n        ownForward: {\r\n          alignSelf: 'flex-start',\r\n          marginBottom: 5,\r\n        },\r\n        nickname: {\r\n          fontSize: 24,\r\n          fontFamily: 'Montserrat-Bold',\r\n          fontWeight: 'bold',\r\n          color: 'black',\r\n          marginBottom: 5,\r\n        },\r\n        role: {\r\n          fontSize: 24,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: '#0076B9',\r\n          marginBottom: 5,\r\n        },\r\n        message: {\r\n          fontSize: 19,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          flexWrap: 'wrap',\r\n          marginBottom: 5,\r\n        },\r\n        time: {\r\n          fontSize: 14,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          alignSelf: 'flex-end',\r\n        },\r\n        ownTime: {\r\n          fontSize: 14,\r\n          fontFamily: 'Montserrat-Regular',\r\n          color: 'black',\r\n          alignSelf: 'flex-start',\r\n        },\r\n      });\r\n}","import * as React from \"react\"\r\nimport Svg, { G, Circle, Path, Defs } from \"react-native-svg\"\r\n\r\nconst SendSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={60}\r\n    height={60}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G filter=\"url(#a)\">\r\n      <Circle cx={30} cy={28.125} r={28.125} fill=\"#fff\" />\r\n    </G>\r\n    <Path\r\n      stroke=\"#0076B9\"\r\n      strokeWidth={3}\r\n      d=\"M44.25 28.125 22.125 9.375v18.75m22.125 0L22.125 50.625V28.125m22.125 0H22.125\"\r\n    />\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeOpacity={0.2}\r\n      strokeWidth={3}\r\n      d=\"M44.25 28.125 22.125 9.375v18.75m22.125 0L22.125 50.625V28.125m22.125 0H22.125\"\r\n    />\r\n    <Defs></Defs>\r\n  </Svg>\r\n)\r\n\r\nexport default SendSvg\r\n","import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, TextInput } from 'react-native-web';\r\nimport { useWindowDimensions } from 'react-native-web';\r\nimport useStyles from './messageInput.module';\r\nimport SendSvg from '../../../assets/icons/sendSvg';\r\n\r\nconst MessageInput = ({ curuser, chanInf, channel, onMessageSent }) => {\r\n  const [message, setMessage] = useState('');\r\n  const { width, height } = useWindowDimensions();\r\n  const styles = useStyles();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const handleSend = async () => {\r\n    if (message) {\r\n      try {\r\n        if (channel) {\r\n          // Use existing API endpoint for channel messages\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            message: message,\r\n            channelName: chanInf.name,\r\n          };\r\n    \r\n          const response = await fetch('https://messengerproject-production.up.railway.app/api/channels/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            console.log('Message sent successfully');\r\n            setMessage('');\r\n            onMessageSent(); // Invoke the callback to trigger chat data fetching\r\n          } else {\r\n            console.log('Failed to send message');\r\n          }\r\n        } else {\r\n          // Use custom API endpoint for direct messages\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            otherUsername: chanInf,\r\n            message: message,\r\n          };\r\n    \r\n          const response = await fetch('https://messengerproject-production.up.railway.app/api/chats/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            console.log('Message sent successfully');\r\n            setMessage('');\r\n            onMessageSent(); // Invoke the callback to trigger chat data fetching\r\n          } else {\r\n            console.log('Failed to send message');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Type your message here...\"\r\n        value={message}\r\n        onChangeText={setMessage}\r\n      />\r\n      <TouchableOpacity style={styles.sendButton} onPress={handleSend}>\r\n        <SendSvg />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          flexDirection: 'row',\r\n          alignItems: 'flex-end',\r\n        },\r\n        input: {\r\n          flex: 1,\r\n          height: 44,\r\n          fontSize: 16,\r\n          paddingLeft: 40,\r\n          borderRadius: 10,\r\n          backgroundColor: '#FFFFFF',\r\n          color: '#000000',\r\n          boxShadow: '2px 2px 2px rgba(0, 0, 0, 1)',\r\n          fontFamily: 'Montserrat-Regular',\r\n          alignSelf: 'flex-start',\r\n          marginRight: 30\r\n        },\r\n        sendButton: {\r\n          alignSelf: 'flex-end',\r\n          marginLeft: 30,\r\n          width: 60,\r\n          height: 60,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        },\r\n      });\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, TextInput } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ChatScreen({ navigation, route }) {\r\n  const { chatUser } = route.params;\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const { logout } = useContext(AuthContext);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatData, setChatData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://messengerproject-production.up.railway.app/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const channelResponse = await response.json();\r\n        setShowPopup(false);\r\n        // Channel creation successful\r\n        alert('Channel created');\r\n        window.location.reload();\r\n      } else {\r\n        // Handle error response\r\n        alert('Failed to create channel');\r\n      }\r\n    } catch (error) {\r\n      alert('Error creating channel:', error);\r\n    }\r\n  };\r\n  const [shouldFetchChatData, setShouldFetchChatData] = useState(true);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchProfileNickname();\r\n      setShouldFetchChatData(true); // Trigger fetching when the component is focused\r\n    }, [])\r\n  );\r\n  \r\n  useEffect(() => {\r\n    if (shouldFetchChatData) {\r\n      fetchChatData()\r\n        .then(() => setShouldFetchChatData(false))\r\n        .catch((error) => console.log('Error fetching chat data:', error));\r\n    }\r\n  }, [shouldFetchChatData]);\r\n  \r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setShouldFetchChatData(true); // Trigger fetching at regular intervals\r\n    }, 5000); // Adjust the interval duration as needed (e.g., every 5 seconds)\r\n  \r\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\r\n  }, []);\r\n  \r\n  const fetchChatData = async () => {\r\n    const firstUser = user.name;\r\n    const secondUser = chatUser.name;\r\n    const url = `https://messengerproject-production.up.railway.app/api/chats/usernames?first_user=${firstUser}&second_user=${secondUser}`;\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const chatData = await response.json();\r\n        setChatData(chatData);\r\n      } else {\r\n        throw new Error('Failed to fetch chat data');\r\n      }\r\n    } catch (error) {\r\n      throw new Error('Error fetching chat data:', error);\r\n    }\r\n  };\r\n  \r\n  const handleMessageSent = () => {\r\n    setShouldFetchChatData(true); // Trigger fetching when a message is sent\r\n  };\r\n  \r\n  \r\n \r\n\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error retrieving profile nickname:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadChatMessages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveChatMessages();\r\n  }, [messages]);\r\n\r\n\r\n  const imageSource = selectedImage || (user && user.image);\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт',\r\n    },\r\n    {\r\n      onPress: () => logout(),\r\n      text: 'Выйти',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  const saveChatMessages = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('chatMessages', JSON.stringify(messages));\r\n    } catch (error) {\r\n      console.error('Error while saving chat messages:', error);\r\n    }\r\n  };\r\n\r\n  const loadChatMessages = async () => {\r\n    try {\r\n      const savedMessages = await AsyncStorage.getItem('chatMessages');\r\n      if (savedMessages) {\r\n        setMessages(JSON.parse(savedMessages));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while loading chat messages:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.barContainer}>\r\n        <SearchBody\r\n          data={{\r\n            avatarUrl: chatUser.image,\r\n            username: chatUser.name,\r\n            onPress: fetchChatData\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={imageSource} profile={true} />\r\n        <Text style={{ color: '#000000', fontSize: 48, textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.historyContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {chatData?.map((message) => {\r\n            return (\r\n              <MessageBody\r\n                key={message.id}\r\n                data={{\r\n                  imageUrl: message.author?.image,\r\n                  nickname: message.author?.name,\r\n                  message: message.data,\r\n                  date: message.date,\r\n                  own: message.author?.name === user.name,\r\n                  channel: false,\r\n                  unauth: false,\r\n                  ident: message.id\r\n                }}\r\n                currentUser={user}\r\n              />\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.sendContainer}>\r\n        <MessageInput channel={false} curuser={userText ? userText : user.name} chanInf={chatUser.name} onMessageSent={handleMessageSent}/>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={''}\r\n              type={'nickname'}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <View>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst SettingsSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={14}\r\n    height={56}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={7} cy={7} r={7} fill=\"#373535\" />\r\n    <Circle cx={7} cy={49} r={7} fill=\"#373535\" />\r\n    <Circle cx={7} cy={28} r={7} fill=\"#373535\" />\r\n  </Svg>\r\n)\r\nexport default SettingsSvg\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport SettingsSvg from '../assets/icons/settingsSvg';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\nexport default function ChannelScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [role, setRole] = useState('Admin');\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const { logout } = useContext(AuthContext);\r\n    const { user, updateUser } = useContext(AuthContext);\r\n    const [messages, setMessages] = useState([]);\r\n    const { selectedImage } = useContext(ImageContext);\r\n    const [isMember, setIsMember] = useState(false);\r\n    const [isDisable, setIsDisable] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [showSettings, setShowSettings] = useState(true);\r\n    const [userText, setUserText] = useState('');\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n    \r\n\r\n    const [shouldFetchChannelData, setShouldFetchChannelData] = useState(true);\r\n\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://messengerproject-production.up.railway.app/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n\r\n\r\n\r\n                // Check if the user is the channel creator\r\n                const isCreator = user?.id === channelData.creator?.id;\r\n                const member = user.channels?.some((channel) => channel.id === channelData.id);\r\n                const currentUser = channelData.members.find(member => member.user.id === user.id);\r\n\r\n                if (currentUser) {\r\n                    // Access the role object of the current user\r\n                    const { role } = currentUser;\r\n\r\n                    if (role) {\r\n                        // User has a role, handle it accordingly\r\n\r\n\r\n                        if (role.isAdmin !== undefined) {\r\n                            // User has an isAdmin property\r\n\r\n                            setIsAdmin(role.isAdmin);\r\n                        }\r\n                    }\r\n                }\r\n                // Update isMember and showSettings based on the condition\r\n                setIsMember(member);\r\n\r\n                setIsDisable(isCreator);\r\n                setChannelData(channelData);\r\n            } else {\r\n                throw new Error('Failed to fetch channel data');\r\n            }\r\n        } catch (error) {\r\n            throw new Error('Error fetching channel data:', error);\r\n        }\r\n    };\r\n\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n          fetchProfileNickname();\r\n          setShouldFetchChannelData(true); // Trigger fetching when the component is focused\r\n        }, [])\r\n      );\r\n      \r\n      useEffect(() => {\r\n        if (shouldFetchChannelData) {\r\n          fetchChannelData()\r\n            .then(() => setShouldFetchChannelData(false))\r\n            .catch((error) => console.log('Error fetching chat data:', error));\r\n        }\r\n      }, [shouldFetchChannelData]);\r\n      \r\n      useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n          setShouldFetchChannelData(true); // Trigger fetching at regular intervals\r\n        }, 5000); // Adjust the interval duration as needed (e.g., every 5 seconds)\r\n      \r\n        return () => clearInterval(intervalId); // Cleanup the interval on component unmount\r\n      }, []);\r\n    \r\n      const handleMessageSent = () => {\r\n        setShouldFetchChannelData(true); // Trigger fetching when a message is sent\r\n      };\r\n      \r\n    const fetchProfileNickname = async () => {\r\n        try {\r\n            const nickname = await getProfileNickname();\r\n            if (nickname && nickname !== userText) {\r\n                setUserText(nickname);\r\n            }\r\n        } catch (error) {\r\n            console.log('Error retrieving profile nickname:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadChatMessages();\r\n        console.log(channelId);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        saveChatMessages();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        saveChannelState();\r\n    }, [isMember, showSettings]);\r\n\r\n\r\n\r\n    const isFormValid = inputText.nickname;\r\n    const buttons = [\r\n        {\r\n            onPress: ({ }) => navigation.navigate('Profile'),\r\n            text: 'Мой аккаунт',\r\n        },\r\n        {\r\n            onPress: () => logout(),\r\n            text: 'Выйти',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const handleJoinLeave = async () => {\r\n        try {\r\n            const name = userText || user.name;\r\n            const channelName = channelData.name;\r\n            const apiUrl = isMember\r\n                ? `https://messengerproject-production.up.railway.app/api/channels/${channelId}/leave?username=${name}`\r\n                : `https://messengerproject-production.up.railway.app/api/channels/join?username=${name}&channel_name=${channelName}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: isMember ? 'DELETE' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsMember((prevIsMember) => !prevIsMember);\r\n                alert(isMember ? 'You left the channel' : 'You joined the channel');\r\n                window.location.reload();\r\n            } else {\r\n                // Handle error response\r\n                alert(isMember ? 'Failed to leave the channel' : 'Failed to join the channel');\r\n            }\r\n        } catch (error) {\r\n            alert('Error joining/leaving the channel:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const saveChannelState = async () => {\r\n        try {\r\n            const channelState = {\r\n                isMember,\r\n                showSettings,\r\n            };\r\n            await AsyncStorage.setItem('channelState', JSON.stringify(channelState));\r\n        } catch (error) {\r\n            console.error('Error while saving channel state:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const saveChatMessages = async () => {\r\n        try {\r\n            await AsyncStorage.setItem('chatMessages', JSON.stringify(messages));\r\n        } catch (error) {\r\n            console.error('Error while saving chat messages:', error);\r\n        }\r\n    };\r\n    const imageSource = selectedImage || (user && user.image);\r\n    const loadChatMessages = async () => {\r\n        try {\r\n            const savedMessages = await AsyncStorage.getItem('chatMessages');\r\n            if (savedMessages) {\r\n                setMessages(JSON.parse(savedMessages));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error while loading chat messages:', error);\r\n        }\r\n    };\r\n    const handleCreateChannel = async () => {\r\n        try {\r\n            const response = await fetch('https://messengerproject-production.up.railway.app/api/channels/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    username: user.name,\r\n                    channelName: inputText.nickname,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelResponse = await response.json();\r\n                setShowPopup(false);\r\n                // Channel creation successful\r\n                alert('Channel created');\r\n                window.location.reload();\r\n            } else {\r\n                // Handle error response\r\n                alert('Failed to create channel');\r\n            }\r\n        } catch (error) {\r\n            alert('Error creating channel:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelData.name}</Text>\r\n                <View>\r\n                    <HeaderButton title={isMember ? 'Покинуть' : 'Присоединиться'} onPress={handleJoinLeave} disabled={isDisable} />\r\n                </View>\r\n                {isMember && isAdmin && (\r\n                    <View style={{ marginRight: 20 }}>\r\n                        <TouchableHighlight onPress={({ }) => navigation.navigate('Settings', { channelId: channelData.id })}>\r\n                            <SettingsSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                )}\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n                <ShowAvatar imageUrl={imageSource} profile={true} />\r\n                <Text style={{ color: '#000000', fontSize: 48, textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n                {buttons.map((data, index) => (\r\n                    <View style={{ width: '70%' }} key={index}>\r\n                        <BorderButton key={index} data={data} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView \r\n                    style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: message.sender?.name === user.name,\r\n                                    channel: true,\r\n                                    unauth: false,\r\n                                    ident: message.id\r\n                                }}\r\n                                currentUser={user}\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                </ScrollView>\r\n            </View>\r\n            {isMember && (\r\n                <View style={styles.sendContainer}>\r\n                    <MessageInput channel={true} curuser={userText ? userText : user.name} chanInf={channelData} onMessageSent={handleMessageSent} />\r\n                </View>\r\n            )}\r\n            <View style={styles.bottomLeft}>\r\n                <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n                    <CreateSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название канала</Text>\r\n                    <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n                        <DataInput\r\n                            value={inputText.nickname}\r\n                            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                            placeholder={''}\r\n                            type={'nickname'}\r\n                            flex={true}\r\n                        />\r\n                    </View>\r\n                    <View>\r\n                        <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ChangeSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={44}\r\n    height={42}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#373535\"\r\n      d=\"M1 40.444v-8.5l24.5-23 8.5 8-24.5 23.5H1ZM38 12.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n    <Path\r\n      stroke=\"#373535\"\r\n      strokeWidth={1.9}\r\n      d=\"M1 40.444v-8.5l24.5-23 8.5 8-24.5 23.5H1ZM38 12.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default ChangeSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst AdminSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={67}\r\n    height={67}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={33.5} cy={33.5} r={23} stroke=\"#000\" />\r\n  </Svg>\r\n)\r\nexport default AdminSvg \r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst AdminFocusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={67}\r\n    height={67}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={33.5} cy={33.5} r={23} fill=\"#0076B9\" />\r\n    <Circle cx={33.5} cy={33.5} r={23} fill=\"#000\" fillOpacity={0.2} />\r\n    <Circle cx={33.5} cy={33.5} r={23} stroke=\"#000\" />\r\n  </Svg>\r\n)\r\nexport default AdminFocusSvg\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    Image,\r\n    Modal,\r\n} from \"react-native-web\";\r\nimport ChangeSvg from \"../../assets/icons/changeSvg\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport AdminSvg from \"../../assets/icons/adminSvg\";\r\nimport AdminFocusSvg from \"../../assets/icons/adminFocusSvg\";\r\nimport HeaderButton from \"../buttons/headerButton\";\r\nimport DataInput from \"../inputs/textInput/textInput\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\nimport axios from 'axios';\r\nimport useStyles from \"./settingsBody.module\";\r\n\r\n\r\nexport default function SettingsBody({ data }) {\r\n    const { role, name, onPress, containerStyle, creator, channelId } = data;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const { user } = useContext(AuthContext);\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n        role: role, // add state for role input value\r\n    });\r\n    const styles = useStyles();\r\n    const [isAdmin, setIsAdmin] = useState(false); // add state for AdminSvg icon\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const handleDelete = async () => {\r\n        try {\r\n          const url = `https://messengerproject-production.up.railway.app/api/channels/${channelId.id}/leave?username=${name}`;\r\n          const response = await axios.delete(url, {\r\n            auth: {\r\n              username: username,\r\n              password: password\r\n            }\r\n          });\r\n          console.log('Delete request sent successfully');\r\n          console.log(response.data); // Optional: Log the response data\r\n        } catch (error) {\r\n          console.error('Error sending delete request:', error);\r\n        }\r\n      };\r\n      \r\n\r\n    const isFormValid = inputText.role;\r\n\r\n\r\n    const handleAdminClick = () => {\r\n        setIsAdmin(!isAdmin); // toggle AdminSvg icon\r\n    };\r\n\r\n    const handleRoleChange = (role) => {\r\n        setInputText({ ...inputText, role: role }); // update role input value\r\n    };\r\n    const currentUser = channelId.members.find(member => member.user.id === user.id);\r\n    const handleSaveChanges = async () => {\r\n        const url = 'https://messengerproject-production.up.railway.app/api/roles/create';\r\n      \r\n        const requestBody = {\r\n          name: inputText.role,\r\n          isAdmin: isAdmin,\r\n          username: name,\r\n          channelName: channelId.name\r\n        };\r\n      \r\n        try {\r\n            \r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Basic ${btoa(`${username}:${password}`)}` // Replace with your own username and password\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n          });\r\n      \r\n          // Check if the request was successful\r\n          if (response.ok) {\r\n            console.log('Role created successfully');\r\n          } else {\r\n            console.log('Failed to create role');\r\n            console.log(channelId.name);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error creating role:', error);\r\n        }\r\n      \r\n        setShowPopup(false);\r\n      };\r\n      \r\n\r\n    return (\r\n        <TouchableOpacity\r\n            style={[\r\n                styles.container,\r\n                containerStyle,\r\n                isHovered && { backgroundColor: \"#E7DEDE\" },\r\n            ]}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n            <View style={styles.content}>\r\n                {!creator && (\r\n                    <TouchableOpacity onPress={handleDelete}>\r\n                        <DeleteSvg />\r\n                    </TouchableOpacity>\r\n                )}\r\n\r\n                <Text style={styles.username}>{name}</Text>\r\n                <Text style={styles.role}>{inputText.role}</Text>\r\n\r\n                {!creator  && (\r\n                    <TouchableOpacity onPress={() => setShowPopup(true)}>\r\n                        <ChangeSvg />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n\r\n\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название роли</Text>\r\n                    <View style={styles.inputContainer}>\r\n                        <DataInput\r\n                            value={inputText.role}\r\n                            setValue={(text) => setInputText({ ...inputText, role: text })}\r\n                            placeholder={\"\"}\r\n                            type={\"nickname\"}\r\n                            flex={true}\r\n                        />\r\n                        <TouchableOpacity style={styles.adminButton} onPress={handleAdminClick}>\r\n                            {isAdmin ? <AdminFocusSvg /> : <AdminSvg />}\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View >\r\n                        <TouchableOpacity onPress={() => setShowPopup(false)}>\r\n                            <HeaderButton title={\"Назначить\"} onPress={handleSaveChanges} disabled={!isFormValid} />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\n\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            borderRadius: 26,\r\n            paddingVertical: 12,\r\n            paddingHorizontal: 16,\r\n    \r\n        },\r\n        text: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            color: '#000000',\r\n            fontSize: 24,\r\n            textAlign: 'center',\r\n            marginBottom: 13\r\n        },\r\n        content: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            flex: 1\r\n        },\r\n        username: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            fontSize: 24,\r\n            color: \"#000000\",\r\n            marginLeft: 40,\r\n        },\r\n        role: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            fontSize: 24,\r\n            color: \"#0076B9\",\r\n            marginLeft: 40,\r\n            marginRight: 40\r\n        },\r\n        inputContainer: {\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n        },\r\n        popupContainer: {\r\n            backgroundColor: '#E7DEDE',\r\n            borderRadius: 35,\r\n            padding: 20,\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 2, height: 2 },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 7,\r\n            position: 'absolute',\r\n            top: '50%', // set top to 50%\r\n            left: '50%', // set left to 50%\r\n            transform: [{ translateX: '-50%' }, { translateY: '-50%' }], // adjust position based on element size\r\n            width: '30%',\r\n            height: '30%',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column', // add this line to make items centered in a column\r\n        },\r\n    });\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n\r\n\r\nexport default function SettingsScreen({ navigation, route }) {\r\n  const { channelId } = route.params;\r\n  const { user } = useContext(AuthContext);\r\n  const styles = useStyles();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  \r\n  const [isEditingNickname, setIsEditingNickname] = useState(false);\r\n  const [channelData, setChannelData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchChannelData();\r\n    }, [channelData.members])\r\n  );\r\n  const [inputText, setInputText] = useState({\r\n    nickname: channelData.name || 'a',\r\n  });\r\n  const fetchChannelData = async () => {\r\n    try {\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/channels/${channelId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const channelData = await response.json();\r\n        \r\n        setChannelData(channelData);\r\n        setInputText((prevInputText) => ({\r\n          ...prevInputText,\r\n          nickname: channelData.name || 'a',\r\n        }));\r\n        const isCreator = user?.id === channelData.creator?.id;\r\n        setIsAdmin(isCreator);\r\n      } else {\r\n        console.log('Failed to fetch channel data');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching channel data:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  const handleDeleteChannel = async () => {\r\n    try {\r\n      const response = await fetch(`https://messengerproject-production.up.railway.app/api/channels/delete/${channelId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Channel deletion successful\r\n        alert('Channel deleted');\r\n        navigation.navigate('MainAuth'); // Redirect to MainAuthScreen\r\n      } else {\r\n        // Handle error response\r\n        alert('Failed to delete channel');\r\n      }\r\n    } catch (error) {\r\n      alert('Error deleting channel:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleRoleChange = async (newRole) => {\r\n    setRole(newRole);\r\n    try {\r\n      await AsyncStorage.setItem('role', newRole);\r\n    } catch (error) {\r\n      console.log('Error saving role:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddButtonClick = async () => {\r\n    if (isEditingNickname) {\r\n      // Save changes and exit edit mode\r\n      setIsEditingNickname(false);\r\n      try {\r\n        // Make the API request to update the nickname\r\n        const response = await fetch(`https://messengerproject-production.up.railway.app/api/channels/${channelId}/update?name=${encodeURIComponent(inputText.nickname)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          const channelResponse = await response.json();\r\n\r\n        // Update user.channels in the AuthContext\r\n        const updatedChannels = user.channels.map((channel) => {\r\n          if (channel.id === channelResponse.id) {\r\n            // Update the channel name\r\n            return { ...channel, name: channelResponse.name };\r\n          }\r\n          return channel;\r\n        });\r\n\r\n        const updatedUser = {\r\n          ...user,\r\n          channels: updatedChannels,\r\n        };\r\n\r\n        // Store the updated user data in localStorage\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n        } else {\r\n          console.log('Failed to update Channel name');\r\n        }\r\n      } catch (error) {\r\n        console.log('Error updating Channel name:', error);\r\n      }\r\n    } else {\r\n      // Enter edit mode\r\n      setIsEditingNickname(true);\r\n    }\r\n  };\r\n  \r\n\r\n  const members = [\r\n    {\r\n      role: role,\r\n      username: \"John Doe\",\r\n      onRoleChange: handleRoleChange\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.containerSettings}>\r\n      <View style={styles.channNameContainer}>\r\n        <View style={styles.dataInputContainer}>\r\n          <DataInput\r\n            value={inputText.nickname}\r\n            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n            placeholder={\"\"}\r\n            type={\"nickname\"}\r\n            flex={false}\r\n            editable={isEditingNickname}\r\n          />\r\n        </View>\r\n        <TouchableHighlight onPress={handleAddButtonClick}>\r\n          <AddSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.settingsContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n        {channelData.members?.map((channel) => (\r\n            <SettingsBody\r\n             \r\n              data={{\r\n                key: channel.id,\r\n                name: channel.user.name,\r\n                role: channel.role.name,\r\n                onRoleChange: handleRoleChange,\r\n                creator: channel.role.isCreator,\r\n                channelId: channelData\r\n              }}\r\n              \r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Channel', { channelId: channelData.id })}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <HeaderButton title={'Удалить канал'} onPress={handleDeleteChannel} disabled={!isAdmin} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, TextInput } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n\r\nexport default function ChannelUnauthScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [shouldUseFocusEffect, setShouldUseFocusEffect] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setShouldUseFocusEffect(false); // Reset the flag\r\n    }, [channelId]);\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchChannelData();\r\n        }, [channelId])\r\n    );\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n\r\n    const scrollViewRef = useRef(null);\r\n    const [isAtBottom, setIsAtBottom] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (channelData?.messages?.length > 0 && isAtBottom) {\r\n            scrollViewRef.current.scrollToEnd({ animated: true });\r\n        }\r\n    }, [channelData?.messages, isAtBottom]);\r\n\r\n    const handleContentSizeChange = () => {\r\n        const isScrolledToBottom =\r\n            scrollViewRef.current &&\r\n            scrollViewRef.current.contentOffset &&\r\n            scrollViewRef.current.contentOffset.y + scrollViewRef.current.layoutMeasurement.height >=\r\n            scrollViewRef.current.contentSize.height;\r\n\r\n        setIsAtBottom(isScrolledToBottom);\r\n    };\r\n\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://messengerproject-production.up.railway.app/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n\r\n                setChannelData(channelData);\r\n            } else {\r\n                // Handle error response\r\n                console.log('Failed to fetch channel data');\r\n            }\r\n        } catch (error) {\r\n            console.log('Error fetching channel data:', error);\r\n        }\r\n    };\r\n\r\n    if (!channelData) {\r\n        return null; // You can render a loading indicator or fallback UI here\r\n      }\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelData.name}</Text>\r\n                <View>\r\n                    <HeaderButton title={'Присоединиться'} onPress={() => navigation.navigate('Auth')} />\r\n                </View>\r\n            </View >\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView ref={scrollViewRef} onContentSizeChange={handleContentSizeChange} style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: false,\r\n                                    channel: true,\r\n                                    unauth: true\r\n                                }}\r\n                              \r\n                            />\r\n                        );\r\n                    })}\r\n                </ScrollView>\r\n\r\n            </View>\r\n            <View style = {styles.bottomLeft}>\r\n             <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n        </View>\r\n        </View>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport GreetingsScreen from './screens/GreetingsScreen';\nimport MainUnauthScreen from './screens/MainUnauthScreen';\nimport AuthScreen from './screens/AuthScreen';\nimport RegScreen from './screens/RegScreen';\nimport ForgotScreen from './screens/ForgotScreen';\nimport HeaderLogoSvg from './assets/icons/headerLogoSvg';\nimport HeaderButton from './components/buttons/headerButton';\nimport { Button, TouchableHighlight, View } from 'react-native-web';\nimport SearchInput from './components/inputs/searchInput/searchInput';\nimport SearchBody from './components/searchBodies/searchBody';\nimport MainAuthScreen from './screens/MainAuthScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ChangeEmailScreen from './screens/ChangeEmailScreen';\nimport ChangePasswordScreen from './screens/ChangePasswordScreen';\nimport ChatScreen from \"./screens/ChatScreen\";\nimport ChannelScreen from './screens/ChannelScreen';\nimport SettingsScreen from './screens/SettingsScreen';\nimport ChannelUnauthScreen from './screens/ChannelUnauthScreen';\nimport { ImageProvider } from './context/ImageContext';\nimport { AuthProvider } from './context/AuthContext';\nimport {MessageProvider} from './context/MessageContext';\nimport * as Font from 'expo-font';\n\nconst loadFonts = async () => {\n  await Font.loadAsync({\n    'Montserrat-Regular': require('./assets/fonts/Montserrat-Regular.ttf'),\n    'Montserrat-Italic': require('./assets/fonts/Montserrat-Italic.ttf'),\n    'Montserrat-Bold': require('./assets/fonts/Montserrat-Bold.ttf'),\n  });\n};\n\n// Load fonts before rendering the app\nloadFonts()\n  .then(() => {\n    // Fonts are loaded, render your app\n    renderApp();\n  })\n  .catch((error) => {\n    console.error('Error loading fonts:', error);\n  });\nexport default function App( ) {\nconst Stack = createStackNavigator();\nconst [searchValue, setSearchValue] = useState('');\nconst [searchResults, setSearchResults] = useState([]);\nconst username = 'admin';\nconst password = 'root';\nconst [resultsUnauth, setResultsUnauth] = useState([]);\nconst [results, setResults] = useState([]);\n\n\n\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      // Fetch channel data\n      const channelResponse = await fetch('http://localhost:8080/api/channels', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\n        },\n      });\n\n      if (channelResponse.ok) {\n        const channelData = await channelResponse.json();\n        const formattedResults = [];\n        const unauthResults = [];\n\n        for (let i = 0; i < channelData.length; i++) {\n          const channel = channelData[i];\n\n          // Add channel object to the formattedResults array\n          formattedResults.push({\n            name: channel.name,\n            onPress: ({ navigation }) =>\n            navigation.navigate('Channel', { channelId: channel.id }),\n            avatarUrl: null\n          });\n\n          // Add channel object to the unauthResults array\n          unauthResults.push({\n            name: channel.name,\n            onPress: ({ navigation }) =>\n            navigation.navigate('ChannelUnauth', { channelId: channel.id }),\n            avatarUrl: null\n          });\n        }\n\n        // Fetch user data\n        const userResponse = await fetch('http://localhost:8080/api/users', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\n          },\n        });\n\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n\n          // Merge user data into formattedResults array\n          for (let i = 0; i < userData.length; i++) {\n            const user = userData[i];\n            formattedResults.push({\n              name: user.name,\n              onPress: ({ navigation }) =>\n              navigation.navigate('Chat', { chatUser: user }),\n              avatarUrl: user.image,\n            });\n          }\n        } else {\n          console.log('Failed to fetch user data');\n        }\n\n        setResults(formattedResults);\n        setResultsUnauth(unauthResults);\n      } else {\n        console.log('Failed to fetch channel data');\n      }\n    } catch (error) {\n      console.log('Error fetching data:', error);\n    }\n  };\n\n  fetchData();\n}, []);\n\n\n  \n\n\nconst screens = [\n  {\n    name: 'Greetings',\n    component: GreetingsScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <HeaderButton\n          style={{ marginRight: 20 }}\n          title={\"Войти\"}\n          onPress={() => navigation.navigate('Auth')}\n        />\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'MainUnauth',\n    component: MainUnauthScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={resultsUnauth}\n            navigation={navigation}\n            unauth={true}\n            />\n          <View style={{ paddingHorizontal: 193 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'ChannelUnauth',\n    component: ChannelUnauthScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={resultsUnauth}\n            unauth={true}\n            navigation={navigation}\n            />\n            <View style={{ paddingHorizontal: 193 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Settings',\n    component: SettingsScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n\n  {\n    name: 'MainAuth',\n    component: MainAuthScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Chat',\n    component: ChatScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Channel',\n    component: ChannelScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n\n  {\n    name: 'Profile',\n    component: ProfileScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n          <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'ChangePassword',\n    component: ChangePasswordScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'ChangeEmail',\n    component: ChangeEmailScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Auth',\n    component: AuthScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            unauth={true}\n            />\n          <View style={{ paddingHorizontal: 193 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Reg',\n    component: RegScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            unauth={true}\n            />\n          <View style={{ paddingHorizontal: 193 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Forgot',\n    component: ForgotScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            unauth={true}\n            />\n          <View style={{ paddingHorizontal: 193 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n];\n\n\n  return (\n    <ImageProvider>\n    <AuthProvider >\n      <MessageProvider>\n      <NavigationContainer>\n      \n          <Stack.Navigator >\n            {screens.map((screen) => (\n              <Stack.Screen key={screen.name} {...screen} />\n            ))}\n          </Stack.Navigator>\n       \n      </NavigationContainer>\n      </MessageProvider>\n    </AuthProvider>\n    </ImageProvider>\n\n  );\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [124], () => (__webpack_require__(8029)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["props","_jsxs","Svg","_objectSpread","xmlns","width","height","fill","children","_jsx","Path","d","fillOpacity","HeaderButton","_ref","title","onPress","disabled","styles","buttonWidth","Dimensions","buttonColor","StyleSheet","button","backgroundColor","borderRadius","minWidth","paddingVertical","paddingHorizontal","alignSelf","marginVertical","marginRight","buttonText","fontFamily","color","fontSize","textAlign","useStyles","TouchableHighlight","style","Text","_useState","useState","window","innerWidth","_useState2","_slicedToArray","setWindowWidth","_useState3","innerHeight","_useState4","setWindowHeight","useEffect","handleResize","addEventListener","removeEventListener","container","flex","justifyContent","alignItems","headerButton","marginTop","containerMain","bottomLeft","position","bottom","left","topLeft","top","textContainer","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","messageContainer","text","inputContainer","paddingTop","ImageContext","createContext","ImageProvider","selectedImage","setSelectedImage","storedImage","localStorage","getItem","JSON","parse","Provider","value","updateSelectedImage","image","setItem","stringify","AuthContext","AuthProvider","isLoggedIn","setIsLoggedIn","user","setUser","useContext","checkLoginStatus","_ref2","_asyncToGenerator","isLoggedInValue","AsyncStorage","userData","error","console","apply","arguments","login","_ref3","_x","logout","_ref4","navigation","navigate","authContextValue","updateUser","updatedUser","View","LogoSvg","Circle","cx","cy","r","stroke","strokeWidth","ShowAvatar","imageUrl","_useWindowDimensions","useWindowDimensions","profile","containerWidth","imageWidth","imageHeight","nonePhotoWidth","nonePhotoHeight","flexDirection","round","borderWidth","borderColor","nonePhoto","info","nickname","fontWeight","marginBottom","dateOfBirth","startsWith","Image","source","uri","base64Image","PlusSvg","transform","scale","renderAvatar","SearchBody","data","_React$useState","React","_React$useState2","isHovered","setIsHovered","avatarUrl","username","channelName","containerStyle","main","id","rowContainer","avatarContainer","marginLeft","deleteContainer","onMouseEnter","onMouseLeave","fetch","method","headers","btoa","name","then","response","ok","alert","location","reload","log","catch","DeleteSvg","SearchInput","setValue","unauth","_objectWithoutProperties","_excluded","isFocused","setIsFocused","isDropdownVisible","setIsDropdownVisible","navigationt","useNavigation","zIndex","icon","dismissIcon","right","translateY","dropdown","maxHeight","overflowY","boxShadow","input","paddingLeft","paddingRight","password","_useState5","_useState6","results","setResults","_useState7","_useState8","resultsUnauth","setResultsUnauth","fetchData","channelResponse","channelData","json","formattedResults","unauthResults","_loop","channel","i","push","channelId","length","userResponse","_loop2","chatUser","filteredResults","filter","result","toLowerCase","includes","SearchSvg","TextInput","placeholderTextColor","onFocus","onChangeText","TouchableOpacity","onPressIn","CrossSvg","ScrollView","map","index","MainUnauthScreen","CreateSvg","DataInput","inputMask","type","secureTextEntry","autoCompleteType","maxLength","keyboardType","inputWidth","email","inputText","setInputText","isFormValid","placeholder","borderBottomWidth","borderBottomColor","requestBody","body","errorData","errorMessage","message","test","newPassword","confirmPassword","code","receivedCode","setReceivedCode","getUserById","updatePassword","userId","queryParams","URLSearchParams","new_password","toString","_x2","handleResetPassword","encodeURIComponent","Authorization","channNameContainer","overflow","dataInputContainer","nicknameContainer","containerSettings","barContainer","barChanContainer","barText","settingsContainer","sendContainer","forwardContainer","historyContainer","profileContainer","paddingBottom","profileSettingsContainer","translateX","popupContainer","BorderButton","borderTopWidth","own","from","avatar","messageBox","borderLeftWidth","borderLeftColor","maxWidth","borderTopRightRadius","borderBottomRightRadius","ownMessageBox","ownNickname","flexWrap","ownMessage","showDeleteButton","setShowDeleteButton","user_id","MessageContext","MessageProvider","forwardedMessages","setForwardedMessages","storedMessages","addForwardedMessage","prevMessages","concat","_toConsumableArray","clearForwardedMessages","_setProfileNickname","getProfileNickname","_getProfileNickname","_setEmail","_getEmail","MainAuthScreen","_user$savedMessages","_user$savedMessages2","showPopup","setShowPopup","_useContext","userText","setUserText","updateUserCallback","useCallback","useFocusEffect","fetchUserData","fetchProfileNickname","handleClearForwardedMessages","buttons","_ref5","_objectDestructuringEmpty","handleCreateChannel","_ref6","scrollbarWidth","channels","chats","chat","userSecond","userFirst","savedMessages","_message$sender","_message$sender2","_message$sender3","_message$sender4","ForwardMessage","sender","Modal","visible","transparent","G","clipPath","Defs","ClipPath","ImageViewer","placeholderImageSource","isAvatar","Avatarimage","imageSource","ChangeAvatar","setRequestPermission","_useContext2","cameraStatus","ImagePicker","requestMediaLibraryPermissionsAsync","status","pickImageAsync","launchImageLibraryAsync","allowsEditing","quality","canceled","uploadImage","imageAsset","formData","FormData","blob","append","apiUrl","axios","openCamera","requestCameraPermissionsAsync","granted","launchCameraAsync","assets","CameraSvg","Rect","x","y","rx","strokeLinecap","NicknameInput","inputHeight","ProfileScreen","fetchEmail","getEmail","emailContainerRef","useRef","emailFontSize","setEmailFontSize","showInputField","setShowInputField","_useState9","_useState10","setRotationDeg","handleEmailLayout","fetchSavedNickname","emailContainerWidth","current","offsetWidth","Math","min","savedNickname","handleAddSvgPress","setProfileNickname","updateName","profileNickname","addSvgStyle","transition","newName","AddSvg","textOverflow","whiteSpace","ref","onLayout","BackSvg","changeEmail","setEmail","handleUpdatePassword","passwordRegex","last_password","strokeOpacity","currentUser","role","date","ident","time","Date","toLocaleTimeString","hour","minute","ownContainer","box","borderTopLeftRadius","forward","ownForward","ownTime","handleForwardPress","prevState","messageId","forwardIcon","ForwardFocusSvg","ForwardSvg","messageBoxStyles","borderBottomLeftRadius","curuser","chanInf","onMessageSent","setMessage","sendButton","handleSend","currentUsername","otherUsername","SendSvg","ChatScreen","route","params","messages","setMessages","chatData","setChatData","_useState11","_useState12","shouldFetchChatData","setShouldFetchChatData","fetchChatData","intervalId","setInterval","clearInterval","url","Error","loadChatMessages","saveChatMessages","_ref7","_message$author","_message$author2","_message$author3","MessageBody","author","MessageInput","ChannelScreen","_channelData$messages","isMember","setIsMember","isDisable","setIsDisable","_useState13","_useState14","isAdmin","setIsAdmin","_useState15","_useState16","showSettings","_useState17","_useState18","_useState19","_useState20","setChannelData","_useState21","_useState22","shouldFetchChannelData","setShouldFetchChannelData","fetchChannelData","_channelData$creator","_user$channels","isCreator","creator","member","some","members","find","undefined","saveChannelState","handleJoinLeave","prevIsMember","channelState","_ref8","_ref9","_ref10","SettingsSvg","_matchingMember$role","senderId","matchingMember","SettingsBody","content","handleDelete","auth","handleSaveChanges","ChangeSvg","adminButton","AdminFocusSvg","AdminSvg","SettingsScreen","_channelData$members","setRole","isEditingNickname","setIsEditingNickname","prevInputText","handleDeleteChannel","handleRoleChange","newRole","handleAddButtonClick","updatedChannels","editable","key","onRoleChange","ChannelUnauthScreen","_channelData$messages2","setShouldUseFocusEffect","scrollViewRef","isAtBottom","setIsAtBottom","scrollToEnd","animated","onContentSizeChange","isScrolledToBottom","contentOffset","layoutMeasurement","contentSize","App","Stack","createStackNavigator","searchValue","setSearchValue","screens","component","GreetingsScreen","options","headerLeft","HeaderLogoSvg","headerRight","headerShadowVisible","headerStyle","_ref11","_ref12","_ref13","ChangePasswordScreen","_ref14","ChangeEmailScreen","_ref15","AuthScreen","_ref16","RegScreen","_ref17","ForgotScreen","_ref18","NavigationContainer","Navigator","screen","Screen","Font","loadAsync","require","loadFonts","renderApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}